<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>firstOne</title>
    <url>/2022/01/09/1/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>前端</category>
      </categories>
  </entry>
  <entry>
    <title>linux常用命令</title>
    <url>/2022/01/12/Linux%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h4 id="1-系统状况"><a href="#1-系统状况" class="headerlink" title="1.系统状况"></a>1.系统状况</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">top # 查看所有进程的信息，M按内存排序，p按cpu排序</span><br><span class="line">df -h # 查看硬盘使用情况</span><br><span class="line">free -h # 查看内存使用情况</span><br><span class="line">du -sh # 查看当前目录占用的硬盘空间</span><br><span class="line">ps aux # 查看所有进程</span><br><span class="line">kill -9 pid # 杀死编号pid的进程</span><br><span class="line">netstat -nt #查看所有网络连接</span><br><span class="line">w #列出当前登录的用户</span><br><span class="line">ping www.baidu.com # 检查是否联网</span><br></pre></td></tr></table></figure>

<h4 id="2-文件权限"><a href="#2-文件权限" class="headerlink" title="2.文件权限"></a>2.文件权限</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod +x xxx <span class="comment">#添加可执行权限</span></span><br><span class="line">chmod +x xxx -R <span class="comment">#递归地修改整个文件</span></span><br></pre></td></tr></table></figure>

<h4 id="3-文件"><a href="#3-文件" class="headerlink" title="3.文件"></a>3.文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find path -name <span class="string">&#x27;*.py&#x27;</span> <span class="comment">#搜索某个路径下的.py文件</span></span><br><span class="line">grep xxx <span class="comment"># stdin读入若干行数据</span></span><br><span class="line">wc <span class="comment"># 统计行数等 -l 行数 -w 单词数 -c 字节数</span></span><br><span class="line">tree <span class="comment">#展示文件结构，-a展示隐藏文件</span></span><br><span class="line">ag xxx <span class="comment">#搜索当前目录下的所有文件，检索xxx字符</span></span><br><span class="line">cut -d <span class="string">&#x27;分割符&#x27;</span> -f 3,5 <span class="comment">#分割符分开的第3，第5列</span></span><br><span class="line">sort <span class="comment">#按字典序排序</span></span><br><span class="line">xargs <span class="comment">#将stdin数据分割成命令</span></span><br><span class="line">head -3 xxx <span class="comment">#展示前三行内容，tail是尾部</span></span><br></pre></td></tr></table></figure>

<h4 id="4-工具"><a href="#4-工具" class="headerlink" title="4.工具"></a>4.工具</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">time <span class="built_in">command</span> <span class="comment">#统计command的执行时间</span></span><br><span class="line">ipython3 <span class="comment">#小型jupyter</span></span><br><span class="line">tar -zcvf xxx.tar.gz path <span class="comment">#压缩至</span></span><br><span class="line">tar -zxvf xxx.tar.gz <span class="comment">#解压</span></span><br><span class="line">diff xxx yyy <span class="comment">#查找两个文件的不同点</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux命令</tag>
      </tags>
  </entry>
  <entry>
    <title>AI第一天</title>
    <url>/2022/02/21/AI_Day1/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>django后端AI训练</title>
    <url>/2022/01/12/django/</url>
    <content><![CDATA[<h4 id="1-初始配置"><a href="#1-初始配置" class="headerlink" title="1.初始配置"></a>1.初始配置</h4><p>如果想完美贴合本次教程的环境，可以联系作者发送docker文件以确保环境相同。</p>
<p>在此之前若未安装docker可以先安装，安装教程<a href="https://luohk19.github.io/2022/01/12/%E7%A7%9F%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%8E%AF%E5%A2%83/">如此</a>，docker的使用教程[如此](<a href="https://luohk19.github.io/2022/01/12/docker/">docker使用 | luohk19</a>)。</p>
<p>安装镜像后，创建容器，开启项目，配置git</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">django-admin --version #检查是否安装</span><br><span class="line"></span><br><span class="line">django-admin startproject mysite #创建项目 xxx</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看目录</span></span><br><span class="line">mysite/ #项目容器，可以随时改名</span><br><span class="line">	manage.py/ # 管理项目的命令行工具</span><br><span class="line">	mysite/ </span><br><span class="line">		__init__.py # 告诉python这个目录要被认为是一个包</span><br><span class="line">		settings.py # 配置文件</span><br><span class="line">		urls.py	# 路由文件</span><br><span class="line">		asgi.py # asgi在web服务器上的入口</span><br><span class="line">		wsgi.py # wsgi在web服务器上的入口</span><br><span class="line"></span><br><span class="line">git init #创建git环境</span><br></pre></td></tr></table></figure>

<h4 id="2-开始"><a href="#2-开始" class="headerlink" title="2.开始"></a>2.开始</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#初始运行</span></span><br><span class="line">python3 manage.py runserver <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8000</span></span><br><span class="line"><span class="comment">#当用本地的host访问时会报错，需要在/acapp/settings.py内添加对应的allowed_hosts</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建app</span></span><br><span class="line">python3 manage.py startapp game</span><br><span class="line"></span><br><span class="line"><span class="comment">#及时更新</span></span><br><span class="line">python3 manage.py migrate</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建管理员用户</span></span><br><span class="line">python3 manage.py createsuperuser <span class="comment">#随后打开host:port/admin登录</span></span><br><span class="line"><span class="comment">#随后创建urls.py,templates文件夹</span></span><br></pre></td></tr></table></figure>

<h4 id="3-创建路由"><a href="#3-创建路由" class="headerlink" title="3.创建路由"></a>3.创建路由</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在game app内创建的urls.py 中仿照总acapp内的urls.py 写url</span></span><br><span class="line"><span class="comment"># 最后在总的urls内添加对应的path</span></span><br><span class="line">```game/urls.py</span><br><span class="line"><span class="keyword">import</span> game.views <span class="keyword">import</span> index</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, index, name=<span class="string">&quot;index&quot;</span>)</span><br><span class="line">]</span><br><span class="line">```</span><br><span class="line">```game/views.py</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;hello World!&#x27;</span>)</span><br><span class="line">```</span><br><span class="line">```acapp/urls.py</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> include</span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;game/&#x27;</span>, include(<span class="string">&#x27;game.urls&#x27;</span>)), <span class="comment">#当只有一个app时不需要写&#x27;game/&#x27;</span></span><br><span class="line">    ...</span><br><span class="line">]</span><br><span class="line">```</span><br></pre></td></tr></table></figure>

<h4 id="4-储存数据"><a href="#4-储存数据" class="headerlink" title="4.储存数据"></a>4.储存数据</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要在mysite的settings.py文件夹中加入，指示静态数据的位置</span></span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;static&#x27;</span>) <span class="comment">#在lenet下创建static文件夹</span></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;media&#x27;</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>django</tag>
        <tag>后端</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker使用</title>
    <url>/2022/01/12/docker/</url>
    <content><![CDATA[<h4 id="1-前期配置"><a href="#1-前期配置" class="headerlink" title="1.前期配置"></a>1.前期配置</h4><p>请看<a href="https://luohk19.github.io/2022/01/12/%E7%A7%9F%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%8E%AF%E5%A2%83/">服务器配置</a>，完成后便可开始</p>
<h4 id="2-Docker概念"><a href="#2-Docker概念" class="headerlink" title="2.Docker概念"></a>2.Docker概念</h4><h5 id="2-1-Docker的结构"><a href="#2-1-Docker的结构" class="headerlink" title="2.1 Docker的结构"></a>2.1 Docker的结构</h5><p>$docker\begin{cases}image \begin{cases}container \cr container \cr … \end{cases}   \cr image \cr …\end{cases}$</p>
<h5 id="2-2-Docker的小概念"><a href="#2-2-Docker的小概念" class="headerlink" title="2.2 Docker的小概念"></a>2.2 Docker的小概念</h5><p>采用相同的image（镜像）生成的container（容器）配置都相同。</p>
<p>每个container都是完全独立的云端服务器，docker管理image时会采取空间优化。</p>
<p>未来如果需要迁移container，可以先生成image（可下载到其他服务器加载）</p>
<h4 id="3-Docker-Images"><a href="#3-Docker-Images" class="headerlink" title="3.Docker Images"></a>3.Docker Images</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull ubuntu:20.04 <span class="comment">#可以拉取一个镜像 name:tag</span></span><br><span class="line"></span><br><span class="line">docker images <span class="comment">#查看目前存在的image</span></span><br><span class="line"></span><br><span class="line">docker rmi &lt;imageName&gt; <span class="comment">#便可删除对应镜像</span></span><br><span class="line"></span><br><span class="line">docker save -o ubuntu_20_04.tar ubuntu:20.04 <span class="comment">#保存镜像,可以用ls -l查看权限</span></span><br><span class="line"><span class="comment"># 查看权限后发现仅自己有可读写权限，因此需要添加权限</span></span><br><span class="line"></span><br><span class="line">docker load -i ubuntu_20_04.tar <span class="comment">#读取生成镜像</span></span><br><span class="line"><span class="comment">#可以将原镜像删去再检验</span></span><br></pre></td></tr></table></figure>

<p>自此通过scp命令可以实现不同服务器的镜像迁移</p>
<h4 id="4-Docker-Container"><a href="#4-Docker-Container" class="headerlink" title="4.Docker Container"></a>4.Docker Container</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker create -it ubuntu:20.04 <span class="comment">#利用image生成container</span></span><br><span class="line"></span><br><span class="line">docker ps -a <span class="comment">#查看创建了的容器，无a则展示正在运行的</span></span><br><span class="line"></span><br><span class="line">docker start CONTAINER_ID <span class="comment">#启动容器，docker ps检验</span></span><br><span class="line"></span><br><span class="line">docker stop CONTAINER_ID <span class="comment">#停止容器，docker ps检验</span></span><br><span class="line"></span><br><span class="line">docker restart CONTAINER_ID <span class="comment">#重启</span></span><br><span class="line"></span><br><span class="line">docker run -itd ubuntu:20.04 <span class="comment">#创建并启动container</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#CONTAINER_ID 与 CONTAINER_NAME 都可以，下面用CONTAINER代替</span></span><br><span class="line"></span><br><span class="line">docker attach CONTAINER <span class="comment">#进入容器，前提是已启动，默认root</span></span><br><span class="line"><span class="comment">#想退出？ ctrl+p 再 ctrl+q, ctrl+q是用于挂起，否则直接关闭</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> CONTAINER COMMAND <span class="comment">#在某容器内执行命令，!!!容器必须运行</span></span><br><span class="line"></span><br><span class="line">docker rm CONTAINER <span class="comment">#删除容器，注意rmi与rm的区别</span></span><br><span class="line"><span class="comment">#删除前要停止容器，全删除已停止的容器为docker container prune</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">export</span> -o xxx.tar CONTAINER <span class="comment">#不保存历史记录等，占用内存比save更少</span></span><br><span class="line"><span class="comment">#注意添加可读权限</span></span><br><span class="line"></span><br><span class="line">docker import xxx.tar ubuntu:20.04 <span class="comment">#导入，实现容器到其他服务器镜像的迁移</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#剩下的都是一些小操作</span></span><br><span class="line">docker top CONTAINER <span class="comment">#查看容器的的所有进程</span></span><br><span class="line">docker stats <span class="comment">#查看所有容器的信息cpu等</span></span><br><span class="line">docker cp xxx CONTAINER:XXX <span class="comment">#本地与容器之间传递信息</span></span><br><span class="line">docker rename CONTAINER1 CONTAINER2 <span class="comment">#重命名</span></span><br><span class="line">docker update CONTAINER --XXX XXX <span class="comment">#更新各种参数</span></span><br></pre></td></tr></table></figure>

<h4 id="5-对于vscode"><a href="#5-对于vscode" class="headerlink" title="5.对于vscode"></a>5.对于vscode</h4><p>在docker挂起时，可能会发生vscode的快捷键冲突，因此需要找到左下角设置-&gt;快捷键</p>
<p>再查找ctrl+q的快捷方式，将视图的when条件加上 !terminalFocus 便可</p>
<p>解决方法来源于stackOverFlow</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>bash</title>
    <url>/2022/01/10/bash/</url>
    <content><![CDATA[<h4 id="1-Hello-World"><a href="#1-Hello-World" class="headerlink" title="1. Hello World"></a>1. Hello World</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> <span class="comment">#双引号表示执行，单引号表示单纯输出</span></span><br><span class="line"></span><br><span class="line">chmod +x xxx.sh <span class="comment">#使xxx.sh脚本具有执行能力</span></span><br></pre></td></tr></table></figure>

<h4 id="2-注释"><a href="#2-注释" class="headerlink" title="2.注释"></a>2.注释</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:&lt;&lt;!</span><br><span class="line">注释 <span class="comment"># !是任意字符串，#也可</span></span><br><span class="line">!</span><br></pre></td></tr></table></figure>

<h4 id="3-变量"><a href="#3-变量" class="headerlink" title="3.变量"></a>3.变量</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name=<span class="string">&#x27;luohk&#x27;</span></span><br><span class="line">name=<span class="string">&quot;luohk&quot;</span></span><br><span class="line">name=luohk <span class="comment">#三种都是一样的</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span> <span class="comment"># luohk</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name&#125;</span>19 <span class="comment"># luohk19</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">readonly</span> name <span class="comment">#只读变量</span></span><br><span class="line"><span class="built_in">declare</span> -r name <span class="comment">#另一种写法</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> name <span class="comment">#删除变量</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> name <span class="comment">#自定义转环境</span></span><br><span class="line"><span class="built_in">export</span> name=luohk <span class="comment">#环境转自定义</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#name&#125;</span> <span class="comment"># 5</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#name:0:3&#125;</span> <span class="comment">#luo</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#默认变量 $0, $1, $2</span></span><br><span class="line"><span class="comment"># $# 传入参数个数; $* 用空格隔开; $@ 参数用双引号括起来</span></span><br></pre></td></tr></table></figure>

<h4 id="4-数组"><a href="#4-数组" class="headerlink" title="4.数组"></a>4.数组</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">array=(1 xyz luohk) <span class="comment">#用空格隔开</span></span><br><span class="line">array[1] = xyz <span class="comment">#按index取</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;array[index]&#125;</span> <span class="comment">#按index取值</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;array[*]&#125;</span> || <span class="variable">$&#123;array[@]&#125;</span> <span class="comment">#取整个数组,获取数组长度在前加#</span></span><br></pre></td></tr></table></figure>

<h4 id="5-expr"><a href="#5-expr" class="headerlink" title="5.expr"></a>5.expr</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">str = <span class="string">&quot;hello world!&quot;</span></span><br><span class="line"><span class="built_in">echo</span> `expr length <span class="string">&quot;<span class="variable">$str</span>&quot;</span>` <span class="comment">#注意不是单引号，输出12</span></span><br><span class="line"><span class="built_in">echo</span> `expr index <span class="string">&quot;<span class="variable">$str</span>&quot;</span> aWd` <span class="comment">#输出任意一个字符在最前面的位置</span></span><br><span class="line"><span class="built_in">echo</span> `expr substr <span class="string">&quot;<span class="variable">$str</span>&quot;</span> 2 3` <span class="comment">#index从1开始,ell</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> \* <span class="variable">$b</span>` <span class="comment">#支持乘法操作，但乘法需要转义</span></span><br><span class="line"><span class="built_in">echo</span> `expr \( <span class="variable">$a</span> + 1 \) \* \( <span class="variable">$b</span> + 1 \)` <span class="comment">#括号也需要转义</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> <span class="string">&#x27;&lt;&#x27;</span> <span class="variable">$b</span>` | <span class="built_in">echo</span> `expr <span class="variable">$a</span> \&lt; <span class="variable">$b</span>` <span class="comment">#一样，小于等于等需要连续转义</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &amp;运算当两个非零时，返回第一个参数，否则返回0；若第一个为0或空，不计算第二个</span></span><br><span class="line"><span class="comment"># |运算，优先返回非空非0的值；若第一个参数非空或非0时，不会计算第二个参数</span></span><br></pre></td></tr></table></figure>

<h4 id="6-读取，-echo，printf-类似c-c-的"><a href="#6-读取，-echo，printf-类似c-c-的" class="headerlink" title="6.读取， echo，printf(类似c/c++的)"></a>6.读取， echo，printf(类似c/c++的)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">read</span> name <span class="comment">#读取输入至name</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;please input your name&quot;</span> -t 30 name <span class="comment">#等三十秒提示输入到名字</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Hi\n&quot;</span> <span class="comment"># -e开启转义, Hi回车</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello World&quot;</span> &gt; output.txt <span class="comment">#输出到特定文件</span></span><br><span class="line"><span class="built_in">echo</span> `date` <span class="comment">#输出时间</span></span><br></pre></td></tr></table></figure>

<h4 id="7-test"><a href="#7-test" class="headerlink" title="7.test"></a>7.test</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">man <span class="built_in">test</span> <span class="comment">#可以查看test的用法</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> 2 -lt 3 <span class="comment"># 0表示真</span></span><br><span class="line"><span class="built_in">echo</span> $? <span class="comment">#输出上一个命令的返回值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> -e filename <span class="comment">#判断是否存在， -f是否为文件，-d是否为目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#类似地， -r是否可读， -w可写， -x可执行， -s是否为空</span></span><br><span class="line"><span class="comment"># -eq -ne -gt -lt -ge -le latex懂得都懂</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#字符串也可比较</span></span><br><span class="line"><span class="built_in">test</span> str1 == str2</span><br><span class="line"><span class="built_in">test</span> str1 != str2</span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> -r filename -a -x filename <span class="comment"># -a是否同时成立， -o至少一个成立，！取反</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [] 与 test 类似</span></span><br></pre></td></tr></table></figure>

<h4 id="8-判断"><a href="#8-判断" class="headerlink" title="8.判断"></a>8.判断</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition  <span class="comment">#condition用上面的[]实现</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">	<span class="comment">#blabla</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if-else</span></span><br><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line">	<span class="comment">#blabla</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="comment">#blabla</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if-elif-else</span></span><br><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">	<span class="comment">#blabla</span></span><br><span class="line"><span class="keyword">elif</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">	<span class="comment">#blabla</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="comment">#blabla</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#case</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$name</span> <span class="keyword">in</span></span><br><span class="line">	value1)</span><br><span class="line">		<span class="comment">#bla</span></span><br><span class="line">		;;</span><br><span class="line">	value2)</span><br><span class="line">		<span class="comment">#bla</span></span><br><span class="line">		;;</span><br><span class="line">	*)</span><br><span class="line">		<span class="comment">#bla</span></span><br><span class="line">		;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>

<h4 id="9-循环语句"><a href="#9-循环语句" class="headerlink" title="9.循环语句"></a>9.循环语句</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#形式1</span></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> var1 var2 var3</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="comment">#blabla</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#例子</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 10) <span class="comment"># &#123;a..z&#125;输出a到z</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span> <span class="comment">#输出1到10</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#形式2</span></span><br><span class="line"><span class="keyword">for</span> ((expr;cond;expr))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="comment">#bla</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#例子</span></span><br><span class="line"><span class="keyword">for</span> ((i=1; i&lt;=10; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#形式3</span></span><br><span class="line"><span class="keyword">while</span> condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="comment">#bla</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#例子</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> name</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#形式4，while改until根据意思就知道</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#break命令无法跳出case，;;才行</span></span><br><span class="line"><span class="comment">#break命令可以跳出一层循环</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#continue类似</span></span><br></pre></td></tr></table></figure>

<h4 id="10-函数"><a href="#10-函数" class="headerlink" title="10.函数"></a>10.函数</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">function</span>] <span class="function"><span class="title">func_name</span></span>() &#123;</span><br><span class="line">	<span class="comment">#bla</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># $(func_name) 获取中间stdout的值</span></span><br><span class="line"><span class="comment"># $?获取上一次调用的返回</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">	name=luohk</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;hello <span class="variable">$name</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output=$(func)</span><br><span class="line">ret=$?</span><br><span class="line"></span><br><span class="line"><span class="comment">#函数内采用 $1, $2来取输入参数，但$0仍是文件名</span></span><br><span class="line"><span class="built_in">echo</span> $(func 10)</span><br><span class="line"></span><br><span class="line"><span class="comment">#局部变量</span></span><br><span class="line"><span class="built_in">local</span> name=luohk</span><br></pre></td></tr></table></figure>

<h4 id="11-exit、文件重定向、引入外部脚本"><a href="#11-exit、文件重定向、引入外部脚本" class="headerlink" title="11.exit、文件重定向、引入外部脚本"></a>11.exit、文件重定向、引入外部脚本</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exit</span> 0 <span class="comment">#表示成功 且 能被$?接收</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">command</span> &gt; file <span class="comment">#将stdout重定向到file中</span></span><br><span class="line"><span class="built_in">command</span> &gt;&gt; file <span class="comment">#追加方式</span></span><br><span class="line"><span class="comment">#反之是读入</span></span><br><span class="line"></span><br><span class="line">```test.sh</span><br><span class="line"><span class="comment">#! /bin/bash</span></span><br><span class="line"><span class="built_in">read</span> a</span><br><span class="line"><span class="built_in">read</span> b</span><br><span class="line"><span class="built_in">echo</span> $(expr <span class="string">&quot;<span class="variable">$a</span>&quot;</span> + <span class="string">&quot;<span class="variable">$b</span>&quot;</span>)</span><br><span class="line">```</span><br><span class="line">```input.txt</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">```</span><br><span class="line">chmod +x test.sh</span><br><span class="line">./test.sh &lt; input.txt &gt; output.txt</span><br><span class="line">cat output.txt <span class="comment"># 7</span></span><br><span class="line"><span class="comment">#用这个也可以实现对拍噢</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> test1.sh</span><br><span class="line"><span class="comment">#可以使用test1.sh内的变量</span></span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>bash</tag>
      </tags>
  </entry>
  <entry>
    <title>os xv6源码解读(操作系统接口)</title>
    <url>/2022/02/22/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/os_day1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="21426ad87cb8dd9a870a202dd6fb89a1251330a87ac6337bf97cd158155da9fe"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/01/08/hello-world/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="60d335b7180a6957abe64f977aafef3d3a993b5bff30507ffd9f3e75ef7790de">10d79030e8222445804370796b90fca1fcf46a07b5ecf341c635269a7fe842f80cf07e697ff3618a365f409d43ee2a0b71169e7502cdfd2ac90458dd940f8bc9dffd4520316db24d3e303037ca2d5032e72bf872f07e40dbb3cf3ace773ac1c9</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>租服务器的环境配置</title>
    <url>/2022/01/12/%E7%A7%9F%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h4 id="1-购买指南及前期操作"><a href="#1-购买指南及前期操作" class="headerlink" title="1.购买指南及前期操作"></a>1.购买指南及前期操作</h4><ul>
<li><p>内存不需要买太大（1核2G），后期动态扩容</p>
</li>
<li><p>不用买最大带宽，按量付费更实惠</p>
</li>
<li><p>选择ubuntu20.04，支持后续docker</p>
</li>
<li><p>安全组控制能访问那些端口（起码要有22端口）ssh，在sshconfig修改允许登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/ssh</span><br><span class="line">sudo vim sshd_config</span><br></pre></td></tr></table></figure></li>
<li><p>创建非root用户，给予sudo权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adduser luohk</span><br><span class="line">usermod -aG sudo luohk</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 装tmux, 根据自己的需求更改tmux.conf</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="2-在docker上配置"><a href="#2-在docker上配置" class="headerlink" title="2.在docker上配置"></a>2.在docker上配置</h4><h5 id="2-1-安装docker"><a href="#2-1-安装docker" class="headerlink" title="2.1 安装docker"></a>2.1 安装docker</h5><p><a href="https://docs.docker.com/engine/install/ubuntu/">Install Docker Engine on Ubuntu | Docker Documentation</a></p>
<p>到install Docker Engine第一步结束就可</p>
<h5 id="2-2-加入docker用户组"><a href="#2-2-加入docker用户组" class="headerlink" title="2.2 加入docker用户组"></a>2.2 加入docker用户组</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 不用每次都输入sudo</span></span><br><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>server</tag>
      </tags>
  </entry>
  <entry>
    <title>os xv6源码解读(操作系统架构)</title>
    <url>/2022/03/25/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/os_day2/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="99d27d7f1b7b5810d9ef0639ae5ea17c8af90c14e37bf66bb671c407656d3ce4"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>os xv6源码解读(操作系统页表)</title>
    <url>/2022/03/25/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/os_day3/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="b86583d25795d6244c82e5893b7d18107baf063efe5910c1d68b45e374bab0ff"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>os xv6源码解读(操作系统陷入机制)</title>
    <url>/2022/03/25/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/os_day4/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="23e1b01b2deebc62d5d542009d82ae8c6465efcbaa2867769a6d6c47ef4e347e"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>os xv6源码解读(操作系统锁)</title>
    <url>/2022/03/26/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/os_day6/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="4a9a8827f4ac2d226325d490895294decce264ad6a0ed51be685b9f9c67a3dca"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>os xv6源码解读(操作系统调度)</title>
    <url>/2022/03/26/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/os_day7/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="0fe4d7424a9982d4d9fa09b0dec38a3c90fa348de12da1b1344942be65ab93d6"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>os xv6源码解读(操作系统文件系统)</title>
    <url>/2022/03/27/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/os_day8/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="2c04f80e5ed8675ba08fd6cb0f89a1da31d6cad04570dd516f8135df0fda20de"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编第一天</title>
    <url>/2022/02/08/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96_Day1/</url>
    <content><![CDATA[<h2 id="1-General-Purpose-Registers"><a href="#1-General-Purpose-Registers" class="headerlink" title="1. General Purpose Registers"></a>1. General Purpose Registers</h2><p>1.1. 32bit寄存器为4bytes，即xxxxh。</p>
<p>1.2. 以32位寄存器eax举例，内部还有低16bit[ax]，在ax内还分为高八位ah与低八位al</p>
<p>1.3. 对于64bit-Processors，将前面的e改成r或删去最后的D</p>
<p><a href="https://imgtu.com/i/H1pd6e"><img src="https://s4.ax1x.com/2022/02/08/H1pd6e.png" alt="寄存器" style="zoom: 80%;" /></a></p>
<p>1.3. 之所以为general purpose register，作用如下：</p>
<p><a href="https://imgtu.com/i/H19F1O"><img src="https://s4.ax1x.com/2022/02/08/H19F1O.png" alt="H19F1O.png"></a></p>
<h2 id="2-计算地址偏移量"><a href="#2-计算地址偏移量" class="headerlink" title="2. 计算地址偏移量"></a>2. 计算地址偏移量</h2><p>example:  08F1:0100的实际地址为08F10+0100=09010，即起始地址*16</p>
<p>？可能是由于地址范围大，需要用更少的位数表达更大的地址</p>
<h2 id="3-汇编程序的一般格式"><a href="#3-汇编程序的一般格式" class="headerlink" title="3. 汇编程序的一般格式"></a>3. 汇编程序的一般格式</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.386</span><br><span class="line">.model flat, stdcall</span><br><span class="line">.stack 4096</span><br><span class="line">ExitProcess PROTO, dwExitCode:DWORD</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">; declare variables here, ; leads comment</span><br><span class="line">COMMENT !</span><br><span class="line">	;multi-lines comments</span><br><span class="line">!</span><br><span class="line">.code</span><br><span class="line">main PROC</span><br><span class="line">	; write your code here</span><br><span class="line">	INVOKE ExitProcess, 0</span><br><span class="line">main ENDP</span><br><span class="line"></span><br><span class="line">; insert additional procedures here</span><br><span class="line">END main</span><br></pre></td></tr></table></figure>

<h2 id="4-汇编的常见元素"><a href="#4-汇编的常见元素" class="headerlink" title="4. 汇编的常见元素"></a>4. 汇编的常见元素</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; 进制</span><br><span class="line">h hexadecimal</span><br><span class="line">d decimal</span><br><span class="line">b binary</span><br><span class="line">o octal</span><br><span class="line"></span><br><span class="line">; 操作</span><br><span class="line">stc ; set carry flag, no operands</span><br><span class="line"></span><br><span class="line">inc eax ; register</span><br><span class="line">inc myByte ; memory one operand</span><br><span class="line"></span><br><span class="line">add ebx, ecx ; register register</span><br><span class="line">sub myByte, 25 ; memory constant</span><br><span class="line">add eax, 36*25 ; register constant-expression</span><br></pre></td></tr></table></figure>

<h2 id="5-一个简单汇编例子"><a href="#5-一个简单汇编例子" class="headerlink" title="5. 一个简单汇编例子"></a>5. 一个简单汇编例子</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TITLE add and subtract</span><br><span class="line"></span><br><span class="line">.386</span><br><span class="line">.model flat, stdcall</span><br><span class="line">.stack 4096</span><br><span class="line"></span><br><span class="line">ExitProcess PROTO. dwExitCode:DWORD</span><br><span class="line">DumpRegs PROTO</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">main PROC</span><br><span class="line">	mov eax, 10000h	; eax = 10000h</span><br><span class="line">	add eax, 40000h ; eax = 50000h</span><br><span class="line">	sub eax, 20000h ; eax = 30000h</span><br><span class="line">	call DumpRegs</span><br><span class="line">	INVOKE ExitProcess, 0</span><br><span class="line">main ENDP</span><br><span class="line">END main</span><br></pre></td></tr></table></figure>

<h2 id="6-汇编过程"><a href="#6-汇编过程" class="headerlink" title="6.汇编过程"></a>6.汇编过程</h2><p><a href="https://imgtu.com/i/H1Pq9P"><img src="https://s4.ax1x.com/2022/02/08/H1Pq9P.png" alt="H1Pq9P.png"></a></p>
<h2 id="7-数据类型"><a href="#7-数据类型" class="headerlink" title="7. 数据类型"></a>7. 数据类型</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; integer</span><br><span class="line">BYTE, SBYTE ; 8bit unsigned and signed</span><br><span class="line">WORD, SWORD ; 16it</span><br><span class="line">DWORD, SDWORD ; 32bit</span><br><span class="line">QWORD ; 64bit</span><br><span class="line">TBYTE ; 80bit integer</span><br><span class="line"></span><br><span class="line">; real</span><br><span class="line">REAL4 ; 4byte IEEE short real</span><br><span class="line">REAL8 ; 8byte long</span><br><span class="line">REAL10 ; 10byte extended</span><br><span class="line"></span><br><span class="line">; define variables</span><br><span class="line">val1 BYTE &#x27;A&#x27;</span><br><span class="line">val2 SBYTE +127 ; largest signed byte</span><br><span class="line">list1 BYTE 10, 20, 30, 40 ; list</span><br><span class="line">str1 BYTE &quot;enter your name&quot;, 0 ; null-terminated</span><br><span class="line"></span><br><span class="line">; 如果想实现回车，需要在末尾加入0dh,0ah</span><br><span class="line">; 0dh = carriage return</span><br><span class="line">; 0ah = line feed</span><br><span class="line">; 一个是回车，一个是换行</span><br><span class="line"></span><br><span class="line">; Using DUP operator</span><br><span class="line">var1 BYTE 20 DUP(0) ; 20 bytes, all equal to 0</span><br><span class="line">var2 BYTE 20 DUP(?) ; 20 bytes, uninitialized</span><br></pre></td></tr></table></figure>

<h2 id="8-小端法与大端法"><a href="#8-小端法与大端法" class="headerlink" title="8. 小端法与大端法"></a>8. 小端法与大端法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">little endian order means least significant to low memory address</span><br><span class="line">big endian order is the opposite</span><br><span class="line"></span><br><span class="line">val1 DWORD 12345678h</span><br></pre></td></tr></table></figure>

<h2 id="9-Symbolic-Constants"><a href="#9-Symbolic-Constants" class="headerlink" title="9. Symbolic Constants"></a>9. Symbolic Constants</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; calculating the size of a byte array</span><br><span class="line">list BYTE 10, 20, 30, 40</span><br><span class="line">ListSize = ($ - list)</span><br><span class="line">; if it&#x27;s a word, listSize should be divided by 2</span><br><span class="line"></span><br><span class="line">; EQU Directive that can&#x27;t be redefined</span><br><span class="line">PI EQU &lt;3.1416&gt;</span><br><span class="line">pressKey EQU &lt;&quot;press any key to continue..&quot;,0&gt;</span><br><span class="line">.data</span><br><span class="line">prompt BYTE pressKey</span><br><span class="line"></span><br><span class="line">; TEXTEQU Directive that can be redefined</span><br><span class="line">continueMsg TEXTEQU &lt;&quot;Do you wish to continue (Y/N)?&quot;&gt;</span><br><span class="line">rowSize = 5</span><br><span class="line">.data</span><br><span class="line">prompt1 BYTE continueMsg</span><br><span class="line">count TEXTEQU %(rowSize * 2)</span><br><span class="line">setupAL TEXTEQU &lt;mov al, count&gt;</span><br><span class="line">.code</span><br><span class="line">	setupAL</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>汇编</category>
      </categories>
      <tags>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编第Ⅹ天</title>
    <url>/2022/02/22/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96_Day10/</url>
    <content><![CDATA[<h2 id="1-concept"><a href="#1-concept" class="headerlink" title="1. concept"></a>1. concept</h2><h4 id="1-1-Compilation"><a href="#1-1-Compilation" class="headerlink" title="1.1    Compilation"></a>1.1    Compilation</h4><p>translation from one language to simpler and more low-level one.</p>
<p>for example, C to assembly language.</p>
<span id="more"></span>

<h4 id="1-2-Compiler"><a href="#1-2-Compiler" class="headerlink" title="1.2    Compiler"></a>1.2    Compiler</h4><p>the program that does the translation is known as compiler.</p>
<h4 id="1-3-Preprocessor"><a href="#1-3-Preprocessor" class="headerlink" title="1.3    Preprocessor"></a>1.3    Preprocessor</h4><p>produce input to compilers and perform the following functions</p>
<p>Macro inclusion</p>
<p>File inclusion</p>
<p>Rational preprocessor</p>
<p>Language extension</p>
<h4 id="1-4-Assemblers"><a href="#1-4-Assemblers" class="headerlink" title="1.4    Assemblers"></a>1.4    Assemblers</h4><p>assembly code is passed to an assembler for further processing</p>
<p>Relation?</p>
<p>Assembly code is mnemonic version of machine code</p>
<p>names are used instead of binary codes for operations</p>
<p>names are also given to memory address.</p>
<h4 id="1-5-Loaders-and-Link-Editors"><a href="#1-5-Loaders-and-Link-Editors" class="headerlink" title="1.5    Loaders and Link-Editors"></a>1.5    Loaders and Link-Editors</h4><p><a href="https://imgtu.com/i/HvgTXj"><img src="https://s4.ax1x.com/2022/02/21/HvgTXj.png" alt="HvgTXj.png"></a></p>
<h4 id="1-6-编译程序和解释程序"><a href="#1-6-编译程序和解释程序" class="headerlink" title="1.6    编译程序和解释程序"></a>1.6    编译程序和解释程序</h4><p>编译程序先将程序翻译再执行，即先编译后运行，独立分开的过程。</p>
<p>解释程序接受某个语言的程序并立即运行，适合交互</p>
<h4 id="1-7-Syntax-Tree"><a href="#1-7-Syntax-Tree" class="headerlink" title="1.7    Syntax Tree"></a>1.7    Syntax Tree</h4><p>make Operations into a hierachical structure.</p>
<p><a href="https://imgtu.com/i/Hv2LKH"><img src="https://s4.ax1x.com/2022/02/21/Hv2LKH.png" alt="Hv2LKH.png"></a></p>
<h4 id="1-8-Symbol-Table"><a href="#1-8-Symbol-Table" class="headerlink" title="1.8    Symbol-Table"></a>1.8    Symbol-Table</h4><p>it’s a data-structure</p>
<p><a href="https://imgtu.com/i/HvhVZd"><img src="https://s4.ax1x.com/2022/02/21/HvhVZd.png" alt="HvhVZd.png"></a></p>
<h4 id="1-9-句型与句子"><a href="#1-9-句型与句子" class="headerlink" title="1.9    句型与句子"></a>1.9    句型与句子</h4><p>句型仅仅要求v -*&gt; w; 句子要求v -*&gt; w 且 w $\in V_T^*$ </p>
<p>因此，句子也是句型。</p>
]]></content>
      <categories>
        <category>汇编</category>
      </categories>
      <tags>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编第二天</title>
    <url>/2022/02/08/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96_Day2/</url>
    <content><![CDATA[<h2 id="1-Direct-Memory-Operand"><a href="#1-Direct-Memory-Operand" class="headerlink" title="1. Direct Memory Operand"></a>1. Direct Memory Operand</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">var1 BYTE 10h</span><br><span class="line">.code</span><br><span class="line">mov al, var1</span><br><span class="line">mov al, [var1]</span><br></pre></td></tr></table></figure>

<h4 id="1-1-mov-instruction"><a href="#1-1-mov-instruction" class="headerlink" title="1.1 mov instruction"></a>1.1 mov instruction</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">count BYTE 100</span><br><span class="line">wVal WORD 2</span><br><span class="line">.code</span><br><span class="line">	mov bl, count</span><br><span class="line">	mov ax, wVal</span><br><span class="line">	mov count, al</span><br><span class="line">; 需要控制大小</span><br></pre></td></tr></table></figure>

<p>为解决以上需要控制大小的问题，引入了以下两种操作：</p>
<ol>
<li>movzx 用0填补空缺</li>
<li>movsx 用1填补空缺</li>
</ol>
<h4 id="1-2-xchg-instruction"><a href="#1-2-xchg-instruction" class="headerlink" title="1.2 xchg instruction"></a>1.2 xchg instruction</h4><p>至少有一个register</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">var1 WORD 1000h</span><br><span class="line">var2 WORD 2000h</span><br><span class="line">.code</span><br><span class="line">xchg ax, bx</span><br><span class="line">xchg var1, bx</span><br><span class="line">xchg ah, al</span><br></pre></td></tr></table></figure>

<h2 id="2-Direct-Offset-Operands"><a href="#2-Direct-Offset-Operands" class="headerlink" title="2. Direct-Offset Operands"></a>2. Direct-Offset Operands</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">arrayB BYTE 10h, 20h, 30h, 40h</span><br><span class="line">.code</span><br><span class="line">mov al, arrayB+1 ; al = 20h</span><br><span class="line">mov al, [arrayB + 1] ; al = 20h</span><br></pre></td></tr></table></figure>

<h2 id="3-addition-and-subtraction"><a href="#3-addition-and-subtraction" class="headerlink" title="3. addition and subtraction"></a>3. addition and subtraction</h2><h4 id="3-1-inc-and-dec"><a href="#3-1-inc-and-dec" class="headerlink" title="3.1    inc and dec"></a>3.1    inc and dec</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">	myWord WORD 1000h</span><br><span class="line">	myDword DWORD 10000000h</span><br><span class="line">.code</span><br><span class="line">	inc myWord	;1001h</span><br><span class="line">	dec myWord	;1000h</span><br><span class="line">	inc myDword ;10000001h</span><br><span class="line">	</span><br><span class="line">	mov ax, 00FFh</span><br><span class="line">	inc ax ; ax = 0100h</span><br><span class="line">	mov ax, 00FFh</span><br><span class="line">	inc al ; ax = 0000h</span><br></pre></td></tr></table></figure>

<h4 id="3-2-add-and-sub"><a href="#3-2-add-and-sub" class="headerlink" title="3.2    add and sub"></a>3.2    add and sub</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">	var1 DWORD 10000h</span><br><span class="line">	var2 DWORD 20000h</span><br><span class="line">.code				; ---EAX---</span><br><span class="line">	mov eax, var1	; 10000h</span><br><span class="line">	add eax, var2	; 30000h</span><br><span class="line">	add ax, 0FFFFh	; 3FFFFh</span><br><span class="line">	add eax, 1		; 40000h</span><br><span class="line">	sub ax, 1		; 4FFFFh</span><br></pre></td></tr></table></figure>

<h4 id="3-3-neg-instruction"><a href="#3-3-neg-instruction" class="headerlink" title="3.3    neg instruction"></a>3.3    neg instruction</h4><p>to reverse the sign of an operand</p>
<h4 id="3-4-flags"><a href="#3-4-flags" class="headerlink" title="3.4    flags"></a>3.4    flags</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; zero flag (ZF), when ans = 0, ZF = 1</span><br><span class="line">; sign flag (SF), When ans &lt; 0, SF = 1</span><br><span class="line">; carry flag (CF), when ans generates an unsigned value that&#x27;s out of range.</span><br><span class="line">; overflow flag (OF), change above unsigned to signed</span><br><span class="line">; parity flag (PF), when the number of &#x27;1&#x27; is even, PF = 1</span><br><span class="line">; auxiliary carry flag(AF), when a carry out of bit3 to bit4, AF = 1</span><br><span class="line"></span><br><span class="line">overflow flag changes when two positives or negatives add together.</span><br></pre></td></tr></table></figure>

<h2 id="4-Data-Related-Operators-and-Directives"><a href="#4-Data-Related-Operators-and-Directives" class="headerlink" title="4. Data-Related Operators and Directives"></a>4. Data-Related Operators and Directives</h2><h4 id="4-1-offset-operator"><a href="#4-1-offset-operator" class="headerlink" title="4.1    offset operator"></a>4.1    offset operator</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; example of offset</span><br><span class="line">.data</span><br><span class="line">bVal BYTE ?</span><br><span class="line">wVal BYTE ?</span><br><span class="line">dVal BYTE ?</span><br><span class="line">dVal2 BYTE ?</span><br><span class="line">.code</span><br><span class="line">mov esi, OFFSET bVal	; ESI = 00404000h</span><br><span class="line">mov esi, OFFSET wVal	; ESI = 00404001h</span><br><span class="line">mov esi, OFFSET dVal	; ESI = 00404003h</span><br><span class="line">mov esi, OFFSET dVal2	; ESI = 00404007h</span><br></pre></td></tr></table></figure>

<h4 id="4-2-PTR-Operator"><a href="#4-2-PTR-Operator" class="headerlink" title="4.2    PTR Operator"></a>4.2    PTR Operator</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">myDouble DWORD 12345678h</span><br><span class="line">.code</span><br><span class="line">mov ax, myDouble	; error</span><br><span class="line">mov ax, WORD PTR myDouble	; loads 5678h</span><br><span class="line">mov WORD PTR myDouble, 4321h; saves 4321h</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">myDouble DWORD 12345678h</span><br><span class="line">,code</span><br><span class="line">mov al, BYTE PTR myDouble	; AL = </span><br><span class="line">mov al, BYTE PTR [myDouble + 1] ; +1是按byte加的, 与array区分开来</span><br></pre></td></tr></table></figure>

<h4 id="4-3-LENGTHOF-Operator"><a href="#4-3-LENGTHOF-Operator" class="headerlink" title="4.3    LENGTHOF Operator"></a>4.3    LENGTHOF Operator</h4><p>计算元素的个数，而非字节数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">byte1 BYTE 10,20,30</span><br><span class="line">array1 WORD 30 DUP(?), 0, 0</span><br><span class="line">.code</span><br><span class="line">mov ecx, LENGTHOF array1 ;32</span><br></pre></td></tr></table></figure>

<h4 id="4-4-SIZEOF-Operator"><a href="#4-4-SIZEOF-Operator" class="headerlink" title="4.4    SIZEOF Operator"></a>4.4    SIZEOF Operator</h4><p>计算的字节数大小</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">byte1 BYTE 10,20,30</span><br><span class="line">array1 WORD 30 DUP(?), 0, 0</span><br><span class="line">.code</span><br><span class="line">mov ecx, SIZEOF array1 ;64</span><br></pre></td></tr></table></figure>

<h4 id="4-5-LABEL-Directive"><a href="#4-5-LABEL-Directive" class="headerlink" title="4.5 LABEL Directive"></a>4.5 LABEL Directive</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">dwList LABEL DWORD</span><br><span class="line">wordList LABEL WORD</span><br><span class="line">intList BYTE 00h, 10h, 00h, 20h</span><br><span class="line">.code</span><br><span class="line">mov eax, dwList</span><br><span class="line">mov cx, wordList</span><br><span class="line">mov dl, intList</span><br></pre></td></tr></table></figure>

<h2 id="5-Indirect-Addressing"><a href="#5-Indirect-Addressing" class="headerlink" title="5. Indirect Addressing"></a>5. Indirect Addressing</h2><h4 id="5-1-使用-来间接寻址"><a href="#5-1-使用-来间接寻址" class="headerlink" title="5.1 使用[]来间接寻址"></a>5.1 使用[]来间接寻址</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">val1 BYTE 10h, 20h, 30h</span><br><span class="line">.code</span><br><span class="line">mov esi, OFFSET val1</span><br><span class="line">mov al, [esi]</span><br><span class="line">inc esi</span><br><span class="line">mov al, [esi]</span><br><span class="line">inc esi</span><br><span class="line">mov al, [esi]</span><br></pre></td></tr></table></figure>

<h4 id="5-2-使用PTR来确定"><a href="#5-2-使用PTR来确定" class="headerlink" title="5.2 使用PTR来确定"></a>5.2 使用PTR来确定</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">myCount WORD 0</span><br><span class="line">.code</span><br><span class="line">mov esi, OFFSET myCount</span><br><span class="line">inc [esi] ;error: ambiguous</span><br><span class="line">inc WORD PTR [esi] ;ok</span><br></pre></td></tr></table></figure>

<p>example</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">arrayW WORD 1000h, 2000h, 3000h</span><br><span class="line">.code</span><br><span class="line">mov esi, 0</span><br><span class="line">mov ax, [arrayW + esi]</span><br><span class="line">mov ax, arrayW[esi]		;alternate format</span><br></pre></td></tr></table></figure>

<h4 id="5-3-Index-Scaling"><a href="#5-3-Index-Scaling" class="headerlink" title="5.3 Index Scaling"></a>5.3 Index Scaling</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">arrayB BYTE 0,1,2,3,4,5</span><br><span class="line">arrayW WORD 0,1,2,3,4,5</span><br><span class="line">arrayD DWORD 0,1,2,3,4,5</span><br><span class="line">.code</span><br><span class="line">mov esi, 4</span><br><span class="line">mov al, arrayB[esi * TYPE arrayB]</span><br><span class="line">mov ax, arrayW[esi * TYPE arrayW]</span><br><span class="line">mov eax, arrayD[esi * TYPE arrayD]</span><br></pre></td></tr></table></figure>

<h4 id="5-4-pointers"><a href="#5-4-pointers" class="headerlink" title="5.4 pointers"></a>5.4 pointers</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">arrayW WORD 1000h, 2000h, 3000h</span><br><span class="line">ptrW DWORD arrayD ; ptrW DWORD OFFSET arrayD an alternate format</span><br><span class="line">.code</span><br><span class="line">mov esi, ptrW</span><br><span class="line">mov ax, [esi]</span><br></pre></td></tr></table></figure>

<h2 id="6-JMP-and-Loop-Instructions"><a href="#6-JMP-and-Loop-Instructions" class="headerlink" title="6. JMP and Loop Instructions"></a>6. JMP and Loop Instructions</h2><h4 id="6-1-JMP-Instruction"><a href="#6-1-JMP-Instruction" class="headerlink" title="6.1 JMP Instruction"></a>6.1 JMP Instruction</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">top:</span><br><span class="line">	.</span><br><span class="line">	.</span><br><span class="line">	jmp top</span><br></pre></td></tr></table></figure>

<h4 id="6-2-Loop-Instruction"><a href="#6-2-Loop-Instruction" class="headerlink" title="6.2 Loop Instruction"></a>6.2 Loop Instruction</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">	mov ax, 0</span><br><span class="line">	mov ecx, 5</span><br><span class="line">L1: add ax, cx</span><br><span class="line">	loop L1</span><br></pre></td></tr></table></figure>

<p>关注ecx寄存器，当其为0时退出</p>
<h4 id="6-3-Nested-Loop"><a href="#6-3-Nested-Loop" class="headerlink" title="6.3 Nested Loop"></a>6.3 Nested Loop</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">count DWORD ?</span><br><span class="line">.code</span><br><span class="line">	mov ecx, 100</span><br><span class="line">L1:</span><br><span class="line">	mov count, ecx</span><br><span class="line">	mov ecx, 20</span><br><span class="line">L2:	.</span><br><span class="line">	.</span><br><span class="line">	loop L2</span><br><span class="line">	mov ecx, count</span><br><span class="line">	loop L1</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>汇编</category>
      </categories>
      <tags>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编第三天</title>
    <url>/2022/02/08/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96_Day3/</url>
    <content><![CDATA[<h2 id="1-Stack-Operation"><a href="#1-Stack-Operation" class="headerlink" title="1. Stack Operation"></a>1. Stack Operation</h2><h4 id="1-1-Runtime-Stack"><a href="#1-1-Runtime-Stack" class="headerlink" title="1.1    Runtime Stack"></a>1.1    Runtime Stack</h4><ol>
<li>top的地址大于buttom的地址</li>
<li>受两个register管控，ss（stack segment）、esp（stack pointer）</li>
</ol>
<h4 id="1-2-Push-Operation"><a href="#1-2-Push-Operation" class="headerlink" title="1.2    Push Operation"></a>1.2    Push Operation</h4><p><a href="https://imgtu.com/i/H10nZ8"><img src="https://s4.ax1x.com/2022/02/08/H10nZ8.png" alt="H10nZ8.png"></a></p>
<p>减4，即4*8=32，再÷4=8，即剩余8位，正好32位。乘8是因为1byte=8bit</p>
<h4 id="1-3-Pop-Operation"><a href="#1-3-Pop-Operation" class="headerlink" title="1.3    Pop Operation"></a>1.3    Pop Operation</h4><p>add n to esp, 2 or 4 depends on the attribute of the operand</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">push esi</span><br><span class="line">push ecx</span><br><span class="line">push ebx</span><br><span class="line"></span><br><span class="line">mov esi, OFFSET dwordVal	; display some memory</span><br><span class="line">mov ecx, LENGTHOF dwordVal</span><br><span class="line">mov ebx, TYPE dwordVal</span><br><span class="line">call DumpMem</span><br><span class="line"></span><br><span class="line">pop	ebx</span><br><span class="line">pop exc</span><br><span class="line">pop esi</span><br></pre></td></tr></table></figure>

<h2 id="2-defining-and-using-procedures"><a href="#2-defining-and-using-procedures" class="headerlink" title="2. defining and using procedures"></a>2. defining and using procedures</h2><h4 id="2-1-creating-procedure"><a href="#2-1-creating-procedure" class="headerlink" title="2.1    creating procedure"></a>2.1    creating procedure</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sample PROC</span><br><span class="line">	.</span><br><span class="line">	.</span><br><span class="line">	ret</span><br><span class="line">sample ENDP</span><br><span class="line"></span><br><span class="line">; EXAMPLE: SUM OF PROCEDURE</span><br><span class="line">SumOf PROC</span><br><span class="line">	add eax, ebx</span><br><span class="line">	add eax, ecx</span><br><span class="line">	ret</span><br><span class="line">SumOf ENDP</span><br><span class="line">COMMENT !</span><br><span class="line">    mov eax, 10</span><br><span class="line">    mov ebx, 20</span><br><span class="line">    mov ecx, 30</span><br><span class="line">    call SumOf</span><br><span class="line">    WriteDec</span><br><span class="line">!</span><br></pre></td></tr></table></figure>

<h4 id="2-2-Call-and-Ret-Instruction"><a href="#2-2-Call-and-Ret-Instruction" class="headerlink" title="2.2    Call and Ret Instruction"></a>2.2    Call and Ret Instruction</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">main PROC</span><br><span class="line">	00000020 call MySub</span><br><span class="line">	00000025 mov eax, ebx</span><br><span class="line">	.</span><br><span class="line">	.</span><br><span class="line">main ENDP</span><br><span class="line">MySub PROC</span><br><span class="line">	00000040 mov eax, edx</span><br><span class="line">	.</span><br><span class="line">	.</span><br><span class="line">	ret</span><br><span class="line">MySub ENDP</span><br></pre></td></tr></table></figure>

<h4 id="2-3-USES-Operator"><a href="#2-3-USES-Operator" class="headerlink" title="2.3 USES Operator"></a>2.3 USES Operator</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ArraySum PROC</span><br><span class="line">	push esi</span><br><span class="line">	push ecx</span><br><span class="line">	.</span><br><span class="line">	.</span><br><span class="line">	pop ecx</span><br><span class="line">	pop esi</span><br><span class="line">	ret</span><br><span class="line">ArraySum ENDP</span><br></pre></td></tr></table></figure>

<p><a href="https://imgtu.com/i/H1Im1x"><img src="https://s4.ax1x.com/2022/02/08/H1Im1x.png" alt="H1Im1x.png"></a></p>
<h2 id="3-linking-to-an-external-library"><a href="#3-linking-to-an-external-library" class="headerlink" title="3. linking to an external library"></a>3. linking to an external library</h2><p><a href="https://imgtu.com/i/H17fDf"><img src="https://s4.ax1x.com/2022/02/08/H17fDf.png" alt="H17fDf.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include Irvine32.inc</span><br><span class="line">.code</span><br><span class="line">	mov eax, 1234h</span><br><span class="line">	call WriteHex</span><br><span class="line">	call Crlf</span><br></pre></td></tr></table></figure>

<h2 id="4-64bit-assembly-programming"><a href="#4-64bit-assembly-programming" class="headerlink" title="4. 64bit assembly programming"></a>4. 64bit assembly programming</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ExitProcess PROTO</span><br><span class="line">WriteHex64 PROTO</span><br></pre></td></tr></table></figure>

<h2 id="5-boolean-and-comparison-instruction"><a href="#5-boolean-and-comparison-instruction" class="headerlink" title="5. boolean and comparison instruction"></a>5. boolean and comparison instruction</h2><p>AND, OR, XOR, NOT,</p>
<h4 id="5-1-Using-Bit-Mapped-Sets"><a href="#5-1-Using-Bit-Mapped-Sets" class="headerlink" title="5.1    Using Bit-Mapped Sets"></a>5.1    Using Bit-Mapped Sets</h4><p>like bit vectors</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; set complement</span><br><span class="line">mov eax, SetX</span><br><span class="line">not eax</span><br><span class="line">; set Intersection</span><br><span class="line">mov eax, SetX</span><br><span class="line">and eax, SetY</span><br><span class="line">; set Union</span><br><span class="line">mov eax, setX</span><br><span class="line">or eax, setY</span><br></pre></td></tr></table></figure>

<h4 id="5-2-Test-Instruction"><a href="#5-2-Test-Instruction" class="headerlink" title="5.2    Test Instruction"></a>5.2    Test Instruction</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">test al, 00000011b</span><br><span class="line">jz ValueNotFound</span><br><span class="line">; neither bit0 and bit1 is set</span><br></pre></td></tr></table></figure>

<h4 id="5-3-CMP-Instruction"><a href="#5-3-CMP-Instruction" class="headerlink" title="5.3    CMP Instruction"></a>5.3    CMP Instruction</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; nondestructive subtraction of source from destination</span><br><span class="line">mov al, 5</span><br><span class="line">cmp al, 5 ; zero flag is set</span><br><span class="line"></span><br><span class="line">mov al, 4</span><br><span class="line">cmp al, 5 ; carry flag is set</span><br></pre></td></tr></table></figure>

<h2 id="6-Conditional-Jumps"><a href="#6-Conditional-Jumps" class="headerlink" title="6. Conditional Jumps"></a>6. Conditional Jumps</h2><p>jumps based on specific flags, equality, unsigned comparisons, signed comparisons</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; JB, JC jumps to a label if carry flag is set</span><br><span class="line">; JE, JZ jumps to a label if zero flag is set</span><br><span class="line">; JS jumps to a label if sign flag is set</span><br><span class="line">; JNE, JNZ jump to a label if zero flag is clear</span><br><span class="line">; JECXZ jumps to a label if ECX equals to zero</span><br><span class="line">; Example BT Instruction</span><br><span class="line">; copy bit n to the carry flag</span><br><span class="line">; Task: jump to label L1 if bit 9 is set</span><br><span class="line"></span><br><span class="line">bt ax, 9</span><br><span class="line">jc L1</span><br></pre></td></tr></table></figure>

<h2 id="7-Conditional-Loop-Instruction"><a href="#7-Conditional-Loop-Instruction" class="headerlink" title="7. Conditional Loop Instruction"></a>7. Conditional Loop Instruction</h2><h4 id="LOOPZ-and-LOOPE"><a href="#LOOPZ-and-LOOPE" class="headerlink" title="LOOPZ and LOOPE"></a>LOOPZ and LOOPE</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; if ecx &gt; 0 and ZF = 1, jump to destination</span><br><span class="line">LOOPE destination</span><br><span class="line">LOOPZ destination</span><br><span class="line">; if ecx &gt; 0 and ZF = 0, jump to destination</span><br><span class="line">LOOPNE destination</span><br><span class="line">LOOPNZ destination</span><br><span class="line"></span><br><span class="line">; Example</span><br><span class="line">.data</span><br><span class="line">array SWORD -3,-6,-1,-10,10,30,4-,4</span><br><span class="line">sentinel SWORD 0</span><br><span class="line">.code</span><br><span class="line">	mov esi, OFFSET array</span><br><span class="line">	mov ecx, LENGTHOF array</span><br><span class="line">next:</span><br><span class="line">	test WORD PTR [esi], 8000h</span><br><span class="line">	pushfd</span><br><span class="line">	add esi, TYPE array</span><br><span class="line">	popfd</span><br><span class="line">	loopnz next</span><br><span class="line">	jecxz quit</span><br><span class="line">	sub esi, TYPE array</span><br><span class="line">quit:</span><br></pre></td></tr></table></figure>

<h2 id="8-Conditional-Structures"><a href="#8-Conditional-Structures" class="headerlink" title="8. Conditional Structures"></a>8. Conditional Structures</h2><h4 id="8-1-Block-Structured-IF-Statement"><a href="#8-1-Block-Structured-IF-Statement" class="headerlink" title="8.1    Block-Structured IF Statement"></a>8.1    Block-Structured IF Statement</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (op1 == op2)			</span><br><span class="line">	x = 1;					</span><br><span class="line">else						</span><br><span class="line">	x = 2;					</span><br><span class="line">.code</span><br><span class="line">	mov eax, op1</span><br><span class="line">	cmp eax, op2</span><br><span class="line">	jne L1</span><br><span class="line">	mov x, 1</span><br><span class="line">	jmp L2</span><br><span class="line">L1: mov x, 2</span><br><span class="line">L2:</span><br></pre></td></tr></table></figure>

<h4 id="8-2-Compound-Expression-with-AND"><a href="#8-2-Compound-Expression-with-AND" class="headerlink" title="8.2    Compound Expression with AND"></a>8.2    Compound Expression with AND</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (al &gt; bl) and (bl &gt; cl)</span><br><span class="line">	x = 1;</span><br><span class="line">; one implementation</span><br><span class="line">	cmp al, bl</span><br><span class="line">	ja L1</span><br><span class="line">	jmp next</span><br><span class="line">L1:</span><br><span class="line">	cmp bl, cl</span><br><span class="line">	ja L2</span><br><span class="line">	jmp next</span><br><span class="line">L2:</span><br><span class="line">	mov x, 1</span><br><span class="line">next:</span><br><span class="line"></span><br><span class="line">; the other implementation</span><br><span class="line">	cmp al, bl</span><br><span class="line">	jbe next</span><br><span class="line">	cmp bl, cl</span><br><span class="line">	jbe next</span><br><span class="line">	mov x, 1</span><br><span class="line">next:</span><br></pre></td></tr></table></figure>

<h2 id="9-Creating-IF-Statement"><a href="#9-Creating-IF-Statement" class="headerlink" title="9. Creating IF Statement"></a>9. Creating IF Statement</h2><h4 id="9-1-Runtime-Expression"><a href="#9-1-Runtime-Expression" class="headerlink" title="9.1    Runtime Expression"></a>9.1    Runtime Expression</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.if eax &gt; ebx &amp;&amp; eax &gt; ecx</span><br><span class="line">	mov edx, 1</span><br><span class="line">.else</span><br><span class="line">	mov edx, 2</span><br><span class="line">.endif</span><br><span class="line"></span><br><span class="line">; if 自动生成相反的命令jmp</span><br><span class="line">.data</span><br><span class="line">result DWORD ?</span><br><span class="line">.code</span><br><span class="line">mov ebx, 5</span><br><span class="line">mov eax, 6</span><br><span class="line">.if eax &gt; ebx</span><br><span class="line">	mov result, 1</span><br><span class="line">.endif</span><br><span class="line"></span><br><span class="line">	mov ebx, 5</span><br><span class="line">	mov eax, 6</span><br><span class="line">	cmp eax, ebx</span><br><span class="line">	jle @c0001</span><br><span class="line">	mov result, 1</span><br><span class="line">@c0001:</span><br><span class="line"></span><br><span class="line">; you can also prefix one of your register with the SDWORD PTR operator.</span><br></pre></td></tr></table></figure>

<h4 id="9-2-repeat-directive"><a href="#9-2-repeat-directive" class="headerlink" title="9.2    .repeat directive"></a>9.2    .repeat directive</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; Display integers 1 - 10</span><br><span class="line">mov eax, 0</span><br><span class="line">.repeat</span><br><span class="line">	inc eax</span><br><span class="line">	call WriteDec</span><br><span class="line">	call Crlf</span><br><span class="line">.until eax == 10</span><br></pre></td></tr></table></figure>

<h4 id="9-3-while-directive"><a href="#9-3-while-directive" class="headerlink" title="9.3    .while directive"></a>9.3    .while directive</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov eax, 0</span><br><span class="line">.while eax &lt; 10</span><br><span class="line">	inc eax</span><br><span class="line">	call WriteDec</span><br><span class="line">	call Crlf</span><br><span class="line">.endw</span><br></pre></td></tr></table></figure>















]]></content>
      <categories>
        <category>汇编</category>
      </categories>
      <tags>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编第四天</title>
    <url>/2022/02/09/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96_Day4/</url>
    <content><![CDATA[<h2 id="1-Shift-and-Rotate-Instruction"><a href="#1-Shift-and-Rotate-Instruction" class="headerlink" title="1. Shift and Rotate Instruction"></a>1. Shift and Rotate Instruction</h2><h4 id="1-1-Logical-Shift-vs-Arithmetic-Shifts"><a href="#1-1-Logical-Shift-vs-Arithmetic-Shifts" class="headerlink" title="1.1    Logical Shift vs Arithmetic Shifts"></a>1.1    Logical Shift vs Arithmetic Shifts</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; logical shift fills with 0</span><br><span class="line">; arithmetic shift fills with 1</span><br><span class="line"></span><br><span class="line">; SHL Instruction perform a logical left shift to fasten multiplication</span><br><span class="line">shl reg, imm8</span><br><span class="line">shl mem, imm8</span><br><span class="line">shl reg, cl</span><br><span class="line">shl mem, cl</span><br><span class="line"></span><br><span class="line">mov dl, 5</span><br><span class="line">shl dl, 2	; 5 * 2^2 = 20</span><br><span class="line"></span><br><span class="line">; SHR Instruction perform a logical right shift to fasten division</span><br><span class="line">mov dl, 80</span><br><span class="line">shr dl, 1</span><br><span class="line">shr dl, 2</span><br><span class="line"></span><br><span class="line">; SAL is identical to SHL</span><br><span class="line">; SAR perform a arithmetic shift</span><br></pre></td></tr></table></figure>

<p><a href="https://imgtu.com/i/H8oazn"><img src="https://s4.ax1x.com/2022/02/09/H8oazn.png" alt="H8oazn.png"></a></p>
<h4 id="1-2-Rotation-Instruction"><a href="#1-2-Rotation-Instruction" class="headerlink" title="1.2    Rotation Instruction"></a>1.2    Rotation Instruction</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; ROL Instruction no bits are lost</span><br><span class="line">; ROR Instruction is as above</span><br></pre></td></tr></table></figure>

<p><a href="https://imgtu.com/i/H87D5F"><img src="https://s4.ax1x.com/2022/02/09/H87D5F.png" alt="H87D5F.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; RCL Instruction copy the most significant to CF and CF to least significant</span><br><span class="line">; RCR Instruction reverse the RCL Instruction</span><br></pre></td></tr></table></figure>

<h4 id="1-3-SHLD-Instruction-shift-left-double"><a href="#1-3-SHLD-Instruction-shift-left-double" class="headerlink" title="1.3    SHLD Instruction(shift left double)"></a>1.3    SHLD Instruction(shift left double)</h4><p><a href="https://imgtu.com/i/HGidSI"><img src="https://s4.ax1x.com/2022/02/09/HGidSI.png" alt="HGidSI.png"></a></p>
<p><a href="https://imgtu.com/i/HGiImT"><img src="https://s4.ax1x.com/2022/02/09/HGiImT.png" alt="HGiImT.png"></a></p>
<h4 id="1-4-SHRD-Instruction"><a href="#1-4-SHRD-Instruction" class="headerlink" title="1.4    SHRD Instruction"></a>1.4    SHRD Instruction</h4><p>just the reverse version of SHLD</p>
<h2 id="2-Multiplication-and-Division-Instruction"><a href="#2-Multiplication-and-Division-Instruction" class="headerlink" title="2. Multiplication and Division Instruction"></a>2. Multiplication and Division Instruction</h2><h4 id="2-1-MUL-Instruction"><a href="#2-1-MUL-Instruction" class="headerlink" title="2.1    MUL Instruction"></a>2.1    MUL Instruction</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mul r/m8</span><br><span class="line">; mul instruction multiplies an 8-, 16-. 32-bit operand by either AL,AX,EAX</span><br></pre></td></tr></table></figure>

<p><a href="https://imgtu.com/i/HGkRs0"><img src="https://s4.ax1x.com/2022/02/09/HGkRs0.png" alt="HGkRs0.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">val1 WORD 2000h</span><br><span class="line">val2 WORD 100h</span><br><span class="line">.code</span><br><span class="line">mov ax, val1</span><br><span class="line">mul val2	; DX:AX = 0020 0000h, CF = 1</span><br><span class="line"></span><br><span class="line">mov eax, 12345h</span><br><span class="line">mov ebx, 1000h</span><br><span class="line">mul ebx	; EDX:EAX = 00000000 12345000h, CF = 0 </span><br><span class="line">; CF indicates whether the upper half has significant digits</span><br></pre></td></tr></table></figure>

<h4 id="2-2-IMUL-Instruction"><a href="#2-2-IMUL-Instruction" class="headerlink" title="2.2    IMUL Instruction"></a>2.2    IMUL Instruction</h4><p><a href="https://imgtu.com/i/HGVFVf"><img src="https://s4.ax1x.com/2022/02/09/HGVFVf.png" alt="HGVFVf.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov al, 48</span><br><span class="line">mov bl, 4</span><br><span class="line">imul bl ; AX = 00C0h, 0F = 1, because AH is not a sign extension of AL</span><br></pre></td></tr></table></figure>

<h4 id="2-3-DIV-Instruction"><a href="#2-3-DIV-Instruction" class="headerlink" title="2.3    DIV Instruction"></a>2.3    DIV Instruction</h4><p><a href="https://imgtu.com/i/HGZFyR"><img src="https://s4.ax1x.com/2022/02/09/HGZFyR.png" alt="HGZFyR.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov dx, 0000h ; clear dividend, high</span><br><span class="line">mov ax, 8003h</span><br><span class="line">mov cx, 100h</span><br><span class="line">div cx ; AX = 0080h, DX = 0003h</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">dividend_hi QWORD 00000208h</span><br><span class="line">dividend_lo QWORD 33300020h</span><br><span class="line">divisor QWORD 00010000h</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">mov rdx, dividend_hi</span><br><span class="line">mov rax, dividend_lo</span><br><span class="line">div divisor</span><br></pre></td></tr></table></figure>

<h4 id="2-4-Signed-Integer-Division"><a href="#2-4-Signed-Integer-Division" class="headerlink" title="2.4    Signed Integer Division"></a>2.4    Signed Integer Division</h4><p><a href="https://imgtu.com/i/HGuzRS"><img src="https://s4.ax1x.com/2022/02/09/HGuzRS.png" alt="HGuzRS.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; CBW, CWD, CDQ Instructions</span><br><span class="line">; CBW extends AL to AH</span><br><span class="line">; CWD extends AX to DX</span><br><span class="line">; CDQ extends eax to edx</span><br><span class="line"></span><br><span class="line">mov eax, 0FFFFFF9B</span><br><span class="line">cdq		; EDX:EAX = FFFFFFFFFFFFFF9Bh</span><br><span class="line"></span><br><span class="line">; example</span><br><span class="line">mov al, -48</span><br><span class="line">cbw</span><br><span class="line">mov bl, 5</span><br><span class="line">idiv bl</span><br></pre></td></tr></table></figure>

<h2 id="3-Extended-Addition-and-Subtraction"><a href="#3-Extended-Addition-and-Subtraction" class="headerlink" title="3. Extended Addition and Subtraction"></a>3. Extended Addition and Subtraction</h2><h4 id="3-1-adc-instruction"><a href="#3-1-adc-instruction" class="headerlink" title="3.1    adc instruction"></a>3.1    adc instruction</h4><h4 id="3-2-extended-precision-addition"><a href="#3-2-extended-precision-addition" class="headerlink" title="3.2    extended precision addition"></a>3.2    extended precision addition</h4><h4 id="3-3-sbb-instruction"><a href="#3-3-sbb-instruction" class="headerlink" title="3.3    sbb instruction"></a>3.3    sbb instruction</h4><h4 id="3-4-extended-precision-subtraction"><a href="#3-4-extended-precision-subtraction" class="headerlink" title="3.4    extended precision subtraction"></a>3.4    extended precision subtraction</h4><h2 id="4-Multimodule-Programs"><a href="#4-Multimodule-Programs" class="headerlink" title="4. Multimodule Programs"></a>4. Multimodule Programs</h2><p>source code has been divided up into separate ASM files</p>
<p>each ASM file is assembled into a separate OBJ file</p>
<p>all OBJ files belonging to the same program are linked using the link utility into a single exe</p>
<p>this process is called static linking</p>
<h2 id="5-Stack-Frames"><a href="#5-Stack-Frames" class="headerlink" title="5. Stack Frames"></a>5. Stack Frames</h2><p>also known as an activation record(活动记录)</p>
<p>created by the following steps:</p>
<ol>
<li><p>call program pushed arguments on the stack and calls the procedure</p>
</li>
<li><p>the called procedure pushed ebp on the stack, and set ebp to esp</p>
</li>
<li><p>if local var are needed, a constant is subtracted from ESP to make room on the stack</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pushad</span><br><span class="line">mov esi, OFFSET array</span><br><span class="line">mov ecx, LENGTHOF array</span><br><span class="line">mov ebx, TYPE array</span><br><span class="line">call DumpMem</span><br><span class="line">popad</span><br></pre></td></tr></table></figure>

<p><a href="https://imgtu.com/i/HJFbwT"><img src="https://s4.ax1x.com/2022/02/09/HJFbwT.png" alt="HJFbwT.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; C Call: caller releases stack</span><br><span class="line">AddTwo_C PROC</span><br><span class="line">	push ebp</span><br><span class="line">	mov ebp, esp</span><br><span class="line">	mov eax, [ebp + 12]</span><br><span class="line">	add eax, [ebp + 8]</span><br><span class="line">	pop ebp</span><br><span class="line">	ret</span><br><span class="line">AddTwo_C ENDP</span><br><span class="line"></span><br><span class="line">_Example1 PROC</span><br><span class="line">	push 6</span><br><span class="line">	push 5</span><br><span class="line">	call AddTwo_C</span><br><span class="line">	add esp, 8</span><br><span class="line">	call DumpRegs</span><br><span class="line">	ret</span><br><span class="line">_Example1 ENDP</span><br><span class="line">; STDCall: procedure releases stack</span><br><span class="line">AddTwo PROC</span><br><span class="line">	push ebp</span><br><span class="line">	mov ebp, esp</span><br><span class="line">	mov eax, [ebp + 12]</span><br><span class="line">	add eax, [ebp + 8]</span><br><span class="line">	pop ebp</span><br><span class="line">	ret 8</span><br><span class="line">AddTwo ENDP</span><br><span class="line">_Example2 PROC</span><br><span class="line">	push 6</span><br><span class="line">	push 5</span><br><span class="line">	call AddTwo</span><br><span class="line">	call DumpRegs</span><br><span class="line">	ret</span><br><span class="line">_Example2 ENDP</span><br></pre></td></tr></table></figure>

<h4 id="5-1-Local-Variables"><a href="#5-1-Local-Variables" class="headerlink" title="5.1. Local Variables"></a>5.1. Local Variables</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">void MySub()&#123;</span><br><span class="line">	int X = 10;</span><br><span class="line">	int Y = 20;</span><br><span class="line">&#125;</span><br><span class="line">;	LocalVars.asm</span><br><span class="line">MySub PROC</span><br><span class="line">	push ebp</span><br><span class="line">	mov ebp, esp</span><br><span class="line">	sub esp, 8</span><br><span class="line">	mov DWORD PTR [ebp - 4], 10</span><br><span class="line">	mov DWORD PTR [ebp - 8], 20</span><br><span class="line">	; Do Something</span><br><span class="line">	mov esp, ebp	; remove local vars</span><br><span class="line">	pop ebp</span><br><span class="line">MySub ENDP</span><br></pre></td></tr></table></figure>

<h4 id="5-2-ENTER-and-LEAVE"><a href="#5-2-ENTER-and-LEAVE" class="headerlink" title="5.2. ENTER and LEAVE"></a>5.2. ENTER and LEAVE</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; ENTER Instruction</span><br><span class="line">; push ebp on the stack						push ebp</span><br><span class="line">; steps ebp to the base of stack frame		mov ebp, esp</span><br><span class="line">; reserves space for local variables		sub esp, n</span><br><span class="line">; syntax: ENTER numBytesReserverd, nestingLevel</span><br><span class="line"></span><br><span class="line">; LEAVE instruction</span><br><span class="line">; restores esp to release local variables	mov esp, ebp</span><br><span class="line">; pops ebp for the caller					pop ebp</span><br><span class="line"></span><br><span class="line">MySub PROC</span><br><span class="line">	enter 8,0</span><br><span class="line">	;push ebp</span><br><span class="line">	;mov ebp, esp</span><br><span class="line">	;sub esp,8</span><br><span class="line">	...</span><br><span class="line">	...</span><br><span class="line">	leave</span><br><span class="line">	;mov esp,ebp</span><br><span class="line">	;pop ebp</span><br><span class="line">	ret</span><br><span class="line">MySub ENDP</span><br></pre></td></tr></table></figure>

<h4 id="5-3-LOCAL-Directive"><a href="#5-3-LOCAL-Directive" class="headerlink" title="5.3. LOCAL Directive"></a>5.3. LOCAL Directive</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MySub PROC</span><br><span class="line">	LOCAL var1:BYTE, var2:WORD, var3:SDWORD</span><br><span class="line">	LOCAL flagVals[20]:BYTE</span><br><span class="line">	LOCAL pArray:PTR WORD</span><br><span class="line">	LOCAL t1:BYTE</span><br><span class="line">MySub ENDP</span><br><span class="line">BubbleSort PROC</span><br><span class="line">	LOCAL temp:DWORD, SwapFlag:BYTE</span><br><span class="line">	...</span><br><span class="line">	ret</span><br><span class="line">BubbleSort ENDP</span><br><span class="line">; masm generates</span><br><span class="line">BubbleSort PROC</span><br><span class="line">	push ebp</span><br><span class="line">	mov ebp, esp</span><br><span class="line">	add esp, 0FFFFFFF8h		; add -8 to ESP</span><br><span class="line">	...</span><br><span class="line">	mov esp, ebp</span><br><span class="line">	pop ebp</span><br><span class="line">	ret</span><br><span class="line">BubbleSort ENDP</span><br></pre></td></tr></table></figure>

<h4 id="5-4-LEA-Instruction"><a href="#5-4-LEA-Instruction" class="headerlink" title="5.4. LEA Instruction"></a>5.4. LEA Instruction</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; compared to OFFSET, LEA returns offsets of direct and indirect operands</span><br><span class="line">CopyString PROC</span><br><span class="line">	count:DWORD</span><br><span class="line">	LOCAL temp[20]:BYTE</span><br><span class="line">	</span><br><span class="line">	mov edi, OFFSET count			; invalid</span><br><span class="line">	mov esi, OFFSET temp			; invalid</span><br><span class="line">	lea edi, count					; ok</span><br><span class="line">	lea esi, temp					; ok</span><br><span class="line">	</span><br><span class="line">	lea esi, [ebp - 8]</span><br></pre></td></tr></table></figure>

<h2 id="6-Invoke-Addr-PROC-PROTO"><a href="#6-Invoke-Addr-PROC-PROTO" class="headerlink" title="6. Invoke, Addr, PROC, PROTO"></a>6. Invoke, Addr, PROC, PROTO</h2><h4 id="6-1-INVOKE-Directive"><a href="#6-1-INVOKE-Directive" class="headerlink" title="6.1    INVOKE Directive"></a>6.1    INVOKE Directive</h4><p>not in 64bit model</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; syntax:  INVOKE precedureName, [, argumentList]</span><br><span class="line">; arguments can be:</span><br><span class="line">; immediate values and integer expressions</span><br><span class="line">; var names</span><br><span class="line">; address and ADDR expression</span><br><span class="line">; register names</span><br><span class="line">.data</span><br><span class="line">byteVal BYTE 10</span><br><span class="line">wordVal WORD 1000h</span><br><span class="line">.code</span><br><span class="line">	invoke Sub1, byteVal, wordVal</span><br><span class="line">	invoke Sub2, ADDR byteVal</span><br><span class="line">	invoke Sub3, eax, (10 * 20)</span><br><span class="line">	invoke Sub4, [ebx]</span><br></pre></td></tr></table></figure>

<h4 id="6-2-ADDR-Operator"><a href="#6-2-ADDR-Operator" class="headerlink" title="6.2    ADDR Operator"></a>6.2    ADDR Operator</h4><p>not in 64bit model</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">myWord WORD ?</span><br><span class="line">.code</span><br><span class="line">	invoke mySub, ADDR myWord</span><br></pre></td></tr></table></figure>

<h4 id="6-3-PROC-Directive"><a href="#6-3-PROC-Directive" class="headerlink" title="6.3    PROC Directive"></a>6.3    PROC Directive</h4><p>not in 64bit model</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">label PROC [attributes][USES regList], paramList</span><br><span class="line">AddTWo PROC</span><br><span class="line">	val1:DWORD, val2:DWORD</span><br><span class="line">	</span><br><span class="line">	mov eax, val1</span><br><span class="line">	add eax, val2</span><br><span class="line">	ret</span><br><span class="line">AddTwo ENDP</span><br><span class="line">; example</span><br><span class="line">MySub PROTO</span><br><span class="line">.code</span><br><span class="line">invoke mySub</span><br><span class="line"></span><br><span class="line">MySub PROC</span><br><span class="line">	.</span><br><span class="line">MySub ENDP</span><br><span class="line"></span><br><span class="line">; example</span><br><span class="line">ArraySum PROTO</span><br><span class="line">	ptrArray:PTR DWORD</span><br><span class="line">	szArray:DWORD</span><br></pre></td></tr></table></figure>

<h2 id="7-Multimodule-Programs"><a href="#7-Multimodule-Programs" class="headerlink" title="7. Multimodule Programs"></a>7. Multimodule Programs</h2><h4 id="7-1-Creating-a-multimodule-program"><a href="#7-1-Creating-a-multimodule-program" class="headerlink" title="7.1 Creating a multimodule program"></a>7.1 Creating a multimodule program</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; 1. create the main module</span><br><span class="line">; 2. create a separate source code module for each procedure or set of related procedure</span><br><span class="line">; 3. create an include file that contains procedure prototypes for external procedures</span><br><span class="line">; 4. use the include directive to make your procedure prototypes available to each module</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>汇编</category>
      </categories>
      <tags>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编第五天</title>
    <url>/2022/02/11/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96_Day5/</url>
    <content><![CDATA[<h2 id="1-String-Primitive-Instruction"><a href="#1-String-Primitive-Instruction" class="headerlink" title="1. String Primitive Instruction"></a>1. String Primitive Instruction</h2><h4 id="1-1-MOVSB-MOVSW-MOVSD"><a href="#1-1-MOVSB-MOVSW-MOVSD" class="headerlink" title="1.1.    MOVSB, MOVSW, MOVSD"></a>1.1.    MOVSB, MOVSW, MOVSD</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; copy data from [esi] to [edi]</span><br><span class="line">.data</span><br><span class="line">source DWORD 0FFFFFFFFh</span><br><span class="line">target DWORD ?</span><br><span class="line">.code</span><br><span class="line">mov esi, OFFSET source</span><br><span class="line">mov edi, OFFSET target</span><br><span class="line">movsd</span><br><span class="line">; esi and edi are automatically inc or dec depending on B,W,D</span><br><span class="line"></span><br><span class="line">; Direction Flag</span><br><span class="line">; DF = 0, inc esi and edi</span><br><span class="line">; DF = 1, dec esi and edi</span><br><span class="line">; that can be explicitly changed by cld and std</span><br><span class="line"></span><br><span class="line">; Using a Repeat Prefix</span><br><span class="line">.data</span><br><span class="line">source DWORD 20 DUP(&#x27;z&#x27;)</span><br><span class="line">target DWORD 20 DUP(?)</span><br><span class="line">.code</span><br><span class="line">cld</span><br><span class="line">mov ecx, LENGTHOF source</span><br><span class="line">mov esi, OFFSET source</span><br><span class="line">mov edi, OFFSET target</span><br><span class="line">rep movsw</span><br><span class="line">; wait till ecx == 0</span><br></pre></td></tr></table></figure>

<h4 id="1-2-CMPSB-CMPSW-CMPSD"><a href="#1-2-CMPSB-CMPSW-CMPSD" class="headerlink" title="1.2.    CMPSB, CMPSW, CMPSD"></a>1.2.    CMPSB, CMPSW, CMPSD</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; compare data from [esi] to [edi]</span><br><span class="line">; repeat prefix often used: repe(repz), repne(repnz)</span><br><span class="line">.data</span><br><span class="line">source DWORD 1234h</span><br><span class="line">target DWORD 5678h</span><br><span class="line">.code</span><br><span class="line">mov esi, OFFSET source</span><br><span class="line">mov edi, OFFSET target</span><br><span class="line">CMPSD</span><br><span class="line">ja L1</span><br><span class="line">jmp L2</span><br><span class="line"></span><br><span class="line">; repeat</span><br><span class="line">.data</span><br><span class="line">source DWORD COUNT DUP(?)</span><br><span class="line">target DWORD COUNT DUP(?)</span><br><span class="line">.code</span><br><span class="line">mov ecx, COUNT</span><br><span class="line">mov esi, OFFSET source</span><br><span class="line">mov edi, OFFSET target</span><br><span class="line">cld</span><br><span class="line">repe cmpsd</span><br></pre></td></tr></table></figure>

<h4 id="1-3-SCASB-SCASW-SCASD"><a href="#1-3-SCASB-SCASW-SCASD" class="headerlink" title="1.3.    SCASB, SCASW, SCASD"></a>1.3.    SCASB, SCASW, SCASD</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; compare a value in AL/AX/EAX to [edi]</span><br><span class="line">.data</span><br><span class="line">alpha BYTE &quot;ABCDEFGH&quot;, 0</span><br><span class="line">.code</span><br><span class="line">mov edi, OFFSET alpha</span><br><span class="line">mov al, &#x27;F&#x27;</span><br><span class="line">mov ecx, LENGTHOF alpha</span><br><span class="line">cld</span><br><span class="line">repne scasb</span><br><span class="line">jnz quit</span><br><span class="line">dec edi</span><br></pre></td></tr></table></figure>

<h4 id="1-4-STOSB-STOSW-STOSD"><a href="#1-4-STOSB-STOSW-STOSD" class="headerlink" title="1.4.    STOSB, STOSW, STOSD"></a>1.4.    STOSB, STOSW, STOSD</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; store content of al/ax/eax to [edi]</span><br><span class="line">.data</span><br><span class="line">Count = 100</span><br><span class="line">string1 BYTE Count DUP(?)</span><br><span class="line">.code</span><br><span class="line">mov al, OFFh</span><br><span class="line">mov edi, OFFSET string1</span><br><span class="line">mov ecx, Count</span><br><span class="line">cld</span><br><span class="line">rep stosb</span><br></pre></td></tr></table></figure>

<h4 id="1-5-LODSB-LODSW-LODSD"><a href="#1-5-LODSB-LODSW-LODSD" class="headerlink" title="1.5.    LODSB, LODSW, LODSD"></a>1.5.    LODSB, LODSW, LODSD</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; load from [esi] to al/ax/eax</span><br><span class="line">.data</span><br><span class="line">array BYTE 1,2,3,4,5,6,7,8,9</span><br><span class="line">.code</span><br><span class="line">	mov esi, OFFSET array</span><br><span class="line">	mov ecx, LENGTHOF array</span><br><span class="line">	cld</span><br><span class="line">L1:	lodsb</span><br><span class="line">	or al, 30h</span><br><span class="line">	call WriteChar</span><br><span class="line">	loop L1</span><br></pre></td></tr></table></figure>

<h2 id="2-Selected-String-Procedures"><a href="#2-Selected-String-Procedures" class="headerlink" title="2. Selected String Procedures"></a>2. Selected String Procedures</h2><h4 id="2-1-Two-Dimensional-Arrays"><a href="#2-1-Two-Dimensional-Arrays" class="headerlink" title="2.1 Two-Dimensional Arrays"></a>2.1 Two-Dimensional Arrays</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; Structure Application</span><br><span class="line">COORD STRUCT</span><br><span class="line">	X WORD ?</span><br><span class="line">	Y WORD ?</span><br><span class="line">COORD ENDS</span><br><span class="line">.data</span><br><span class="line">setOfCoordinates COORD 10 DUP(&lt;&gt;)</span><br><span class="line">.code</span><br><span class="line">	mov ebx, OFFSET setOfCoordinates</span><br><span class="line">	mov esi, 2</span><br><span class="line">	mov eax, 0</span><br><span class="line">	mov ecx, LENGTHOF setOfCoordinates</span><br><span class="line">L1: mov ax, [ebx + esi]</span><br><span class="line">	call WriteDec</span><br><span class="line">	add ebx, SIZEOF COORD</span><br><span class="line">	loop L1</span><br><span class="line">; common formats</span><br><span class="line">;	[base + index + displacement]</span><br><span class="line">;	displacement[base + index]</span><br><span class="line">table BYTE 10h, 20h, 30h, 40h, 50h</span><br><span class="line">	  BYTE 60h, 70h, 80h, 90h, 0A0h</span><br><span class="line">	  BYTE 0B0h, 0C0h, 0D0h, 0E0h, 0F0h</span><br><span class="line">NumCols = 5</span><br><span class="line">; alternate formats</span><br><span class="line">table BYTE 10h, 20h, 30h, 40h, 50h, 60h, 70h, 80h, 90h, 0A0h, OB0h, 0C0h, 0D0h, 0E0h, 0F0h</span><br><span class="line">NumCols = 5</span><br><span class="line"></span><br><span class="line">RowNumber = 1</span><br><span class="line">ColumnNumber = 2</span><br><span class="line"></span><br><span class="line">mov ebx, NumCols * RowNumber</span><br><span class="line">mov esi, ColumnNumber</span><br><span class="line">mov al, table[ebx + esi]</span><br></pre></td></tr></table></figure>

<h4 id="2-2-Searching-and-Sorting-Integer-Arrays"><a href="#2-2-Searching-and-Sorting-Integer-Arrays" class="headerlink" title="2.2.    Searching and Sorting Integer Arrays"></a>2.2.    Searching and Sorting Integer Arrays</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; pseudocode</span><br><span class="line">cx1 = N - 1</span><br><span class="line">while(cx1 &gt; 0)&#123;</span><br><span class="line">	esi = addr(array)</span><br><span class="line">	cx2 = cx1</span><br><span class="line">	while(cx2 &gt; 0)&#123;</span><br><span class="line">		if(array[esi] &lt; array[esi + 4])&#123;</span><br><span class="line">			exchange(array[esi], array[esi + 4])</span><br><span class="line">		&#125;</span><br><span class="line">		add esi, 4</span><br><span class="line">		dec cx2</span><br><span class="line">	&#125;</span><br><span class="line">	dec cx2</span><br><span class="line">&#125;</span><br><span class="line">; assembly code</span><br><span class="line">BubbleSort PROC USES eax, ecx, esi, pArray:PTR DWORD, Count:DWORD</span><br><span class="line">	mov ecx, Count</span><br><span class="line">	dec ecx</span><br><span class="line">L1:</span><br><span class="line">	push ecx</span><br><span class="line">	mov esi, pArray</span><br><span class="line">L2:</span><br><span class="line">	mov eax, [esi]</span><br><span class="line">	cmp [esi + 4], eax</span><br><span class="line">	jge L3</span><br><span class="line">	xchg eax, [esi + 4]</span><br><span class="line">	mov [esi], eax</span><br><span class="line">L3:</span><br><span class="line">	add esi, 4</span><br><span class="line">	loop L2</span><br><span class="line">	pop ecx</span><br><span class="line">	loop L1</span><br><span class="line">L4:</span><br><span class="line">	ret</span><br><span class="line">BubbleSort ENDP</span><br></pre></td></tr></table></figure>

<h2 id="3-Structure"><a href="#3-Structure" class="headerlink" title="3. Structure"></a>3. Structure</h2><h4 id="3-1-Structure-Definition-Syntax"><a href="#3-1-Structure-Definition-Syntax" class="headerlink" title="3.1    Structure Definition Syntax"></a>3.1    Structure Definition Syntax</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name STRUCT</span><br><span class="line">	field-declarations</span><br><span class="line">name ENDS</span><br><span class="line"></span><br><span class="line">Employee STRUCT</span><br><span class="line">	IdNum BYTE &quot;000000000&quot;</span><br><span class="line">	LastName BYTE 30 DUP(0)</span><br><span class="line">	Years WORD 0</span><br><span class="line">	SalaryHistory DWORD 0,0,0,0</span><br><span class="line">Employee ENDS</span><br></pre></td></tr></table></figure>

<h4 id="3-2-Declaring-Structure-Variables"><a href="#3-2-Declaring-Structure-Variables" class="headerlink" title="3.2    Declaring Structure Variables"></a>3.2    Declaring Structure Variables</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">point1 COORD &lt;5,10&gt;</span><br><span class="line">point2 COORD &lt;&gt;</span><br><span class="line">worker Employee &lt;&gt;</span><br><span class="line"></span><br><span class="line">; initializing Array Fields</span><br><span class="line">.data</span><br><span class="line">emp Employee &lt;,,,2 DUP(20000)&gt;</span><br></pre></td></tr></table></figure>

<h4 id="3-3-Array-of-Structure"><a href="#3-3-Array-of-Structure" class="headerlink" title="3.3    Array of Structure"></a>3.3    Array of Structure</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NumPoints = 3</span><br><span class="line">AllPoints COORD NumPoints DUP(&lt;0,0&gt;)</span><br><span class="line"></span><br><span class="line">RD_Dept Employee 20 DUP(&lt;&gt;)</span><br><span class="line"></span><br><span class="line">accounting Employee 10 DUP(&lt;,,,4 DUP(20000)&gt;)</span><br></pre></td></tr></table></figure>

<h4 id="3-4-Reference-Structure-Variables"><a href="#3-4-Reference-Structure-Variables" class="headerlink" title="3.4    Reference Structure Variables"></a>3.4    Reference Structure Variables</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Employee STRUCT								; BYTES</span><br><span class="line">	IdNum BYTE &quot;000000000&quot;					; 9</span><br><span class="line">	LastName BYTE 30 DUP(0)					; 30</span><br><span class="line">	Years WORD 0							; 2</span><br><span class="line">	SalaryHistory DWORD 0,0,0,0				; 16</span><br><span class="line">Employee ENDS								; 57</span><br><span class="line">.data</span><br><span class="line">worker Employee &lt;&gt;</span><br><span class="line"></span><br><span class="line">mov eax, TYPE Employee</span><br><span class="line">mov eax, SIZEOF Employee</span><br><span class="line">mov eax, SIZEOF worker</span><br><span class="line">mov eax, TYPE Employee.SalaryHistory</span><br><span class="line">mov eax, LENGTHOF Employee.SalaryHistory</span><br><span class="line">mov eax, SIZEOF Employee.SalaryHistory</span><br><span class="line">;</span><br><span class="line">mov dx, worker.Years</span><br><span class="line">mov worker.SalaryHistory, 20000</span><br><span class="line">mov worker.SalaryHistory+4, 30000</span><br><span class="line">mov edx, OFFSET worker.LastName</span><br><span class="line">;</span><br><span class="line">mov esi, OFFSET worker</span><br><span class="line">mov ax, (Employee PTR [esi]).Years</span><br><span class="line">;</span><br><span class="line">mov ax, [esi].Years	; invalid operand</span><br></pre></td></tr></table></figure>

<h4 id="3-5-Nested-Structure"><a href="#3-5-Nested-Structure" class="headerlink" title="3.5    Nested Structure"></a>3.5    Nested Structure</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Rectangle STRUCT</span><br><span class="line">	UpperLeft COORD &lt;&gt;</span><br><span class="line">	LowerRight COORD &lt;&gt;</span><br><span class="line">Rectangle ENDS</span><br><span class="line">.data</span><br><span class="line">rect1 Rectangle &#123;&#123;10,10&#125;,&#123;50,20&#125;&#125;</span><br><span class="line">rect2 Rectangle &lt; &lt;10,10&gt;, &lt;50,20&gt; &gt;</span><br><span class="line"></span><br><span class="line">mov rect1.UpperLeft.X, 10</span><br><span class="line">mov esi, OFFSET rect1</span><br><span class="line">mov (Rectangle PTR [esi]).UpperLeft.Y, 10</span><br><span class="line"></span><br><span class="line">mov edi, OFFSET rect2.LowerRight</span><br><span class="line">mov (COORD PTR [edi]).X, 50</span><br><span class="line">mov edi, OFFSET rect2.LowerRight</span><br><span class="line">mov WORD PTR [edi], 50</span><br></pre></td></tr></table></figure>

<h2 id="4-Declaring-and-Using-Union"><a href="#4-Declaring-and-Using-Union" class="headerlink" title="4. Declaring and Using Union"></a>4. Declaring and Using Union</h2><h4 id="4-1-union-definition-syntax"><a href="#4-1-union-definition-syntax" class="headerlink" title="4.1    union definition syntax"></a>4.1    union definition syntax</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name UNION</span><br><span class="line">	union-fields</span><br><span class="line">name ENDS</span><br><span class="line"></span><br><span class="line">; Integer Union Example</span><br><span class="line">Integer UNION</span><br><span class="line">	D DWORD 0</span><br><span class="line">	W WORD 0</span><br><span class="line">	B BYTE 0</span><br><span class="line">Integer ENDS</span><br><span class="line">.data</span><br><span class="line">val1 Integer &lt;12345678h&gt;</span><br><span class="line">val2 Integer &lt;100h&gt;</span><br><span class="line">val3 Integer &lt;&gt;</span><br><span class="line"></span><br><span class="line">mov val3.B, al</span><br><span class="line">mov ax, val3.W</span><br><span class="line">add val3.D, eax</span><br></pre></td></tr></table></figure>

<h4 id="4-2-Union-inside-a-structure"><a href="#4-2-Union-inside-a-structure" class="headerlink" title="4.2    Union inside a structure"></a>4.2    Union inside a structure</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Integer UNION</span><br><span class="line">	D DWORD 0</span><br><span class="line">	W WORD 0</span><br><span class="line">	B BYTE 0</span><br><span class="line">Integer ENDS</span><br><span class="line"></span><br><span class="line">FileInfo STRUCT</span><br><span class="line">	FileID Integer &lt;&gt;</span><br><span class="line">	FileName BYTE 64 DUP(?)</span><br><span class="line">FileInfo ENDS</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">myFile FileInfo &lt;&gt;</span><br><span class="line">.code</span><br><span class="line">mov myFile.FileID.W, ax</span><br></pre></td></tr></table></figure>

<h2 id="5-Macro"><a href="#5-Macro" class="headerlink" title="5. Macro"></a>5. Macro</h2><p><a href="https://imgtu.com/i/HDZwJH"><img src="https://s4.ax1x.com/2022/02/13/HDZwJH.png" alt="HDZwJH.png"></a></p>
<h4 id="5-1-Defining-Macros"><a href="#5-1-Defining-Macros" class="headerlink" title="5.1    Defining Macros"></a>5.1    Defining Macros</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">macroname MACRO [param1, param2,...]</span><br><span class="line">	statement-list</span><br><span class="line">ENDM</span><br><span class="line"></span><br><span class="line">; example 1</span><br><span class="line">mNewLine MACRO</span><br><span class="line">	call Crlf</span><br><span class="line">ENDM</span><br><span class="line">.data</span><br><span class="line">.code</span><br><span class="line">mNewLine	; invoke the macro</span><br><span class="line"></span><br><span class="line">; example 2</span><br><span class="line">mPutChar MACRO char</span><br><span class="line">	push eax</span><br><span class="line">	mov al, char</span><br><span class="line">	call WriteChar</span><br><span class="line">	pop eax</span><br><span class="line">ENDM</span><br><span class="line">.code</span><br><span class="line">mPutChar &#x27;A&#x27;</span><br></pre></td></tr></table></figure>

<h4 id="5-2-Invoking-Macros"><a href="#5-2-Invoking-Macros" class="headerlink" title="5.2    Invoking Macros"></a>5.2    Invoking Macros</h4><p><a href="https://imgtu.com/i/HDekkD"><img src="https://s4.ax1x.com/2022/02/13/HDekkD.png" alt="HDekkD.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mWriteStr MACRO buffer</span><br><span class="line">	push edx</span><br><span class="line">	mov edx, OFFSET buffer</span><br><span class="line">	call WriteString</span><br><span class="line">	pop edx</span><br><span class="line">ENDM</span><br><span class="line">.data</span><br><span class="line">str1 BYTE &quot;welcome!&quot;, 0</span><br><span class="line">.code</span><br><span class="line">mWriteStr str1</span><br><span class="line"></span><br><span class="line">; if you pass a blank argument, the error is also caught</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>汇编</category>
      </categories>
      <tags>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编第六天</title>
    <url>/2022/02/13/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96_Day6/</url>
    <content><![CDATA[<h2 id="1-Conditional-Assembly-Directives"><a href="#1-Conditional-Assembly-Directives" class="headerlink" title="1. Conditional-Assembly Directives"></a>1. Conditional-Assembly Directives</h2><h4 id="1-1-Checking-for-Missing-Arguments"><a href="#1-1-Checking-for-Missing-Arguments" class="headerlink" title="1.1    Checking for Missing Arguments"></a>1.1    Checking for Missing Arguments</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; IFB directive returns true if its argument is blank</span><br><span class="line">IFB &lt;row&gt;</span><br><span class="line">	EXITM</span><br><span class="line">ENDIF</span><br><span class="line"></span><br><span class="line">; example</span><br><span class="line">mWriteStr MACRO string</span><br><span class="line">	IFB &lt;string&gt;</span><br><span class="line">		ECHO -----------------------------</span><br><span class="line">		ECHO * Error: parameter missing in mWriteStr</span><br><span class="line">		ECHO * (no code generated)</span><br><span class="line">		ECHO -----------------------------</span><br><span class="line">		EXITM</span><br><span class="line">	ENDIF</span><br><span class="line">	push edx</span><br><span class="line">	mov edx, OFFSET string</span><br><span class="line">	call WriteString</span><br><span class="line">	pop edx</span><br><span class="line">ENDM</span><br></pre></td></tr></table></figure>

<h4 id="1-2-Default-Argument-Initializers"><a href="#1-2-Default-Argument-Initializers" class="headerlink" title="1.2    Default Argument Initializers"></a>1.2    Default Argument Initializers</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mWriteLn MACRO text:=&lt;&quot; &quot;&gt;</span><br><span class="line">	mWrite text</span><br><span class="line">	call Crlf</span><br><span class="line">ENDM</span><br><span class="line">.code</span><br><span class="line">mWriteLn &quot;line one&quot;</span><br><span class="line">mWriteLn</span><br><span class="line">mWriteLn &quot;line three&quot;</span><br></pre></td></tr></table></figure>

<h4 id="1-3-Boolean-Expressions"><a href="#1-3-Boolean-Expressions" class="headerlink" title="1.3    Boolean Expressions"></a>1.3    Boolean Expressions</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; LT - less than</span><br><span class="line">; GT - greater than</span><br><span class="line">; EQ - equal to</span><br><span class="line">; NE - not equal to</span><br><span class="line">; LE - less than or equal</span><br><span class="line">; GE - Greater than or equal to</span><br></pre></td></tr></table></figure>

<h4 id="1-4-IF-ELSE-and-ENDIF-Directives"><a href="#1-4-IF-ELSE-and-ENDIF-Directives" class="headerlink" title="1.4    IF, ELSE and ENDIF Directives"></a>1.4    IF, ELSE and ENDIF Directives</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IF boolean-expression</span><br><span class="line">	statements</span><br><span class="line">[ELSE</span><br><span class="line">	statements]</span><br><span class="line">ENDIF</span><br><span class="line"></span><br><span class="line">IF RealMode EQ 1</span><br><span class="line">	mov ax, @data</span><br><span class="line">	mov ds, ax</span><br><span class="line">ENDIF</span><br><span class="line">; RealMode can be defined in following ways:</span><br><span class="line">RealMode = 1</span><br><span class="line">RealMode EQU 1</span><br><span class="line">RealMode TEXTEQU 1</span><br></pre></td></tr></table></figure>

<h4 id="1-5-IFIDN-and-IFIDNI-Directive"><a href="#1-5-IFIDN-and-IFIDNI-Directive" class="headerlink" title="1.5    IFIDN and IFIDNI Directive"></a>1.5    IFIDN and IFIDNI Directive</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IFIDNI &lt;symbol&gt;, &lt;symbol&gt;</span><br><span class="line">	statements</span><br><span class="line">ENDIF</span><br><span class="line">; example</span><br><span class="line">mReadBuf MACRO bufferPtr, maxChars</span><br><span class="line">	IFIDNI &lt;maxChars&gt;, &lt;EDX&gt;</span><br><span class="line">		ECHO Warning: Second argument cannot be EDX</span><br><span class="line">		ECHO **************************************</span><br><span class="line">		EXITM</span><br><span class="line">	ENDIF</span><br><span class="line">ENDM</span><br></pre></td></tr></table></figure>

<h4 id="1-6-Special-Operators"><a href="#1-6-Special-Operators" class="headerlink" title="1.6    Special Operators"></a>1.6    Special Operators</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; substitution &amp; operator resolves ambiguous reference</span><br><span class="line">; expansion % operator converts constant expression into text representation</span><br><span class="line">; literal-text &lt;&gt; operator groups one or two characters</span><br><span class="line">; literal-character ! operator forces the preprocessor to treat a predefined operator as an ordinary character</span><br><span class="line"></span><br><span class="line">ShowRegister MACRO regName</span><br><span class="line">.data</span><br><span class="line">	tempStr BYTE &quot; &amp;regName=&quot;, 0</span><br><span class="line">	.</span><br><span class="line">	.</span><br><span class="line">.code</span><br><span class="line">ShowRegister EDX</span><br><span class="line"></span><br><span class="line">mGotoXY %(5 * 10),%(3 + 4)</span><br><span class="line">The preprocessor generates the following code:</span><br><span class="line">push edx</span><br><span class="line">mov dl, 50</span><br><span class="line">mov dh, 7</span><br><span class="line">call Gotoxy</span><br><span class="line">pop edx</span><br><span class="line"></span><br><span class="line">mWrite &quot;Line three&quot;, 0dh, 0ah	; passes three arguments</span><br><span class="line">mWrite &lt;&quot;Line three&quot;, 0dh, 0ah&gt;	; passes a single argument</span><br><span class="line"></span><br><span class="line">BadYValue	TEXTEQU Warning: &lt;Y-coordinate is &gt; 24 &gt; ; ends when first &gt;</span><br><span class="line">BadYValue	TEXTEQU Warning: &lt;Y-coordinate is !&gt; 24 &gt; ; continues</span><br></pre></td></tr></table></figure>

<h4 id="1-7-Macro-Function"><a href="#1-7-Macro-Function" class="headerlink" title="1.7    Macro Function"></a>1.7    Macro Function</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IsDefined MACRO symbol</span><br><span class="line">	IFDEF symbol</span><br><span class="line">		EXITM &lt;-1&gt;</span><br><span class="line">	ELSE</span><br><span class="line">		EXITM &lt;0&gt;</span><br><span class="line">	ENDIF</span><br><span class="line">ENDM</span><br><span class="line"></span><br><span class="line">IF IsDefined( RealMode )</span><br><span class="line">	mov ax, @data</span><br><span class="line">	mov ds, ax</span><br><span class="line">ENDIF</span><br></pre></td></tr></table></figure>

<h2 id="2-Defining-Repeat-Blocks"><a href="#2-Defining-Repeat-Blocks" class="headerlink" title="2. Defining Repeat Blocks"></a>2. Defining Repeat Blocks</h2><h4 id="2-1-WHILE-Directive"><a href="#2-1-WHILE-Directive" class="headerlink" title="2.1    WHILE Directive"></a>2.1    WHILE Directive</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WHILE constExpression</span><br><span class="line">	statements</span><br><span class="line">ENDM</span><br><span class="line">.data</span><br><span class="line">val1 = 1</span><br><span class="line">val2 = 1</span><br><span class="line">DWORD val1</span><br><span class="line">DWORD val2</span><br><span class="line">val3 = val1 + val2</span><br><span class="line"></span><br><span class="line">WHILE val3 LT 0F0000000h</span><br><span class="line">	DWORD val3</span><br><span class="line">	val1 = val2</span><br><span class="line">	val2 = val3</span><br><span class="line">	val3 = val1 + val2</span><br><span class="line">ENDM</span><br></pre></td></tr></table></figure>

<h4 id="2-2-REPEAT-Directive"><a href="#2-2-REPEAT-Directive" class="headerlink" title="2.2    REPEAT Directive"></a>2.2    REPEAT Directive</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">REPEAT constExpression</span><br><span class="line">	statements</span><br><span class="line">ENDM</span><br><span class="line"></span><br><span class="line">iVal = 10</span><br><span class="line">REPEAT 100</span><br><span class="line">	DWORD iVal</span><br><span class="line">	iVal = iVal + 10</span><br><span class="line">ENDM</span><br></pre></td></tr></table></figure>

<h4 id="2-3-FOR-Directive"><a href="#2-3-FOR-Directive" class="headerlink" title="2.3    FOR Directive"></a>2.3    FOR Directive</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FOR parameter, &lt;arg1, arg2, arg3&gt;</span><br><span class="line">	statements</span><br><span class="line">ENDM</span><br><span class="line"></span><br><span class="line">Window STRUCT</span><br><span class="line">	FOR color, &lt;frame, titlebar, background, foreground&gt;</span><br><span class="line">		color DWORD ?</span><br><span class="line">	ENDM</span><br><span class="line">Window ENDS</span><br><span class="line">; generated code:</span><br><span class="line">Window STRUCT</span><br><span class="line">	frame DWORD ?</span><br><span class="line">	titlebar DWORD ?</span><br><span class="line">	background DWORD ?</span><br><span class="line">	foreground DWORD ?</span><br><span class="line">Window ENDS</span><br></pre></td></tr></table></figure>

<h4 id="2-4-FORC-Directive"><a href="#2-4-FORC-Directive" class="headerlink" title="2.4    FORC Directive"></a>2.4    FORC Directive</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FORC parameter, &lt;string&gt;</span><br><span class="line">	statements</span><br><span class="line">ENDM</span><br><span class="line"></span><br><span class="line">FORC code, &lt;ABCDEFG&gt;</span><br><span class="line">	Group_&amp;code WORD ?</span><br><span class="line">ENDM</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>汇编</category>
      </categories>
      <tags>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编第七天</title>
    <url>/2022/02/14/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96_Day7/</url>
    <content><![CDATA[<h2 id="1-Win32-Console-Programming"><a href="#1-Win32-Console-Programming" class="headerlink" title="1. Win32 Console Programming"></a>1. Win32 Console Programming</h2><h4 id="1-1-Translating-Windows-Data-Types"><a href="#1-1-Translating-Windows-Data-Types" class="headerlink" title="1.1    Translating Windows Data Types"></a>1.1    Translating Windows Data Types</h4><table>
<thead>
<tr>
<th>Windows Types</th>
<th>MASM Type</th>
</tr>
</thead>
<tbody><tr>
<td>BOOL</td>
<td>DWORD</td>
</tr>
<tr>
<td>LONG</td>
<td>SWORD</td>
</tr>
<tr>
<td>COLORREF, HANDLE, LPARAM, LPCTSTR, LPTSTR, LPVOID, LRESULT, UINT, WNDPROC, WPARAM</td>
<td>DWORD</td>
</tr>
<tr>
<td>BSTR, LPCSTR, LPSTR</td>
<td>PTR BYTE</td>
</tr>
<tr>
<td>WORD</td>
<td>WORD</td>
</tr>
<tr>
<td>LPCRECT</td>
<td>PTR RECT</td>
</tr>
</tbody></table>
<h4 id="1-2-Standard-Console-Handles"><a href="#1-2-Standard-Console-Handles" class="headerlink" title="1.2    Standard Console Handles"></a>1.2    Standard Console Handles</h4><p>A handle is an unsigned 32-bit integer.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">STD_INPUT_HANDLE</span><br><span class="line">	; standard input</span><br><span class="line">STD_OUTPUT_HANDLE</span><br><span class="line">	; standard output</span><br><span class="line">STD_ERROR_HANDLE</span><br><span class="line">	; standard error output</span><br><span class="line"></span><br><span class="line">; GetStdHandle, the handle is returned in eax</span><br><span class="line">GetStdHandle PROTO,</span><br><span class="line">	nStdHandle:DWORD</span><br><span class="line"></span><br><span class="line">INVOKE GetStdHandle, STD_OUTPUT_HANDLE</span><br><span class="line">mov myHandle, eax</span><br><span class="line"></span><br><span class="line">ReadConsole PROTO,</span><br><span class="line">	handle:DWORD					; input handle</span><br><span class="line">	pBuffer:PTR BYTE				; pointer to buffer</span><br><span class="line">	maxBytes:DWORD					; number of chars to read</span><br><span class="line">	pBytesRead:PTR DWORD			; ptr to num bytes read</span><br><span class="line">	notUsed:DWORD					; (not used)</span><br><span class="line"></span><br><span class="line">WriteConsole PROTO,</span><br><span class="line">	handle:DWORD					; output handle</span><br><span class="line">	pBuffer:PTR BYTE				; pointer to buffer</span><br><span class="line">	bufsize:DWORD					; size of buffer</span><br><span class="line">	pCount:PTR DWORD				; output count</span><br><span class="line">	lpReserved:DWORD				; (not used)</span><br></pre></td></tr></table></figure>

<h4 id="1-3-Example"><a href="#1-3-Example" class="headerlink" title="1.3    Example"></a>1.3    Example</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mainc1 PROC</span><br><span class="line">; get the console output handle</span><br><span class="line">	INVOKE GetStdHandle, STD_OUTPUT_HANDLE</span><br><span class="line">	mov consoleHandle, eax</span><br><span class="line">	mov ebx, messageSize</span><br><span class="line">	</span><br><span class="line">	INVOKE WriteConsole, consoleHandle, ADDR message, ebx, ADDR bytesWriiten,0</span><br><span class="line">	INVOKE ExitProcess, 0</span><br><span class="line">mainc1 ENDP</span><br></pre></td></tr></table></figure>

<h2 id="2-Console-Window-Manipulation"><a href="#2-Console-Window-Manipulation" class="headerlink" title="2. Console Window Manipulation"></a>2. Console Window Manipulation</h2><h4 id="2-1-Screen-Buffer-and-Console-Window"><a href="#2-1-Screen-Buffer-and-Console-Window" class="headerlink" title="2.1    Screen Buffer and Console Window"></a>2.1    Screen Buffer and Console Window</h4><p>the active screen buffer includes data displayed by the console window</p>
<p><a href="https://imgtu.com/i/HLU6SS"><img src="https://s4.ax1x.com/2022/02/20/HLU6SS.png" alt="HLU6SS.png"></a></p>
<h4 id="2-2-SetConsoleTitle"><a href="#2-2-SetConsoleTitle" class="headerlink" title="2.2    SetConsoleTitle"></a>2.2    SetConsoleTitle</h4><p>SetConsoleTitle changes the console window’s title</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">titleStr BYTE &quot;Console title&quot;, 0</span><br><span class="line">.code</span><br><span class="line">INVOKE SetConsoleTitle, ADDR titleStr</span><br></pre></td></tr></table></figure>

<h4 id="2-3-GetConsoleScreenBufferInfo"><a href="#2-3-GetConsoleScreenBufferInfo" class="headerlink" title="2.3    GetConsoleScreenBufferInfo"></a>2.3    GetConsoleScreenBufferInfo</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">outHandlw DWORD ?</span><br><span class="line">consoleInfo CONSOLE_SCREEN_BUFFER_INFO &lt;&gt;</span><br><span class="line">.code</span><br><span class="line">	INVOKE GetConsoleScreenBufferInfo, outHandle, ADDR consoleInfo</span><br><span class="line"></span><br><span class="line">CONSOLE_SCREEN_BUFFER_INFO STRUCT</span><br><span class="line">	dwSize	COORD &lt;&gt;</span><br><span class="line">	dwCursorPos	COORD &lt;&gt;</span><br><span class="line">	wAttributes	WORD ?</span><br><span class="line">	srWindow	SMALL_RECT &lt;&gt;</span><br><span class="line">	maxWinSize	COORD &lt;&gt;</span><br><span class="line">CONSOLE_SCREEN_BUFFER_INFO ENDS</span><br><span class="line">; dwSize: size of the screen buffer(char columns and rows)</span><br><span class="line">; dwCursorPos: cursor location</span><br><span class="line">; wAttributes: colors of characters in console buffer</span><br><span class="line">; srWindow: coords of console window relative to screen buffer</span><br><span class="line">; maxWinSize: maximum size of the console window</span><br><span class="line">COORD STRUCT</span><br><span class="line">	X WORD ?</span><br><span class="line">	Y WORD ?</span><br><span class="line">COORD ENDS</span><br><span class="line">SMALL_RECT STRUCT</span><br><span class="line">	Left WORD ?</span><br><span class="line">	Top WORD ?</span><br><span class="line">	Right WORD ?</span><br><span class="line">	Bottom WORD ?</span><br><span class="line">SMALL_RECT ENDS</span><br></pre></td></tr></table></figure>

<h4 id="2-4-SetConsoleWindowInfo"><a href="#2-4-SetConsoleWindowInfo" class="headerlink" title="2.4    SetConsoleWindowInfo"></a>2.4    SetConsoleWindowInfo</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SetConsoleWindowInfo PROTO,</span><br><span class="line">	nStdHandle:DWORD,			; screen buffer handle</span><br><span class="line">	bAbsolute:DWORD,			; coordinate type</span><br><span class="line">	pConsoleRect:PTR SMALL_RECT ; window rectangle</span><br><span class="line"></span><br><span class="line">SetConsoleScreenBufferSize PROTO,</span><br><span class="line">	outHandle:DWORD,			; handle to screen buffer</span><br><span class="line">	dwSize:COORD 				; new screen buffer size</span><br></pre></td></tr></table></figure>

<h2 id="3-Controlling-the-cursor"><a href="#3-Controlling-the-cursor" class="headerlink" title="3. Controlling the cursor"></a>3. Controlling the cursor</h2><h4 id="3-1-CONSOLE-CURSOR-INFO"><a href="#3-1-CONSOLE-CURSOR-INFO" class="headerlink" title="3.1    CONSOLE_CURSOR_INFO"></a>3.1    CONSOLE_CURSOR_INFO</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CONSOLE_CURSOR_INFO STRUCT</span><br><span class="line">	dwSize	DWORD ?		; percentage 1 to 100 of the char cell</span><br><span class="line">	bVisible DWORD ?	; true or false</span><br><span class="line">CONSOLE_CURSOR_INFO ENDS</span><br></pre></td></tr></table></figure>

<h4 id="3-2-SetConsoleTextAttribute"><a href="#3-2-SetConsoleTextAttribute" class="headerlink" title="3.2    SetConsoleTextAttribute"></a>3.2    SetConsoleTextAttribute</h4><p>sets the foreground and background colors of all subsequent text written to the console</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SetConsoleTextAttribute	PROTO,</span><br><span class="line">	hConsoleOutput:HANDLE,		; console output handle</span><br><span class="line">	wAttributes:WORD 			; color attribute</span><br></pre></td></tr></table></figure>

<h4 id="3-3-WriteConsoleOutputAttribute"><a href="#3-3-WriteConsoleOutputAttribute" class="headerlink" title="3.3    WriteConsoleOutputAttribute"></a>3.3    WriteConsoleOutputAttribute</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WriteConsoleOutputAttribute PROTO,</span><br><span class="line">	hConsoleOutput:DWORD,		; output handle</span><br><span class="line">	lpAttribute:PTR WORD,       ; write attributes</span><br><span class="line">	nLength:DWORD, 				; number of cells</span><br><span class="line">	dwWriteCoord:COORD,			; first cell coordinates</span><br><span class="line">	lpNumberOfAttrsWritten:PTR DWORD	; output count</span><br></pre></td></tr></table></figure>

<h4 id="3-4-WriteConsoleOutputCharacter"><a href="#3-4-WriteConsoleOutputCharacter" class="headerlink" title="3.4    WriteConsoleOutputCharacter"></a>3.4    WriteConsoleOutputCharacter</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WriteConsoleOutputCharacter PROTO,</span><br><span class="line">	hConsoleOutput:HANDLE,		; console output handle</span><br><span class="line">	lpCharacter:PTR BYTE,		; pointer to buffer</span><br><span class="line">	nLength:DWORD,				; size of buffer</span><br><span class="line">	dwWriteCoord:COORD,			; first cell coordinates</span><br><span class="line">	lpNumberOfCharsWritten:PTR DWORD	; output count</span><br></pre></td></tr></table></figure>

<h2 id="4-File-Manipulation"><a href="#4-File-Manipulation" class="headerlink" title="4. File Manipulation"></a>4. File Manipulation</h2><h4 id="4-1-CreateFile"><a href="#4-1-CreateFile" class="headerlink" title="4.1    CreateFile"></a>4.1    CreateFile</h4><p>either creates a new file or opens an existing file.</p>
<p>if successful, returns a handle to the open file; otherwise, returns INVALID_HANDLE_VALUE</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CreateFile PROTO,</span><br><span class="line">	pFilename:PTR BYTE,			; ptr to filename</span><br><span class="line">	desireAccess:DWORD,			; access mod</span><br><span class="line">	shareMode:DWORD,			; share mode</span><br><span class="line">	lpSecurity:DWORD,			; ptr to security attribs</span><br><span class="line">	creationDisposition:DWORD,  ; file creation options</span><br><span class="line">	flagsAndAttributes:DWORD,	; file attributes</span><br><span class="line">	htemplate:DWORD				; handle to template file</span><br><span class="line"></span><br><span class="line">; opens an existing file for reading</span><br><span class="line">INVOKE CreateFile,</span><br><span class="line">	ADDR filename,				; ptr to filename</span><br><span class="line">	GENERIC_READ,				; access mode &quot;GENERIC_WRITE&quot;	</span><br><span class="line">	DO_NOT_SHARE,				; share mode</span><br><span class="line">	NULL,						; ptr to security attributes</span><br><span class="line">	OPEN_EXISTING,				; file creation options</span><br><span class="line">	FILE_ATTRIBUTE_NORMAL,		; file attributes</span><br><span class="line">	0							; handle to template file</span><br><span class="line"></span><br><span class="line">INVOKE CreateFile,</span><br><span class="line">	ADDR filename,				; ptr to filename</span><br><span class="line">	GENERIC_WRITE,				; access mode</span><br><span class="line">	DO_NOT_SHARE,				; share mode</span><br><span class="line">	NULL,						; ptr to security attributes</span><br><span class="line">	CREATE_ALWAYS,				; file creation options</span><br><span class="line">	FILE_ATTRIBUTE_NORMAL,		; file attributes</span><br><span class="line">	0							; handle to template file</span><br></pre></td></tr></table></figure>

<h4 id="4-2-ReadFile"><a href="#4-2-ReadFile" class="headerlink" title="4.2    ReadFile"></a>4.2    ReadFile</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ReadFile PROTO,</span><br><span class="line">	handle:DWORD,				; handle to file</span><br><span class="line">	pBuffer:PTR BYTE,			; ptr to buffer</span><br><span class="line">	nBufSize:DWORD,				; num bytes to read</span><br><span class="line">	pBytesRead:PTR DWORD,		; bytes actually read</span><br><span class="line">	pOverlapped:PTR DWORD		; ptr to asynch info</span><br></pre></td></tr></table></figure>

<h4 id="4-3-WriteFile"><a href="#4-3-WriteFile" class="headerlink" title="4.3    WriteFile"></a>4.3    WriteFile</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WriteFile PROTO</span><br><span class="line">	fileHandle:DWORD,			; output handle</span><br><span class="line">	pBuffer:PTR BYTE,			; pointer to buffer</span><br><span class="line">	nBufSize:DWORD,				; size of buffer</span><br><span class="line">	pBytesWritten:PTR DWORD,	; num bytes written</span><br><span class="line">	pOverlapped:PTR DWORD		; ptr to asynch info</span><br></pre></td></tr></table></figure>

<h4 id="4-4-SetFilePointer"><a href="#4-4-SetFilePointer" class="headerlink" title="4.4    SetFilePointer"></a>4.4    SetFilePointer</h4><p>SetFilePointer moves the position pointer of an open file. </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SetFilePointer PROTO,</span><br><span class="line">	handle:DWORD,				; file handle</span><br><span class="line">	nDistanceLo:SDWORD,			; bytes to move pointer</span><br><span class="line">	pDistanceHi:PTR SDWORD,		; ptr to bytes to move</span><br><span class="line">	moveMethod:DWORD			; starting point</span><br><span class="line">INVOKE SetFilePointer, fileHandle, 0,0, FILE_END</span><br></pre></td></tr></table></figure>

<h4 id="4-5-GetLocalTime-SetLocalTime"><a href="#4-5-GetLocalTime-SetLocalTime" class="headerlink" title="4.5    GetLocalTime, SetLocalTime"></a>4.5    GetLocalTime, SetLocalTime</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GetLocalTime PROTO,</span><br><span class="line">	pSystemTime:PTR SYSTEMTIME</span><br><span class="line">SetLocalTime PROTO,</span><br><span class="line">	pSystemTime:PTR SYSTEMTIME</span><br><span class="line"></span><br><span class="line">SYSTEMTIME STRUCT</span><br><span class="line">	wYear WORD ?</span><br><span class="line">	wMonth WORD ?</span><br><span class="line">	wDayOfWeek WORD ?</span><br><span class="line">	wDay WORD ?</span><br><span class="line">	wHour WORD ?</span><br><span class="line">	wMinute WORD ?</span><br><span class="line">	wSecond WORD ?</span><br><span class="line">	wMilliseconds ?</span><br><span class="line">SYSTEMTIME ENDS</span><br></pre></td></tr></table></figure>

<h4 id="4-6-GetTickCount-Sleep"><a href="#4-6-GetTickCount-Sleep" class="headerlink" title="4.6    GetTickCount, Sleep"></a>4.6    GetTickCount, Sleep</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GetTickCount PROTO, ; return value in eax</span><br><span class="line">Sleep PROTO,</span><br><span class="line">	dwMilliseconds:DWORD</span><br></pre></td></tr></table></figure>

<h2 id="5-Writing-a-Graphic-Windows-Application"><a href="#5-Writing-a-Graphic-Windows-Application" class="headerlink" title="5. Writing a Graphic Windows Application"></a>5. Writing a Graphic Windows Application</h2><h4 id="5-1-MessageBox-Function"><a href="#5-1-MessageBox-Function" class="headerlink" title="5.1    MessageBox Function"></a>5.1    MessageBox Function</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MessageBox PROTO,</span><br><span class="line">	hWnd:DWORD,					; a handle to the current window</span><br><span class="line">	lpText:PTR BYTE,			; ptr to string inside the box</span><br><span class="line">    lpCaption:PTR BYTE,			; ptr to string	in caption&#x27;s bar</span><br><span class="line">	uTyle:DWORD					; describe icon</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">hMainWnd DWORD ?</span><br><span class="line">QuestionText BYTE &quot;Register this program now?&quot;, 0</span><br><span class="line">QuestionTitle BYTE &quot;Trial Period Has Expired&quot;, 0</span><br><span class="line">.code</span><br><span class="line">INVOKE MessageBox, hMainWnd, ADDR QuestionText, ADDR QuestionTitle,</span><br><span class="line">	MB_OK + MB_ICONQUESTION</span><br></pre></td></tr></table></figure>

<h4 id="5-2-Required-Files"><a href="#5-2-Required-Files" class="headerlink" title="5.2    Required Files"></a>5.2    Required Files</h4><p><a href="https://imgtu.com/i/HL4YpF"><img src="https://s4.ax1x.com/2022/02/20/HL4YpF.png" alt="HL4YpF.png"></a></p>
<h4 id="5-3-Structures"><a href="#5-3-Structures" class="headerlink" title="5.3    Structures"></a>5.3    Structures</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MSGStruct STRUCT</span><br><span class="line">	msgWnd DWORD ?</span><br><span class="line">	msgMessage DWORD ?</span><br><span class="line">	msgWparam DWORD ?</span><br><span class="line">	msgLparam DWORD ?</span><br><span class="line">	msgTime DWORD ?</span><br><span class="line">	msgPt POINT &lt;&gt;</span><br><span class="line">MSGStruct ENDS</span><br><span class="line"></span><br><span class="line">; each window belongs to a class and each program defines a window class for its main window</span><br><span class="line">WNDCLASS STRUCT</span><br><span class="line">	style DWORD ?				; window style options	</span><br><span class="line">	lpfnWndProc DWORD ?			; winproc function pointer</span><br><span class="line">	cbClsExtra DWORD ?			; shared memory</span><br><span class="line">	cbWndExtra DWORD ?			; number of extra bytes</span><br><span class="line">	hInstance DWORD ?			; handle to current program</span><br><span class="line">	hIcon DWORD ?				; handle to icon</span><br><span class="line">	hCursor DWORD ?				; handle to cursor</span><br><span class="line">	hbrBackground DWORD ?		; handle to background brush</span><br><span class="line">	lpszMenuName DWORD ?		; pointer to menu name</span><br><span class="line">	lpszClassName DWORD ?		; pointer ro winclass name</span><br><span class="line">WNDCLASS ENDS</span><br></pre></td></tr></table></figure>

<p><a href="https://imgtu.com/i/HL52CT"><img src="https://s4.ax1x.com/2022/02/20/HL52CT.png" alt="HL52CT.png"></a></p>
<h4 id="5-4-WinMain-Procedure"><a href="#5-4-WinMain-Procedure" class="headerlink" title="5.4    WinMain Procedure"></a>5.4    WinMain Procedure</h4><p>every windows application needs a startup procedure named WinMain</p>
<p>Get a handle to the current program</p>
<p>Load the program’s icon and mouse cursor</p>
<p>Register the program’s main window class and identify the procedure that will process event messages for the window</p>
<p>Create the main window</p>
<p>Show and update the main window</p>
<p>Begin a loop that receives and dispatches messages</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WindProc PROC,</span><br><span class="line">	hWnd:DWORD,			; handle to the window</span><br><span class="line">	localMsg:DWORD,     ; message ID</span><br><span class="line">	wParam:DWORD, 		; parameter 1</span><br><span class="line">	lParam:DWORD		; parameter 2</span><br></pre></td></tr></table></figure>

<h4 id="5-5-ErrorHandler-Procedure"><a href="#5-5-ErrorHandler-Procedure" class="headerlink" title="5.5    ErrorHandler Procedure"></a>5.5    ErrorHandler Procedure</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GetLastError: retrieve the system error number</span><br><span class="line">FormatMessage: retrieve the appropriate system-formatted error message string</span><br><span class="line">MessageBox: display a popup message box</span><br><span class="line">LocalFree: free the memory used by the error message string</span><br><span class="line"></span><br><span class="line">INVOKE GetLastError	; return message ID in eax</span><br><span class="line">mov messageID, eax</span><br><span class="line"></span><br><span class="line">INVOKE FormatMessage, FORMAT_MESSAGE_ALLOCATION_BUFFER + \</span><br><span class="line"> FORMAT_MESSAGE_FROM_SYSTEM, NULL, messageID, NULL, ADDR pErrorMsg, NULL, NULL</span><br><span class="line"></span><br><span class="line">INVOKE MessageBox, NULL, pErrorMsg, ADDR ErrorTitle, MB_ICONERROR + MB_OK</span><br><span class="line"></span><br><span class="line">INVOKE LocalFree, pErrorMsg</span><br><span class="line"></span><br><span class="line">Message_Loop:</span><br><span class="line">	INVOKE GetMessage, ADDR msg, NULL, NULL, NULL</span><br><span class="line">	.IF eax == 0</span><br><span class="line">		jmp Exit_Program</span><br><span class="line">	.ENDIF</span><br><span class="line">	INVOKE DispatchMessage, ADDR msg</span><br><span class="line">	jmp Message_Loop</span><br><span class="line"></span><br><span class="line">WinProc PROC, hWnd:DWORD, localMsg:DWORD,</span><br><span class="line">	wParam:WORD, lParam:DWORD</span><br><span class="line">	mov eax, localMsg</span><br><span class="line">	.IF eax == WM_LBUTTOMDOWN</span><br><span class="line">		INVOKE MessageBox, hWnd, ADDR PopupText, ADDR PopupTitle, MB_OK</span><br><span class="line">		jmp WinProcExit</span><br><span class="line">	.ELSEIF eax == WM_CREATE</span><br><span class="line">		INVOKE MessageBox, hWnd,ADDR AppLoadMsgText,ADDR AppLoadMsgTitle,MB_OK</span><br><span class="line">		jmp WinProcExit</span><br><span class="line">	</span><br></pre></td></tr></table></figure>

<h2 id="6-Dynamic-Memory-Allocation"><a href="#6-Dynamic-Memory-Allocation" class="headerlink" title="6. Dynamic Memory Allocation"></a>6. Dynamic Memory Allocation</h2><p><a href="https://imgtu.com/i/HO9pc9"><img src="https://s4.ax1x.com/2022/02/20/HO9pc9.png" alt="HO9pc9.png"></a></p>
<h4 id="6-1-sample-create"><a href="#6-1-sample-create" class="headerlink" title="6.1 sample create"></a>6.1 sample create</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HEAP_START = 2000000	; 2MB</span><br><span class="line">HEAP_MAX = 400000000	; 400MB</span><br><span class="line">.data</span><br><span class="line">hHeap HANDLE ?</span><br><span class="line">.code</span><br><span class="line">INVOKE HeapCreate, 0, HEAP_START, HEAP_MAX</span><br><span class="line">.IF eax == NULL</span><br><span class="line">	jmp quit</span><br><span class="line">.ELSE</span><br><span class="line">	mov hHeap, eax</span><br><span class="line">.ENDIF</span><br></pre></td></tr></table></figure>

<h4 id="6-2-sample-free"><a href="#6-2-sample-free" class="headerlink" title="6.2    sample free"></a>6.2    sample free</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">hHeap HANDLE ?</span><br><span class="line">pArray DWORD ?</span><br><span class="line">.code</span><br><span class="line">INVOKE HeapFree, hHeap, 0, pArray</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>汇编</category>
      </categories>
      <tags>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编第八天</title>
    <url>/2022/02/20/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96_Day8/</url>
    <content><![CDATA[<h2 id="1-MS-DOS-and-the-IBM-PC"><a href="#1-MS-DOS-and-the-IBM-PC" class="headerlink" title="1. MS-DOS and the IBM-PC"></a>1. MS-DOS and the IBM-PC</h2><h4 id="1-1-Real-Address-Mode"><a href="#1-1-Real-Address-Mode" class="headerlink" title="1.1    Real-Address Mode"></a>1.1    Real-Address Mode</h4><p><a href="https://imgtu.com/i/HOCUPO"><img src="https://s4.ax1x.com/2022/02/20/HOCUPO.png" alt="HOCUPO.png"></a></p>
<span id="more"></span>

<h4 id="1-2-MS-DOS-Memory-Organization"><a href="#1-2-MS-DOS-Memory-Organization" class="headerlink" title="1.2    MS-DOS Memory Organization"></a>1.2    MS-DOS Memory Organization</h4><p><a href="https://imgtu.com/i/HO1g2j"><img src="https://s4.ax1x.com/2022/02/20/HO1g2j.png" alt="HO1g2j.png"></a></p>
<h4 id="1-3-Redirecting-Input-Output"><a href="#1-3-Redirecting-Input-Output" class="headerlink" title="1.3    Redirecting Input-Output"></a>1.3    Redirecting Input-Output</h4><p><a href="https://imgtu.com/i/HO1qz9"><img src="https://s4.ax1x.com/2022/02/20/HO1qz9.png" alt="HO1qz9.png"></a></p>
<h4 id="1-4-INT-Instructions"><a href="#1-4-INT-Instructions" class="headerlink" title="1.4    INT Instructions"></a>1.4    INT Instructions</h4><p>this instruction executes a software interrupt, which is called an interrupt handler.</p>
<p>The Interrupt Vector Table holds a 32-bit segment-offset address for each possible interrupt handler.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INT number</span><br><span class="line">; (number = 0..FFh)</span><br></pre></td></tr></table></figure>

<p><a href="https://imgtu.com/i/HO81hD"><img src="https://s4.ax1x.com/2022/02/20/HO81hD.png" alt="HO81hD.png"></a></p>
<h4 id="1-5-Common-Interrupts"><a href="#1-5-Common-Interrupts" class="headerlink" title="1.5     Common Interrupts"></a>1.5     Common Interrupts</h4><p><a href="https://imgtu.com/i/HOGtGF"><img src="https://s4.ax1x.com/2022/02/20/HOGtGF.png" alt="HOGtGF.png"></a></p>
<h2 id="2-MS-DOS-Function-Calls"><a href="#2-MS-DOS-Function-Calls" class="headerlink" title="2. MS-DOS Function Calls"></a>2. MS-DOS Function Calls</h2><h4 id="2-1-INT-21h-Function-4Ch-Terminate-Process"><a href="#2-1-INT-21h-Function-4Ch-Terminate-Process" class="headerlink" title="2.1    INT 21h Function 4Ch: Terminate Process"></a>2.1    INT 21h Function 4Ch: Terminate Process</h4><p>Ends the current process, returns an optional 8-bit return code to the calling process.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov ah, 4Ch</span><br><span class="line">mov al, 0</span><br><span class="line">int 21h</span><br><span class="line">; same as:</span><br><span class="line">.EXIT 0</span><br></pre></td></tr></table></figure>

<h4 id="2-2-ASCII-Control-Characters"><a href="#2-2-ASCII-Control-Characters" class="headerlink" title="2.2    ASCII Control Characters"></a>2.2    ASCII Control Characters</h4><p><a href="https://imgtu.com/i/HOJjpD"><img src="https://s4.ax1x.com/2022/02/20/HOJjpD.png" alt="HOJjpD.png"></a></p>
<p><a href="https://imgtu.com/i/HOJhpF"><img src="https://s4.ax1x.com/2022/02/20/HOJhpF.png" alt="HOJhpF.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov ah, 02h</span><br><span class="line">mov dl, &#x27;A&#x27;</span><br><span class="line">int 21h</span><br><span class="line"></span><br><span class="line">mov ah, 06h</span><br><span class="line">mov dl, 08h</span><br><span class="line">int 21h</span><br></pre></td></tr></table></figure>

<h4 id="2-3-Function-09h"><a href="#2-3-Function-09h" class="headerlink" title="2.3    Function 09h"></a>2.3    Function 09h</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">string BYTE &quot;This is a string$&quot;</span><br><span class="line">.code</span><br><span class="line">mov ah, 9</span><br><span class="line">mov dx, OFFSET string</span><br><span class="line">int 21h</span><br></pre></td></tr></table></figure>

<h4 id="2-4-Function-40h"><a href="#2-4-Function-40h" class="headerlink" title="2.4    Function 40h"></a>2.4    Function 40h</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">message BYTE &quot;Writing a string to the console&quot;</span><br><span class="line">bytesWritten WORD ?</span><br><span class="line">.code</span><br><span class="line">	mov ah, 40h</span><br><span class="line">	mov bx, 1</span><br><span class="line">	mov cx, LENGTHOF message</span><br><span class="line">	mov dx, OFFSET message</span><br><span class="line">	int 21h</span><br><span class="line">	mov bytesWritten, ax</span><br></pre></td></tr></table></figure>

<h4 id="2-5-Function-01h"><a href="#2-5-Function-01h" class="headerlink" title="2.5    Function 01h"></a>2.5    Function 01h</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">char BYTE ?</span><br><span class="line">.code</span><br><span class="line">mov ah, 01h</span><br><span class="line">int 21h</span><br><span class="line">mov char, al</span><br></pre></td></tr></table></figure>

<h4 id="2-6-Function-06h"><a href="#2-6-Function-06h" class="headerlink" title="2.6    Function 06h"></a>2.6    Function 06h</h4><p>Does not echo the input character</p>
<p>Does not wait for input(use the zero flag to check for an input character)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">char BYTE ?</span><br><span class="line">.code</span><br><span class="line">L1:</span><br><span class="line">	mov ah, 06h</span><br><span class="line">	mov dl, 0FFh</span><br><span class="line">	int 21h</span><br><span class="line">	jz L1</span><br><span class="line">	mov char, al</span><br><span class="line">	call DumpRegs</span><br></pre></td></tr></table></figure>

<h4 id="2-7-Function-0Ah"><a href="#2-7-Function-0Ah" class="headerlink" title="2.7    Function 0Ah"></a>2.7    Function 0Ah</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">count = 80</span><br><span class="line"></span><br><span class="line">KEYBOARD STRUCT</span><br><span class="line">	maxInput BYTE count				; max chars to input</span><br><span class="line">	inputCount BYTE ?				; actual input count</span><br><span class="line">	buffer BYTE count DUP(?)		; holds input chars</span><br><span class="line">KEYBOARD ENDS</span><br><span class="line"></span><br><span class="line">.data</span><br><span class="line">kybdData KEYBOARD &lt;&gt;</span><br><span class="line">.code</span><br><span class="line">	mov ah, 0Ah</span><br><span class="line">	mov dx, OFFSET kybdData</span><br><span class="line">	int 21h</span><br></pre></td></tr></table></figure>

<h4 id="2-8-Function-0Bh"><a href="#2-8-Function-0Bh" class="headerlink" title="2.8    Function 0Bh"></a>2.8    Function 0Bh</h4><p>get status of std input buffer</p>
<p>can be interrupted by ctrl+c</p>
<p>loop until a key is pressed. save it in a variable</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">L1:</span><br><span class="line">	mov ah, 0Bh</span><br><span class="line">	int 21h</span><br><span class="line">	cmp al, 0</span><br><span class="line">	je L1</span><br><span class="line">	mov ah, 1</span><br><span class="line">	int 21h</span><br><span class="line">	mov char, al</span><br><span class="line"></span><br><span class="line">; example: String Encryption</span><br><span class="line">XORVAL = 239</span><br><span class="line">.code</span><br><span class="line">main PROC</span><br><span class="line">	mov ax, @data</span><br><span class="line">	mov ds, ax</span><br><span class="line">L1:</span><br><span class="line">	mov ah, 6</span><br><span class="line">	mov dl, 0FFh		; don&#x27;t wait for character</span><br><span class="line">	int 21h	</span><br><span class="line">	jz L2				; quit if zf = 1</span><br><span class="line">	xor al, XORVAL</span><br><span class="line">	mov ah, 6</span><br><span class="line">	mov dl, al</span><br><span class="line">	int 21h				; write to output</span><br><span class="line">	jmp L1</span><br><span class="line">L2: EXIT</span><br></pre></td></tr></table></figure>

<h4 id="2-9-Function-3Fh"><a href="#2-9-Function-3Fh" class="headerlink" title="2.9    Function 3Fh"></a>2.9    Function 3Fh</h4><p>Reads a block of bytes</p>
<p>can be interrupted by ctrl+c</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">inputBuffer BYTE 127 DUP(0)</span><br><span class="line">bytesRead WORD ?</span><br><span class="line">.code</span><br><span class="line">mov ah, 3Fh</span><br><span class="line">mov bx, 0</span><br><span class="line">mov cx, 127</span><br><span class="line">mov dx, OFFSET inputBuffer</span><br><span class="line">int 21h</span><br><span class="line">mov bytesRead, ax</span><br></pre></td></tr></table></figure>

<h4 id="2-10-Function-2Ah"><a href="#2-10-Function-2Ah" class="headerlink" title="2.10    Function 2Ah"></a>2.10    Function 2Ah</h4><p>returns year in cx, month in dh, day in dl, and aday of week in al</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov ah, 2Ah</span><br><span class="line">int 21h</span><br><span class="line">mov year, cx</span><br><span class="line">mov month, dh</span><br><span class="line">mov day, dl</span><br><span class="line">mov dayOfWeek, al</span><br></pre></td></tr></table></figure>

<h4 id="2-11-Function-2Bh"><a href="#2-11-Function-2Bh" class="headerlink" title="2.11    Function 2Bh"></a>2.11    Function 2Bh</h4><p>sets the system date.</p>
<p>AL = 0 if function was successful</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov ah, 2Bh</span><br><span class="line">mov cx, year</span><br><span class="line">mov dh, month</span><br><span class="line">mov dl, day</span><br><span class="line">int 21h</span><br><span class="line">cmp al, 0</span><br><span class="line">jne failed</span><br></pre></td></tr></table></figure>

<h4 id="2-12-Function-2Ch"><a href="#2-12-Function-2Ch" class="headerlink" title="2.12    Function 2Ch"></a>2.12    Function 2Ch</h4><p>returns hours in ch, minutes in cl, seconds in dh, hundredth in dl</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov ah, 2Ch</span><br><span class="line">int 21h</span><br><span class="line">mov hours, ch</span><br><span class="line">mov minutes, cl</span><br><span class="line">mov seconds, dh</span><br></pre></td></tr></table></figure>

<h4 id="2-13-Function-2Dh"><a href="#2-13-Function-2Dh" class="headerlink" title="2.13 Function 2Dh"></a>2.13 Function 2Dh</h4><p>sets the system date. AL = 0 if function was successful</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov ah, 2Dh</span><br><span class="line">mov ch, hours</span><br><span class="line">mov cl, minutes</span><br><span class="line">mov dh, seconds</span><br><span class="line">int 21h</span><br><span class="line">cmp al, 0</span><br><span class="line">jne failed</span><br></pre></td></tr></table></figure>

<h2 id="3-File-Function"><a href="#3-File-Function" class="headerlink" title="3. File Function"></a>3. File Function</h2><h4 id="3-1-Function-716Ch"><a href="#3-1-Function-716Ch" class="headerlink" title="3.1 Function 716Ch"></a>3.1 Function 716Ch</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov ax, 716Ch</span><br><span class="line">mov bx, 2</span><br><span class="line">mov cx, 0</span><br><span class="line">mov dx, 10h + 02h</span><br><span class="line">mov si, OFFSET Filename</span><br><span class="line">int 21h</span><br><span class="line">jc failed</span><br><span class="line">mov handle, ax</span><br><span class="line">mov actionTaken, cx</span><br></pre></td></tr></table></figure>

<h4 id="3-2-Function-3Eh"><a href="#3-2-Function-3Eh" class="headerlink" title="3.2    Function 3Eh"></a>3.2    Function 3Eh</h4><p>use the same file handle that was returned by int21h when the file was opened</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">filehandle WORD ?</span><br><span class="line">.code</span><br><span class="line">mov ah, 3Eh</span><br><span class="line">mov bx, filehandle</span><br><span class="line">int 21h</span><br><span class="line">jc failed</span><br></pre></td></tr></table></figure>

<h4 id="3-3-Function-42h"><a href="#3-3-Function-42h" class="headerlink" title="3.3    Function 42h"></a>3.3    Function 42h</h4><p>permits random access to a file</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov ah, 42h</span><br><span class="line">mov al, 0</span><br><span class="line">mov bx, handle</span><br><span class="line">mov cx, offsetHi</span><br><span class="line">mov dx, offsetLo</span><br><span class="line">int 21h</span><br></pre></td></tr></table></figure>

<h4 id="3-4-Function-5706h"><a href="#3-4-Function-5706h" class="headerlink" title="3.4    Function 5706h"></a>3.4    Function 5706h</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov ax, 5706h</span><br><span class="line">mov bx, handle		; handle of open file</span><br><span class="line">int 21h</span><br><span class="line">jc error</span><br><span class="line">mov date, dx</span><br><span class="line">mov time, cx</span><br><span class="line">mov millisecconds, si</span><br></pre></td></tr></table></figure>

<h2 id="4-BIOS-Introduction"><a href="#4-BIOS-Introduction" class="headerlink" title="4. BIOS Introduction"></a>4. BIOS Introduction</h2><p><a href="https://imgtu.com/i/HOxIxA"><img src="https://s4.ax1x.com/2022/02/20/HOxIxA.png" alt="HOxIxA.png"></a></p>
<p><a href="https://imgtu.com/i/HOzez9"><img src="https://s4.ax1x.com/2022/02/20/HOzez9.png" alt="HOzez9.png"></a></p>
<h2 id="5-Keyboard-Input-with-INT-16h"><a href="#5-Keyboard-Input-with-INT-16h" class="headerlink" title="5. Keyboard Input with INT 16h"></a>5. Keyboard Input with INT 16h</h2><p><a href="https://imgtu.com/i/HXSd1J"><img src="https://s4.ax1x.com/2022/02/20/HXSd1J.png" alt="HXSd1J.png"></a></p>
<p><a href="https://imgtu.com/i/HXSXcj"><img src="https://s4.ax1x.com/2022/02/20/HXSXcj.png" alt="HXSXcj.png"></a></p>
<p><a href="https://imgtu.com/i/HXpEv9"><img src="https://s4.ax1x.com/2022/02/20/HXpEv9.png" alt="HXpEv9.png"></a></p>
<h4 id="5-1-Function-10h"><a href="#5-1-Function-10h" class="headerlink" title="5.1    Function 10h"></a>5.1    Function 10h</h4><p>if a key is in buffer, returns it immediately. Or, pauses and waits for user input</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">scanCode BYTE ?</span><br><span class="line">ASCIICode BYTE ?</span><br><span class="line"></span><br><span class="line">.code</span><br><span class="line">mov ah, 10h</span><br><span class="line">int 16h</span><br><span class="line">mov scanCode, ah</span><br><span class="line">mov ASCIICode, al</span><br></pre></td></tr></table></figure>

<h4 id="5-2-Function-12h"><a href="#5-2-Function-12h" class="headerlink" title="5.2    Function 12h"></a>5.2    Function 12h</h4><p>retrieves a copy of the keyboard status flags from the BIOS data area</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">keyFlags WORD ?</span><br><span class="line">.code</span><br><span class="line">mov ah, 12h</span><br><span class="line">int 16h</span><br><span class="line">mov keyFlags, ax</span><br></pre></td></tr></table></figure>

<h4 id="5-3-Function-11h"><a href="#5-3-Function-11h" class="headerlink" title="5.3    Function 11h"></a>5.3    Function 11h</h4><p>clear the zero flag if a key is waiting in the buffer</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">L1:</span><br><span class="line">	mov ah, 11h</span><br><span class="line">	int 16h</span><br><span class="line">	jz noKey</span><br><span class="line">	mov ah, 10h</span><br><span class="line">	int 16h</span><br><span class="line">	cmp ah, scanCode</span><br><span class="line">	je quit</span><br><span class="line">	jmp L1</span><br><span class="line">noKey:</span><br><span class="line">	or al, 1</span><br><span class="line">quit:</span><br></pre></td></tr></table></figure>

<h2 id="6-VIDEO-Programming-with-INT-10h"><a href="#6-VIDEO-Programming-with-INT-10h" class="headerlink" title="6. VIDEO Programming with INT 10h"></a>6. VIDEO Programming with INT 10h</h2><h4 id="6-1-Three-levels-of-Video-Access"><a href="#6-1-Three-levels-of-Video-Access" class="headerlink" title="6.1    Three levels of Video Access"></a>6.1    Three levels of Video Access</h4><p><a href="https://imgtu.com/i/HjMyGQ"><img src="https://s4.ax1x.com/2022/02/21/HjMyGQ.png" alt="HjMyGQ.png"></a></p>
<p><a href="https://imgtu.com/i/HjQpJe"><img src="https://s4.ax1x.com/2022/02/21/HjQpJe.png" alt="HjQpJe.png"></a></p>
<h4 id="6-2-Displaying-a-Color-String"><a href="#6-2-Displaying-a-Color-String" class="headerlink" title="6.2    Displaying a Color String"></a>6.2    Displaying a Color String</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov si, OFFSET string</span><br><span class="line">...</span><br><span class="line">mov ah, 9				; write character</span><br><span class="line">mov al, [si]			; character to display</span><br><span class="line">mov bh, 0				; video page 0</span><br><span class="line">mov bl, color			; attribute</span><br><span class="line">or bl, 10000000b		; set blink/intensity bit</span><br><span class="line">mov cx, 1				; display it one time</span><br><span class="line">int 10h</span><br></pre></td></tr></table></figure>

<h4 id="6-3-DrawLine-Program"><a href="#6-3-DrawLine-Program" class="headerlink" title="6.3    DrawLine Program"></a>6.3    DrawLine Program</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov ah, 0Ch					; white graphics pixel</span><br><span class="line">mov al, color				; pixel color</span><br><span class="line">mov bh, 0					; video page 0</span><br><span class="line">mov cx, currentX</span><br><span class="line">int 10h</span><br></pre></td></tr></table></figure>

<h4 id="6-4-Memory-Mapped-Graphics"><a href="#6-4-Memory-Mapped-Graphics" class="headerlink" title="6.4    Memory-Mapped Graphics"></a>6.4    Memory-Mapped Graphics</h4><p><a href="https://imgtu.com/i/HjwA3t"><img src="https://s4.ax1x.com/2022/02/21/HjwA3t.png" alt="HjwA3t.png"></a></p>
<h4 id="6-5-OUT-Instruction"><a href="#6-5-OUT-Instruction" class="headerlink" title="6.5    OUT Instruction"></a>6.5    OUT Instruction</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov dx, 3c8h		; port address</span><br><span class="line">mov al, 20h			; value to be sent</span><br><span class="line">out dx, al			; send to the port</span><br></pre></td></tr></table></figure>

<h2 id="7-Mouse-Programming"><a href="#7-Mouse-Programming" class="headerlink" title="7. Mouse Programming"></a>7. Mouse Programming</h2><h4 id="7-1-INT-33h"><a href="#7-1-INT-33h" class="headerlink" title="7.1    INT 33h"></a>7.1    INT 33h</h4><p>ax = 0, reset mouse and get status</p>
<p>ax = 1, show mouse</p>
<p>ax = 2, hide mouse</p>
<p>ax = 3, get mouse position &amp; status</p>
<p>ax = 4, set mouse position</p>
<p>ax = 5, get button press information</p>
<p>ax = 6, get button release information</p>
<p>ax = 7, set horizontal limits</p>
<p>ax = 8, set vertical limits</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov ax, 0</span><br><span class="line">int 33h</span><br><span class="line">cmp ax, 0</span><br><span class="line">je MouseNotAvailable</span><br><span class="line">mov numberOfButtons, bx</span><br><span class="line"></span><br><span class="line">mov ax, 1</span><br><span class="line">int 33h</span><br><span class="line">mov ax, 2</span><br><span class="line">int 33h</span><br><span class="line"></span><br><span class="line">mov ax, 3</span><br><span class="line">int 33h</span><br><span class="line">test bx, 1</span><br><span class="line">jne Left_Button_Down</span><br><span class="line">text bx, 2</span><br><span class="line">jne Right_Button_Down</span><br><span class="line">text bx,4</span><br><span class="line">jne Center_Button_Down</span><br><span class="line">mov xCoord, cx</span><br><span class="line">mov yCoord, dx</span><br><span class="line"></span><br><span class="line">mov ax, 4</span><br><span class="line">mov cx, 200</span><br><span class="line">mov dx, 100</span><br><span class="line">int 33h</span><br><span class="line"></span><br><span class="line">mov ax, 5</span><br><span class="line">mov bx, 0</span><br><span class="line">int 33h</span><br><span class="line">test ax, 1		; left button down?</span><br><span class="line">jz skip			; no - skip</span><br><span class="line">mov X_coord, cx</span><br><span class="line">mov Y_coord, dx	; save coordinates</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>汇编</category>
      </categories>
      <tags>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编第Ⅸ天</title>
    <url>/2022/02/20/%E6%B1%87%E7%BC%96/%E6%B1%87%E7%BC%96_Day9/</url>
    <content><![CDATA[<h2 id="1-Defining-Segments"><a href="#1-Defining-Segments" class="headerlink" title="1.    Defining Segments"></a>1.    Defining Segments</h2><p><a href="https://imgtu.com/i/HjgpHx"><img src="https://s4.ax1x.com/2022/02/21/HjgpHx.png" alt="HjgpHx.png"></a></p>
<span id="more"></span>

<p><a href="https://imgtu.com/i/HjgPUK"><img src="https://s4.ax1x.com/2022/02/21/HjgPUK.png" alt="HjgPUK.png"></a></p>
<h4 id="1-1-NEAR-and-FAR-Segment"><a href="#1-1-NEAR-and-FAR-Segment" class="headerlink" title="1.1    NEAR and FAR Segment"></a>1.1    NEAR and FAR Segment</h4><p><a href="https://imgtu.com/i/HjgKVP"><img src="https://s4.ax1x.com/2022/02/21/HjgKVP.png" alt="HjgKVP.png"></a></p>
<h4 id="1-2-MODEL-Directive"><a href="#1-2-MODEL-Directive" class="headerlink" title="1.2    .MODEL Directive"></a>1.2    .MODEL Directive</h4><p><a href="https://imgtu.com/i/HjgWa6"><img src="https://s4.ax1x.com/2022/02/21/HjgWa6.png" alt="HjgWa6.png"></a></p>
<p><a href="https://imgtu.com/i/HjgHsA"><img src="https://s4.ax1x.com/2022/02/21/HjgHsA.png" alt="HjgHsA.png"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;	syntax:</span><br><span class="line">		.MODEL type, language, stackdistance</span><br><span class="line">;	StackDistance can be NEARSTACK, FARSTACK(stack and data aren&#x27;t together)</span><br></pre></td></tr></table></figure>

<h4 id="1-3-STACK-Directive"><a href="#1-3-STACK-Directive" class="headerlink" title="1.3    .STACK Directive"></a>1.3    .STACK Directive</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; Syntax: .STACK [stacksize]</span><br><span class="line">; default 1024</span><br><span class="line">; example</span><br><span class="line">.stack 2048</span><br></pre></td></tr></table></figure>

<h4 id="1-4-CODE-Directive"><a href="#1-4-CODE-Directive" class="headerlink" title="1.4    .CODE Directive"></a>1.4    .CODE Directive</h4><p><a href="https://imgtu.com/i/HjRGBn"><img src="https://s4.ax1x.com/2022/02/21/HjRGBn.png" alt="HjRGBn.png"></a></p>
<h4 id="1-5-Near-Data-Segments"><a href="#1-5-Near-Data-Segments" class="headerlink" title="1.5    Near Data Segments"></a>1.5    Near Data Segments</h4><p><a href="https://imgtu.com/i/HjRBjJ"><img src="https://s4.ax1x.com/2022/02/21/HjRBjJ.png" alt="HjRBjJ.png"></a></p>
<h4 id="1-6-Far-Data-Segments"><a href="#1-6-Far-Data-Segments" class="headerlink" title="1.6    Far Data Segments"></a>1.6    Far Data Segments</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.FARDATA</span><br><span class="line">myVar</span><br><span class="line">.CODE</span><br><span class="line">	mov ax, SEG myVar		; SEG operator returns the segment value of a lab.</span><br><span class="line">	mov ds, ax</span><br></pre></td></tr></table></figure>

<h4 id="1-7-SEGMENT-Directive"><a href="#1-7-SEGMENT-Directive" class="headerlink" title="1.7    SEGMENT Directive"></a>1.7    SEGMENT Directive</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name SEGMENT [align][combine][&#x27;class&#x27;]</span><br><span class="line">	statements</span><br><span class="line">name ENDS</span><br><span class="line">; name: ExtraData</span><br><span class="line">; paragraph align type (starts on 16-byte boundary)</span><br><span class="line">; public combine type</span><br><span class="line">; &#x27;DATA&#x27;</span><br><span class="line">ExtraData SEGMENT PARA PUBLIC &#x27;DATA&#x27;</span><br><span class="line">	var1 BYTE 1</span><br><span class="line">	var2 WORD 2</span><br><span class="line">ExtraData ENDS</span><br></pre></td></tr></table></figure>

<h4 id="1-8-ASSUME-Directive"><a href="#1-8-ASSUME-Directive" class="headerlink" title="1.8    ASSUME Directive"></a>1.8    ASSUME Directive</h4><p>tells the assembler how to calculate the offsets of labels</p>
<p>associates a segment register with a segment name</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; syntax:</span><br><span class="line">	ASSUME segreg:segname [,segreg:segname]</span><br><span class="line">; example</span><br><span class="line">	ASSUME cs:myCode, ds:Data, ss:myStack</span><br><span class="line">	ASSUME es:ExtraData</span><br></pre></td></tr></table></figure>

<h4 id="1-9-Multiple-Data-Segments"><a href="#1-9-Multiple-Data-Segments" class="headerlink" title="1.9    Multiple Data Segments"></a>1.9    Multiple Data Segments</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; example 1</span><br><span class="line">cseg SEGMENT &#x27;CODE&#x27;</span><br><span class="line">ASSUME cs:cseg, ds:data1, es:data2, ss:mystack</span><br><span class="line"></span><br><span class="line">main PROC</span><br><span class="line">	mov ax, data1			; ds points to data1</span><br><span class="line">	mov ds, ax</span><br><span class="line">	mov ax, SEG val2		; es points to data2</span><br><span class="line">	mov es, ax</span><br><span class="line">	mov ax, val1</span><br><span class="line">	mov bx, val2</span><br><span class="line">	mov ax, 4C00h			; same as .exit</span><br><span class="line">	int 21h</span><br><span class="line">main ENDP</span><br><span class="line">cseg ENDS</span><br><span class="line"></span><br><span class="line">; example 2</span><br><span class="line">data1 SEGMENT &#x27;DATA&#x27;</span><br><span class="line">	var1 WORD 1001h</span><br><span class="line">data1 ENDS</span><br><span class="line"></span><br><span class="line">data2 SEGMENT &#x27;DATA&#x27;</span><br><span class="line">	var2 WORD 1002h</span><br><span class="line">data2 ENDS</span><br><span class="line"></span><br><span class="line">myStack SEGMENT PARA STACK &#x27;STACK&#x27;</span><br><span class="line">	BYTE 100h DUP(&#x27;S&#x27;)</span><br><span class="line">myStack ENDS</span><br><span class="line">END MAIN</span><br></pre></td></tr></table></figure>

<h2 id="2-Interrupt-Handling"><a href="#2-Interrupt-Handling" class="headerlink" title="2. Interrupt Handling"></a>2. Interrupt Handling</h2><h4 id="2-1-Interrupt-Vector-Table"><a href="#2-1-Interrupt-Vector-Table" class="headerlink" title="2.1    Interrupt Vector Table"></a>2.1    Interrupt Vector Table</h4><p><a href="https://imgtu.com/i/HjjMdK"><img src="https://s4.ax1x.com/2022/02/21/HjjMdK.png" alt="HjjMdK.png"></a></p>
<h4 id="2-2-Hardware-Interrupt"><a href="#2-2-Hardware-Interrupt" class="headerlink" title="2.2    Hardware Interrupt"></a>2.2    Hardware Interrupt</h4><p><a href="https://imgtu.com/i/HjjvFO"><img src="https://s4.ax1x.com/2022/02/21/HjjvFO.png" alt="HjjvFO.png"></a></p>
<h4 id="2-3-Common-IRQ-Assignments"><a href="#2-3-Common-IRQ-Assignments" class="headerlink" title="2.3    Common IRQ Assignments"></a>2.3    Common IRQ Assignments</h4><p><a href="https://imgtu.com/i/HjvPOI"><img src="https://s4.ax1x.com/2022/02/21/HjvPOI.png" alt="HjvPOI.png"></a></p>
<p><a href="https://imgtu.com/i/HjvATf"><img src="https://s4.ax1x.com/2022/02/21/HjvATf.png" alt="HjvATf.png"></a></p>
<h4 id="2-4-Interrupt-Control-Instructions"><a href="#2-4-Interrupt-Control-Instructions" class="headerlink" title="2.4    Interrupt Control Instructions"></a>2.4    Interrupt Control Instructions</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; STI = set interrupt flag</span><br><span class="line">- enable external interrupts</span><br><span class="line">- executed at beginning of an interrupt handler</span><br><span class="line">; CLI = clear interrupt flag</span><br><span class="line">- disable external interrupts</span><br><span class="line">- used before critical code sections that can&#x27;t be interrupt</span><br><span class="line">- suspends the system timer</span><br></pre></td></tr></table></figure>

<h4 id="2-5-Writing-a-Custom-Interrupt-Handler"><a href="#2-5-Writing-a-Custom-Interrupt-Handler" class="headerlink" title="2.5    Writing a Custom Interrupt Handler"></a>2.5    Writing a Custom Interrupt Handler</h4><p><a href="https://imgtu.com/i/HjxpNT"><img src="https://s4.ax1x.com/2022/02/21/HjxpNT.png" alt="HjxpNT.png"></a></p>
<p>-tip0: Function 35h get interrupt vector, returns segment offset addr of handler in es:bx</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.data</span><br><span class="line">int9Save LABEL WORD</span><br><span class="line">vector DWORD ?</span><br><span class="line">.code</span><br><span class="line">mov ah, 35h				; get interrupt</span><br><span class="line">mov al, 9				; for int 9</span><br><span class="line">int 21h					; call MS-DOS</span><br><span class="line">mov int9Save, bx		; store the offset</span><br><span class="line">mov [int9Save+2],es		; store the segment</span><br></pre></td></tr></table></figure>

<p>-tip1: Function 25h, set interrupt vector installs new interrupt handler, pointed to by ds:dx</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mov ax, SEG kybd_rtn</span><br><span class="line">mov ds, ax</span><br><span class="line">mov dx, OFFSET kybd_rtn</span><br><span class="line">mov ah, 25h</span><br><span class="line">mov al, 9h</span><br><span class="line">int 25h</span><br></pre></td></tr></table></figure>

<h4 id="2-6-Keyboard-Processing-Steps"><a href="#2-6-Keyboard-Processing-Steps" class="headerlink" title="2.6    Keyboard Processing Steps"></a>2.6    Keyboard Processing Steps</h4><p><a href="https://imgtu.com/i/HvyQYD"><img src="https://s4.ax1x.com/2022/02/21/HvyQYD.png" alt="HvyQYD.png"></a></p>
<p><a href="https://imgtu.com/i/HvywtS"><img src="https://s4.ax1x.com/2022/02/21/HvywtS.png" alt="HvywtS.png"></a></p>
<h4 id="2-7-Terminate-and-Stay-Resident-Programs"><a href="#2-7-Terminate-and-Stay-Resident-Programs" class="headerlink" title="2.7    Terminate and Stay Resident Programs"></a>2.7    Terminate and Stay Resident Programs</h4><p>installed in memory until removed by a removal program or by rebooting</p>
<h4 id="2-8-Hardware-Control-Using-I-0-Ports"><a href="#2-8-Hardware-Control-Using-I-0-Ports" class="headerlink" title="2.8    Hardware Control Using I/0 Ports"></a>2.8    Hardware Control Using I/0 Ports</h4><p><a href="https://imgtu.com/i/Hv6I58"><img src="https://s4.ax1x.com/2022/02/21/Hv6I58.png" alt="Hv6I58.png"></a></p>
<p><a href="https://imgtu.com/i/Hv6TPS"><img src="https://s4.ax1x.com/2022/02/21/Hv6TPS.png" alt="Hv6TPS.png"></a></p>
]]></content>
      <categories>
        <category>汇编</category>
      </categories>
      <tags>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>计网学习</title>
    <url>/2022/09/09/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="概论"><a href="#概论" class="headerlink" title="概论"></a>概论</h1><p>端系统通过<code>接入ISP</code>接入互联网。而<code>接入ISP</code>需要进一步互联，这样任意两个主机才能互相发送分组。可选方案，将<code>接入ISP</code>接入到<code>国家或全球ISP</code>。</p>
<p>而国家ISP直接可以使用peering link互联，也可使用IXP（internet exchange point）。可能出现区域网络，接入运行运营商isp（国家）和接入isp。最近还有content provider network 内容提供商网络，例如google，运行自己的网络。</p>
<h2 id="网络核心"><a href="#网络核心" class="headerlink" title="网络核心"></a>网络核心</h2><p>网络核心的关键功能：路由(routing)+转发(forwarding)。</p>
<h3 id="数据交换"><a href="#数据交换" class="headerlink" title="数据交换"></a>数据交换</h3><p>电路交换、报文交换、分组交换。</p>
<h5 id="电路交换-circuit-switching"><a href="#电路交换-circuit-switching" class="headerlink" title="电路交换(circuit switching)"></a>电路交换(circuit switching)</h5><p>建立连接（呼叫），通信，释放连接</p>
<p>独占资源！！如何解决？多路复用Multiplexing</p>
<h6 id="频分多路复用-FDM"><a href="#频分多路复用-FDM" class="headerlink" title="频分多路复用 FDM"></a>频分多路复用 FDM</h6><p>用户占用不同的频率带宽。</p>
<h6 id="时分多路复用-TDM"><a href="#时分多路复用-TDM" class="headerlink" title="时分多路复用 TDM"></a>时分多路复用 TDM</h6><p>将时间按TDM帧划分，每个TDM帧内划分各用户的帧。在不同的时间占用相同的频率带宽。</p>
<h6 id="波分多路复用-WDM"><a href="#波分多路复用-WDM" class="headerlink" title="波分多路复用 WDM"></a>波分多路复用 WDM</h6><p>光的频分复用。</p>
<h6 id="码分多路复用-CDM"><a href="#码分多路复用-CDM" class="headerlink" title="码分多路复用 CDM"></a>码分多路复用 CDM</h6><p>广泛用于无线链路共享。每个用户分配唯一的m bit码片序列，0用-1表示，-1用+1表示。</p>
<p>用户使用相同频率波段，编码信号=原始数据*码片序列。若发送1，发送自己的m码序列。</p>
<p>各用户码片序列相互正交。</p>
<h5 id="报文交换"><a href="#报文交换" class="headerlink" title="报文交换"></a>报文交换</h5><p>源发送信息整体，比如一个文件。</p>
<h5 id="分组交换-package-switching"><a href="#分组交换-package-switching" class="headerlink" title="分组交换(package switching)"></a>分组交换(package switching)</h5><p>报文分拆的一系列相对较小的数据包。需要报文的拆分与重组。产生额外开销。</p>
<h6 id="统计多路复用"><a href="#统计多路复用" class="headerlink" title="统计多路复用"></a>统计多路复用</h6><p>报文交换与分组交换均采用存储-转发交换方式。缓存？</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220829192710129.png" alt="image-20220829192710129"></p>
<p>传输延迟：比较报文交换与分组交换</p>
<p>分组传输延迟（时延）= $\frac{L}{R}$</p>
<p>分组交换的报文交付时间$T=M/R+nL/R$，M为报文大小，R为链路带宽，分组大小为L，路由器数为n。</p>
<p>比较分组交换与电路交换：</p>
<p>对于同一带宽链路，电路交换能容纳的用户小于分组交换。</p>
<p>适用于突发数据传输网络，资源充分共享、简单无需呼叫建立。</p>
<p>但分组交换可能产生拥塞，分组延迟和丢失。需要协议处理可靠数据传输和拥塞控制。</p>
<h3 id="计算机网络性能："><a href="#计算机网络性能：" class="headerlink" title="计算机网络性能："></a>计算机网络性能：</h3><h4 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h4><p>数据率或数据传输速率或比特率。额定速率或标称速率。</p>
<h4 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h4><p>bandwidth，数据信道能够传送的最高数据率bps</p>
<h4 id="延迟-时延delay-latency"><a href="#延迟-时延delay-latency" class="headerlink" title="延迟/时延delay latency"></a>延迟/时延delay latency</h4><p>分组交换为什么会发生丢包和时延？</p>
<p>分组在路由器缓存中排队，分组到达速率超出输出链路的速率。</p>
<p>四种分组延迟：</p>
<p>$d_{proc}$节点处理延迟，差错检测，确定输出链路，通常小于ms单位</p>
<p>$d_{queue}$排队延迟，等待输出链路可用，取决于路由器拥塞程度。</p>
<p>流量强度 $La/R$，a为平均分组到达速率，若强度-&gt;0，则平均排队延迟很小。</p>
<p>-&gt;1，平均排队延迟很大，&gt;1，超出服务能力，平均排队延迟无限大。</p>
<p>$d_{trans}$传输延迟，$d=L/R$</p>
<p>$d_{prop}$传播延迟，$d=l/s$，l为物理链路长度，信号传播速度s</p>
<p>$d_{nodal}=d_{proc}+d_{queue}+d_{trans}+d_{prop}$</p>
<h4 id="时延带宽积-传播时延-带宽"><a href="#时延带宽积-传播时延-带宽" class="headerlink" title="时延带宽积=传播时延*带宽"></a>时延带宽积=传播时延*带宽</h4><p>以bit为单位的链路长度。</p>
<h4 id="丢包率-丢包数-已发分组总数"><a href="#丢包率-丢包数-已发分组总数" class="headerlink" title="丢包率=丢包数/已发分组总数"></a>丢包率=丢包数/已发分组总数</h4><h4 id="吞吐量-率"><a href="#吞吐量-率" class="headerlink" title="吞吐量/率"></a>吞吐量/率</h4><p>吞吐量表示在发送端与接收端之间传送数据速率（即时、平均）</p>
<p>min(R_c, R_s, R/10)</p>
<h2 id="计算机分层结构"><a href="#计算机分层结构" class="headerlink" title="计算机分层结构"></a>计算机分层结构</h2><p>为什么？模块化的分层易于系统更新、维护，有利于标准化。</p>
<p>任一层实体需要使用下层服务，遵循本层协议，实现本层功能，向上层提供服务，服务是垂直的。</p>
<p>下层协议的实现对上层的服务用户是透明的。同系统的相邻层实体间通过接口进行交互，通过服务访问点SAP，交换原语，指定请求的特定服务。</p>
<h3 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h3><p>支持异构网络系统的互联互通，理论成功，市场失败。</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220829233609053.png" alt="image-20220829233609053"></p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220829234000938.png" alt="image-20220829234000938"></p>
<h4 id="数据封装"><a href="#数据封装" class="headerlink" title="数据封装"></a>数据封装</h4><p>增加控制信息，构造协议数据单元（PDU）</p>
<p>内容包括：</p>
<p>地址（标识发送端/接收端）、差错检测编码（用于差错检测或纠正），协议控制（优先级，服务质量，安全控制）</p>
<h4 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h4><p>接口特性：机械特性、电气特性、功能特性、规格特性</p>
<p>比特编码、数据率、比特同步（时钟同步）、传输模式（单工、半双工、全双工）</p>
<h4 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h4><p>组帧（Framing），负责节点-节点数据传输、物理寻址。</p>
<p>在帧头增加发送端或接收端的物理地址表示数据帧的发送端或接收端。</p>
<p>流量控制，避免淹没接收端。差错控制，检测并重传损坏或丢失帧，并避免重复帧。</p>
<p>访问控制，任意给定时刻决定哪个设备拥有链路控制使用权。</p>
<h4 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h4><p>负责源主机到目的主机数据分组(packet)交付。可能穿越多个网络，需要逻辑寻址，ip</p>
<h5 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h5><h4 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h4><p>负责源-目的的完整报文传输，分段与重组，SAP寻址（端到端）。</p>
<p>流量控制、连接控制、差错控制。</p>
<h4 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a>会话层</h4><p>对话控制，在数据流中插入同步点。</p>
<h4 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h4><p>处理两个系统间交换信息的语法与语义问题。</p>
<p>数据表示转化，转化为主机独立的编码，加密解密，压缩解压缩。</p>
<h4 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h4><p>支持用户通过用户代理或网络接口使用网络服务，FTP. SMTP, HTTP</p>
<h3 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h3><p>应用层，传输层，网络层，网络接口层</p>
<h3 id="5层参考模型"><a href="#5层参考模型" class="headerlink" title="5层参考模型"></a>5层参考模型</h3><p>应用层、传输层、网络层、数据链路层、物理层</p>
<h4 id="应用层-1"><a href="#应用层-1" class="headerlink" title="应用层"></a>应用层</h4><p>FTP, SMTP, HTTP</p>
<h4 id="传输层-1"><a href="#传输层-1" class="headerlink" title="传输层"></a>传输层</h4><p>TCP, UDP</p>
<h4 id="网络层-1"><a href="#网络层-1" class="headerlink" title="网络层"></a>网络层</h4><p>IP、路由</p>
<h4 id="链路层"><a href="#链路层" class="headerlink" title="链路层"></a>链路层</h4><p>以太网、wifi，ppp</p>
<h4 id="物理层-1"><a href="#物理层-1" class="headerlink" title="物理层"></a>物理层</h4><p>比特传输</p>
<h2 id="网络应用的体系结构"><a href="#网络应用的体系结构" class="headerlink" title="网络应用的体系结构"></a>网络应用的体系结构</h2><p>C/S，P2P，Hybrid</p>
<h4 id="C-S"><a href="#C-S" class="headerlink" title="C/S"></a>C/S</h4><p>服务器24小时提供服务，永久性访问的地址，利用大量服务器实现可拓展性</p>
<p>客户机则间歇性接入网络，可能使用动态ip，不会与其他客户通信。</p>
<h4 id="P2P"><a href="#P2P" class="headerlink" title="P2P"></a>P2P</h4><p>没有永远在线的服务器，任意节点之间可以直接通信，间隙性接入网络，可能改变ip地址。</p>
<p>优点：高度可伸缩；缺点：难以管理。</p>
<h4 id="混合"><a href="#混合" class="headerlink" title="混合"></a>混合</h4><p>例如Napster，传输使用P2P，搜索采用C/S</p>
<h2 id="进程间通信"><a href="#进程间通信" class="headerlink" title="进程间通信"></a>进程间通信</h2><p>发起通信的进程等待通信请求的进程，需要进程之间的通信机制。</p>
<h3 id="套接字：socket"><a href="#套接字：socket" class="headerlink" title="套接字：socket"></a>套接字：socket</h3><p>类似寄信。如何寻址进程？</p>
<p>每个进程需要拥有标识符，首先标识主机（ip），进程端口号。</p>
<p>需要遵守应用层协议，公开协议RFC，允许互操作；私有协议。</p>
<h3 id="应用层协议"><a href="#应用层协议" class="headerlink" title="应用层协议"></a>应用层协议</h3><p>消息的类型：请求？响应？</p>
<p>消息的语法格式：有哪些字段？每个字段如何描述。</p>
<p>字段的语义：字段信息的含义</p>
<p>规则：何时、如何发送/接收消息。</p>
<h3 id="网络应用对传输服务的需求"><a href="#网络应用对传输服务的需求" class="headerlink" title="网络应用对传输服务的需求"></a>网络应用对传输服务的需求</h3><p>数据丢失和可靠性：容忍一定（网络电话），100%可靠（文件传输）</p>
<p>时间/延迟：网络电话、网络游戏</p>
<p>带宽：网络视频，某些应用可以适应任何带宽，email</p>
<h3 id="传输层提供的传输服务"><a href="#传输层提供的传输服务" class="headerlink" title="传输层提供的传输服务"></a>传输层提供的传输服务</h3><h4 id="tcp"><a href="#tcp" class="headerlink" title="tcp"></a>tcp</h4><p>面向连接，需要建立连接，全双工。可靠的数据传输，流量控制；拥塞控制，不提供时间/延迟保障，不提供最小带宽保障。</p>
<h4 id="udp"><a href="#udp" class="headerlink" title="udp"></a>udp</h4><p>无连接，不可靠的数据传输，</p>
<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>包含多个对象，包括文件，图片，脚本等</p>
<p>基本的html文件：包含对其他对象引用的链接。</p>
<p>对象的寻址：URL，Scheme://host:port/path</p>
<p>遵循http协议</p>
<h3 id="http"><a href="#http" class="headerlink" title="http"></a>http</h3><p>C/S结构，使用tcp传输服务，无状态应用协议。</p>
<h5 id="http链接"><a href="#http链接" class="headerlink" title="http链接"></a>http链接</h5><p>非持久性链接：每个tcp连接的最多允许传输一个对象。HTTP1.0</p>
<p>传输后http服务器会主动关闭tcp连接。</p>
<p>RTT（Round Trip Time）从客户端发送一个很小的数据包到服务器并返回所需要的时间。</p>
<p>响应时间：</p>
<p>发起、建立tcp连接：1个RTT</p>
<p>发送http请求消息到http响应消息的前几个字节到达：1个RTT</p>
<p>响应消息中所含的文件对象传输时间。</p>
<p>总共时间：2RTT+文件发送时间</p>
<p>问题：</p>
<p>每个对象需要2个RTT，操作系统需要为每个tcp连接开销资源。</p>
<p>持久性连接：每个tcp连续允许传输多个对象。HTTP1.1</p>
<p>发送响应后，服务器保持tcp连接。同时还可分为无流水线的持久性连接和流水线的。</p>
<p>即无流水线的，客户端只有收到前一个响应后才发送新的请求，每个对象耗时一个RTT</p>
<p>流水线的，只要遇到一个引用对象就尽快发出请求，只需耗时1个RTT，所有引用。</p>
<h5 id="http信息"><a href="#http信息" class="headerlink" title="http信息"></a>http信息</h5><h6 id="请求信息"><a href="#请求信息" class="headerlink" title="请求信息"></a>请求信息</h6><p>ASCII: 人直接可读。</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220901002040746.png" alt="image-20220901002040746"></p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220901002323758.png" alt="image-20220901002323758"></p>
<h5 id="Cookie技术"><a href="#Cookie技术" class="headerlink" title="Cookie技术"></a>Cookie技术</h5><p>http无状态的，为了辨别用户身份，进行session跟踪而储存在用户本地终端上的数据</p>
<p>cookie组件：</p>
<p>http响应消息的cookie头部行，请求也有。</p>
<p>保存在客户端主机的cookie文件，由浏览器管理。</p>
<p>web服务器端的后台数据库。</p>
<h4 id="web缓存-代理服务器技术"><a href="#web缓存-代理服务器技术" class="headerlink" title="web缓存/代理服务器技术"></a>web缓存/代理服务器技术</h4><p>缩短客服请求的响应时间、减少机构组织的流量、在大范围内实现有效的内容分发。</p>
<p>缓存即充当客户端也充当服务端，一般由ISP架设。</p>
<p>缓存过期？使用条件性GET，加入if-modified-since</p>
<h2 id="Email"><a href="#Email" class="headerlink" title="Email"></a>Email</h2><p>组成构件：</p>
<p>邮件客户端（agent），邮件服务器，SMTP协议（Simple Mail Transfer Protocol）</p>
<p>服务器：</p>
<p>存储发给该用户的email，消息队列：存储等待发送的email</p>
<p>使用tcp进行email消息的可靠传输，端口25。使用持久性连接。</p>
<h4 id="与http对比"><a href="#与http对比" class="headerlink" title="与http对比"></a>与http对比</h4><p>http：拉式pull</p>
<p>smtp：推式push</p>
<p>都是用命令/响应交互模式，命令和状态代码都是ASCII码。</p>
<p>http：每个对象封装在独立的响应信息中</p>
<p>SMTP：每个对象在由多个部分构成的消息中发送。</p>
<h4 id="email的消息格式"><a href="#email的消息格式" class="headerlink" title="email的消息格式"></a>email的消息格式</h4><p>头部行：to，from，subject。</p>
<p>中间有空白行</p>
<p>消息体：消息本身，只能是ascii符号。</p>
<p>MIME：头部增加额外的行声明MIME的内容类型。</p>
<p>POP：下载并删除模式（如果换了客户端软件，无法重读该邮件），无状态</p>
<p>客户端命令User，Pass</p>
<p>服务器响应：+ok，-err</p>
<p>事务阶段：list，retr，dele，quit</p>
<p>IMAP：所有消息统一存放在一个地方：服务器</p>
<p>允许用户利用文件夹组织消息，支持跨会话的用户状态。</p>
<h2 id="DNS-Domain-Name-System"><a href="#DNS-Domain-Name-System" class="headerlink" title="DNS(Domain Name System)"></a>DNS(Domain Name System)</h2><p>域名向ip地址的翻译，主机别名，邮件服务器别名，负载均衡：web服务器（翻译成多个ip地址，轮流访问，实现负载均衡）</p>
<p>为什么不适用集中的DNS？</p>
<p>单点失败问题，流量问题，距离问题，维护性问题</p>
<p>分层：</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220901155856096.png" alt="image-20220901155856096"></p>
<p>根域名服务器：</p>
<p>本地域名解析服务器无法解析域名时，访问根域名服务器。</p>
<p>如果不知道映射，访问权威域名服务器。获得映射后向本地域名服务器返回映射。</p>
<p>TLD：顶级域名服务器</p>
<p>本地域名解析服务器，不严格属于层级体系；每个isp有一个本地域名服务器</p>
<p>DNS查询：迭代查询，递归查询</p>
<p>DNS缓存：</p>
<p>本地域名服务器一般会缓存顶级域名服务器的映射，因此根服务器不经常被访问。</p>
<p>DNS记录：</p>
<p>RR（resource records）（name，value，type，ttl）</p>
<p>type=A  name=主机域名，value=ip地址</p>
<p>type=B name=域，value=该域权威域名解析服务器的主机域名</p>
<p>type=CNAME，name=某一真实域名的别名，value=真实域名</p>
<p>type=MX，value时与name相对应的邮件服务器</p>
<p>DNS协议：</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220902104214033.png" alt="image-20220902104214033"></p>
<p>flags：</p>
<p>查询或恢复；期望递归；递归可用；权威回答；</p>
<h2 id="P2P-1"><a href="#P2P-1" class="headerlink" title="P2P"></a>P2P</h2><p>对于文件分发，当文件N变大时，最小分发时间趋于不变。</p>
<h3 id="bitorrent"><a href="#bitorrent" class="headerlink" title="bitorrent"></a>bitorrent</h3><p>文件划分为256KB的chunk，节点加入torrent，向traker注册获得节点静丹，建立连接。下载的同时，节点需要向其他节点上传chunk。节点可能加入或离开，一旦节点获得完整的文件，它可能留下或离开。</p>
<p>获取chunk，不同的节点持有文件的不同chunk集合，定期查询每个邻居所持有的chunk列表，节点发送请求，请求稀缺的chunk，稀缺优先。</p>
<p>发送chunk，tit-for-tat</p>
<p>alice向4个邻居发送chunk，速率最快的四个。每隔30s，随机选择一个节点，发送chunk。</p>
<h4 id="索引技术"><a href="#索引技术" class="headerlink" title="索引技术"></a>索引技术</h4><p>信息到节点位置（ip+端口）的映射。</p>
<h5 id="集中式索引"><a href="#集中式索引" class="headerlink" title="集中式索引"></a>集中式索引</h5><p>节点加入时，通知中央服务器，ip加内容</p>
<p>单点失效、性能瓶颈、版权问题</p>
<h5 id="洪泛式查询"><a href="#洪泛式查询" class="headerlink" title="洪泛式查询"></a>洪泛式查询</h5><p>完全分布式架构，每个节点对它共享的文件进行索引，且只对它共享的文件进行索引。</p>
<p>覆盖网络</p>
<p>类似BFS</p>
<h5 id="层次式覆盖网络"><a href="#层次式覆盖网络" class="headerlink" title="层次式覆盖网络"></a>层次式覆盖网络</h5><p>划分为两类节点，超级节点。超级节点负责洪泛式。</p>
<h2 id="Socket编程"><a href="#Socket编程" class="headerlink" title="Socket编程"></a>Socket编程</h2><p>表示通信端点：ip+端口号</p>
<p>如何管理？套接字描述符socket descriptor。</p>
<p>地址接口</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220904143959203.png" alt="image-20220904143959203"></p>
<p>winsock 需要建立与cleanup</p>
<h4 id="API"><a href="#API" class="headerlink" title="API"></a>API</h4><h5 id="创建套接字："><a href="#创建套接字：" class="headerlink" title="创建套接字："></a>创建套接字：</h5><p>sd = socket(protofamily, type, proto)</p>
<p>第一个参数protofamily = PF_INET</p>
<p>第二个套接字类型</p>
<p>第三个为协议号</p>
<h5 id="关闭套接字"><a href="#关闭套接字" class="headerlink" title="关闭套接字"></a>关闭套接字</h5><p>closesocket(sd)，如果多个进程共享一个套接字时，需要将引用计数减一。多线程对套接字的使用无计数。</p>
<h5 id="绑定套接字"><a href="#绑定套接字" class="headerlink" title="绑定套接字"></a>绑定套接字</h5><p>bind(sd, localaddr, addrlen)，绑定套接字的本地端口地址，ip+port</p>
<p>客户端一般不用调用bind函数，服务器端需要。</p>
<p>但若本地有多网卡，需要采用地址通配符的方式</p>
<h5 id="监听"><a href="#监听" class="headerlink" title="监听"></a>监听</h5><p>listen(sd, queuesize)，设置请求大小</p>
<h5 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h5><p>connect(sd, saddr, saddrlen)</p>
<p>客户端，tcp/udp。</p>
<h5 id="接受"><a href="#接受" class="headerlink" title="接受"></a>接受</h5><p>accept(sd, caddr, caddrlen)，调用函数从处于监听状态的流套接字sd客户链接请求队列除去排在最前的一个客户请求。</p>
<h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><h5 id="解析服务器ip地址"><a href="#解析服务器ip地址" class="headerlink" title="解析服务器ip地址"></a>解析服务器ip地址</h5><p>客户端可能使用域名或者ip地址标识服务器，IP协议许哟啊32位ip地址</p>
<p>可以inet_addr 10-&gt;32，gethostbyname 域名-&gt;32，满足网络字节顺序</p>
<h5 id="解析熟知端口号"><a href="#解析熟知端口号" class="headerlink" title="解析熟知端口号"></a>解析熟知端口号</h5><p>可以使用服务名标识，getservbyname()</p>
<h5 id="解析协议号"><a href="#解析协议号" class="headerlink" title="解析协议号"></a>解析协议号</h5><p>实现协议名到协议号的转换，getprotobyname</p>
<h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220904165610055.png" alt="image-20220904165610055"></p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220904165739253.png" alt="image-20220904165739253"></p>
<h3 id="Socket服务器"><a href="#Socket服务器" class="headerlink" title="Socket服务器"></a>Socket服务器</h3><h4 id="循环无连接"><a href="#循环无连接" class="headerlink" title="循环无连接"></a>循环无连接</h4><p>一次只处理一个客户请求</p>
<h5 id="并行"><a href="#并行" class="headerlink" title="并行"></a>并行</h5><p>创建线程，处理用户的请求。</p>
<h2 id="传输层-2"><a href="#传输层-2" class="headerlink" title="传输层"></a>传输层</h2><p>提供了一种逻辑通信机制。发送方将消息分成多个segment，并传递到网络层。而接收方负责组装成消息传给应用层。</p>
<h4 id="与网络层的区别"><a href="#与网络层的区别" class="headerlink" title="与网络层的区别"></a>与网络层的区别</h4><p>网络层负责主机之间的逻辑通信机制，而传输层提供应用进程之间的逻辑通信机制。</p>
<p>传输层依赖于网络层拂去，对网络层服务进行可能的增强。位于网络层之上。</p>
<h4 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h4><h5 id="tcp-1"><a href="#tcp-1" class="headerlink" title="tcp"></a>tcp</h5><p>可靠、按序的交付服务，拥塞控制，流量控制，连接建立</p>
<h5 id="udp-1"><a href="#udp-1" class="headerlink" title="udp"></a>udp</h5><p>best-effort。</p>
<p>两种服务均不保证延迟和带宽上面的保障。</p>
<h3 id="多路复用-分用"><a href="#多路复用-分用" class="headerlink" title="多路复用/分用"></a>多路复用/分用</h3><p>若一个协议对应上层的多个协议，则需要复用/分用。</p>
<p>接收端进行多路分用，发送端进行多路复用。</p>
<h4 id="分用"><a href="#分用" class="headerlink" title="分用"></a>分用</h4><p>每个数据报会携带地址，段，端口号和目的端口号。根据对应的端口号导入对应的socket</p>
<p>tcp会做更多的处理</p>
<h5 id="无连接分用"><a href="#无连接分用" class="headerlink" title="无连接分用"></a>无连接分用</h5><p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220905191128780.png" alt="image-20220905191128780"></p>
<h5 id="面向连接的"><a href="#面向连接的" class="headerlink" title="面向连接的"></a>面向连接的</h5><p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220905191657230.png" alt="image-20220905191657230"></p>
<h3 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h3><p>多路复用多路分用，简单的错误校验。udp段可能丢失，非按序到达。</p>
<p>无连接，不需要握手，每个udp的报文段的处理独立。</p>
<p>减少延迟，实现简单，头部开销少，没有拥塞控制，应用可以更好的控制发送时间和速率。</p>
<p>用于流媒体，可靠性靠应用层增加可靠性，应用特定的错误恢复机制。</p>
<h4 id="checksum"><a href="#checksum" class="headerlink" title="checksum"></a>checksum</h4><p>检测udp在传输中是否发生错误。</p>
<p>发送方计算checksum，将段的内容视作16bit，将所有整数求和，进位放在和的后面，将得到的值按位求反，得到校验和。</p>
<p>接收方，计算接收到的校验和，不相等说明检测出错误，但相等仍然有可能产生错误。</p>
<h4 id="可靠数据传输"><a href="#可靠数据传输" class="headerlink" title="可靠数据传输"></a>可靠数据传输</h4><p>不错，不丢，不乱</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220905193514600.png" alt="image-20220905193514600"></p>
<p>数据单向流动，控制信息双向流动。</p>
<h4 id="Rdt1-0"><a href="#Rdt1-0" class="headerlink" title="Rdt1.0"></a>Rdt1.0</h4><p>可靠信道上的可靠数据传输，底层信道完全可靠。</p>
<h4 id="Rdt2-0"><a href="#Rdt2-0" class="headerlink" title="Rdt2.0"></a>Rdt2.0</h4><p>产生位错误的信道，利用校验和检测位错误。</p>
<p>如何从错误中恢复，确认机制，NAK，重传</p>
<p>ARQ（automatic repeat request）</p>
<p>引入了差错检测，接受方反馈控制消息：ACK/NAK，重传</p>
<p>但是如果ACK, NAK发生错误了会怎么样，为ACK/NAK也增加校验和并纠错</p>
<p>或者收到被破坏的数据不知道接收方发送了什么，添加额外的控制消息。</p>
<p>如果ACK/NAK坏掉，发送方重传，不能简单的重传，会产生重复的分组。</p>
<h4 id="Rdt2-1-2-2"><a href="#Rdt2-1-2-2" class="headerlink" title="Rdt2.1 2.2"></a>Rdt2.1 2.2</h4><p>添加序列号，丢弃重复分组。</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220905233735040.png" alt="image-20220905233735040"></p>
<p>接收方通过ack告知最后一个被正确接受的分组。若发送方收到重复ACK，重传。</p>
<h4 id="Rdt3-0"><a href="#Rdt3-0" class="headerlink" title="Rdt3.0"></a>Rdt3.0</h4><p>如果信道即可能发生错误，也可能丢失分组，怎么办？</p>
<p>解决方法：发送方等待合理时间，定时器</p>
<h4 id="流水线协议"><a href="#流水线协议" class="headerlink" title="流水线协议"></a>流水线协议</h4><p>需要更大的序列号范围，需要更大的存储空间以缓存分组。</p>
<h4 id="滑动窗口协议"><a href="#滑动窗口协议" class="headerlink" title="滑动窗口协议"></a>滑动窗口协议</h4><h6 id="GBN"><a href="#GBN" class="headerlink" title="GBN"></a>GBN</h6><p>ACK(n)为累计确认机制，需要为空中的分组设置计时器，即重传序列号大于等于n，还未收到ACK的所有分组。</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220906104719516.png" alt="image-20220906104719516"></p>
<h6 id="Selective-repeat"><a href="#Selective-repeat" class="headerlink" title="Selective repeat"></a>Selective repeat</h6><p>重传过多，对每个分组单独确认，设置缓存机制，缓存乱序到达的分组。</p>
<p>发送方只重传没收到ACK的分组，需要为每个分组设置定时器。 </p>
<p>$N_s+N_r\le 2^k$</p>
<h2 id="tcp-2"><a href="#tcp-2" class="headerlink" title="tcp"></a>tcp</h2><p>序列号指的是segment第一个字节的编号而不是segment的编号。</p>
<p>在建立tcp连接时，随机选择序列号。</p>
<p>acks：希望接收到的下一个字节的序列号，累计确认机制。</p>
<h3 id="tcp的可靠数据传输"><a href="#tcp的可靠数据传输" class="headerlink" title="tcp的可靠数据传输"></a>tcp的可靠数据传输</h3><h4 id="超时时间"><a href="#超时时间" class="headerlink" title="超时时间"></a>超时时间</h4><p>起码大于RTT，多次测量，丘指数加权移动平均</p>
<p>timeoutinterval = estimate RTT + 4*devrtt</p>
<h4 id="快速重传机制"><a href="#快速重传机制" class="headerlink" title="快速重传机制"></a>快速重传机制</h4><p>如果收到对同一数据的3个ack，则假定之后的段已经丢失</p>
<h3 id="流量控制"><a href="#流量控制" class="headerlink" title="流量控制"></a>流量控制</h3><p>接收方为tcp连接提供buffer，计算可用空间返回给发送方。</p>
<p>若剩余空间为0，发送方仍然能够发送很小的一个段。否则不会再返回信息。</p>
<h3 id="连接管理"><a href="#连接管理" class="headerlink" title="连接管理"></a>连接管理</h3><p>三次握手，第一次客户主机向服务器发送SYN，返回SYNACK，服务器分配缓存，选择自己的序列号。</p>
<p>当收到SYNACK，会答复ACK，包含data</p>
<p>四次挥手，<img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220906172743550.png" alt="image-20220906172743550"></p>
<h3 id="拥塞控制"><a href="#拥塞控制" class="headerlink" title="拥塞控制"></a>拥塞控制</h3><p>发送速率太快以至于网络无法处理（排队时间）</p>
<p>拥塞的代价：<img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220906174136232.png" alt="image-20220906174136232"></p>
<h4 id="端到端的拥塞控制"><a href="#端到端的拥塞控制" class="headerlink" title="端到端的拥塞控制"></a>端到端的拥塞控制</h4><p>网络层不需要显示的提供支持</p>
<p>通过观察loss，delay等网络行为判断是否发生拥塞。tcp</p>
<h5 id="LastByteSent-LastByteAcked-lt-congwin"><a href="#LastByteSent-LastByteAcked-lt-congwin" class="headerlink" title="LastByteSent - LastByteAcked &lt;= congwin"></a>LastByteSent - LastByteAcked &lt;= congwin</h5><p>rate = Congwin / RTT</p>
<p>如何感知网络拥塞：timeout或三个重复ack</p>
<p>如何合理的调整发送速率：</p>
<h5 id="加性增-乘性减"><a href="#加性增-乘性减" class="headerlink" title="加性增-乘性减"></a>加性增-乘性减</h5><p>逐渐增加发送速率，谨慎探测可用带宽</p>
<p>每个RTT将Congwin增加一个MSS，当发生loss时将congwin减半</p>
<h5 id="慢启动"><a href="#慢启动" class="headerlink" title="慢启动"></a>慢启动</h5><p>刚开始时希望快速增长，即连接开始时，指数型增长。</p>
<h5 id="threshold"><a href="#threshold" class="headerlink" title="threshold"></a>threshold</h5><p>当超过threshold之后，应切换成线性增长。</p>
<h5 id="loss处理"><a href="#loss处理" class="headerlink" title="loss处理"></a>loss处理</h5><p>3个重复ack，采用reno</p>
<p>timeout，congwin设为1个mss，然后指数增长。</p>
<h4 id="网络辅助的拥塞控制"><a href="#网络辅助的拥塞控制" class="headerlink" title="网络辅助的拥塞控制"></a>网络辅助的拥塞控制</h4><h5 id="ABR"><a href="#ABR" class="headerlink" title="ABR"></a>ABR</h5><p>如果发送方路径拥塞，将发送速率降到最低保障速率</p>
<h5 id="RM"><a href="#RM" class="headerlink" title="RM"></a>RM</h5><p>交换机设置RMcell位，发送给接收方，再由接收方返回给发送方</p>
<h3 id="tcp性能分析"><a href="#tcp性能分析" class="headerlink" title="tcp性能分析"></a>tcp性能分析</h3><h4 id="吞吐率"><a href="#吞吐率" class="headerlink" title="吞吐率"></a>吞吐率</h4><p>要求高带宽，则要求非常低的丢包率。</p>
<h4 id="公平性"><a href="#公平性" class="headerlink" title="公平性"></a>公平性</h4><p>tcp之间是具有公平性的；</p>
<h2 id="网络层-2"><a href="#网络层-2" class="headerlink" title="网络层"></a>网络层</h2><p>转发和路由</p>
<h3 id="服务模型"><a href="#服务模型" class="headerlink" title="服务模型"></a>服务模型</h3><h5 id="无连接服务（数据包网络）"><a href="#无连接服务（数据包网络）" class="headerlink" title="无连接服务（数据包网络）"></a>无连接服务（数据包网络）</h5><p>不事先为系列分组的传输确定传输路径，不同分组独立确定传输路径。</p>
<p>转发时采用最长前缀匹配优先原则。</p>
<h5 id="连接服务（虚电路网络）"><a href="#连接服务（虚电路网络）" class="headerlink" title="连接服务（虚电路网络）"></a>连接服务（虚电路网络）</h5><p>需要实现确定路径，所有分组沿着相同路径。</p>
<p>分组交换，每个分组的传输利用链路的全部带宽。由于路由器的大小不同，虚电路号也会有所不同。转发表如下：</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220907004528918.png" alt="image-20220907004528918"></p>
<h4 id="虚电路信令协议"><a href="#虚电路信令协议" class="headerlink" title="虚电路信令协议"></a>虚电路信令协议</h4><p>目前的internet不采用</p>
<h3 id="IP协议"><a href="#IP协议" class="headerlink" title="IP协议"></a>IP协议</h3><p> 版本号：ipv4，ipv6</p>
<p>首部长度：以4个字节为单位，相当于几行</p>
<p>服务类型：指示期望获得那种类型的服务</p>
<p>总长度：16位，可以封装的最大数据为65535-20B</p>
<p>标识：16位，标识一个ip分组</p>
<p>标志位：占3位，DF=1禁止分片，MF=1，不是最后一片</p>
<p>片偏移：数据的相对偏移量，以8个bit为单位</p>
<p>ttl：ip分组在网络中可以通过的路由器数，每转发一次ttl-1；若ttl=0，丢弃该分组</p>
<p>协议：tcp or udp</p>
<p>首部校验和：对首部进行查出错检测，逐跳计算，逐跳校验</p>
<p>源ip，目的ip：各32位</p>
<p>选项字段：1~40B，很少被使用</p>
<p>填充：补齐32位</p>
<h4 id="mtu"><a href="#mtu" class="headerlink" title="mtu"></a>mtu</h4><p>分片与重组，分片过程：</p>
<p>若原ip分组总长度为L，且待转发链路的MTU为M，若L&gt;M，且DF=0，则可以/需要分片；</p>
<p>分片时，每个分片的表示复制原ip分组的标识。除了最后一片，其余均分为MTU允许的最大分片。</p>
<p>由于片偏移的单位，因此最大可封装数据应该是8的倍数，因此最大可封装的数据为$n=\lfloor(m-20)/8\rfloor*8$，需要的总片数$N=\lceil (L-20)/n\rceil$</p>
<p>每片的片偏移字段取值为，$F_i=\frac{d}{8}(i-1)$</p>
<p>每片的总长度字段：<img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220907145521762.png" alt="image-20220907145521762"></p>
<h4 id="ip编址"><a href="#ip编址" class="headerlink" title="ip编址"></a>ip编址</h4><p>ipv4，32bit；ip地址与每个接口关联</p>
<p>如何为接口分配ip地址？</p>
<p>ip地址=网络号+主机号，ip子网具有相同网络号的设备接口，不跨越路由器可以彼此物理联通的接口。</p>
<h4 id="CIDR"><a href="#CIDR" class="headerlink" title="CIDR"></a>CIDR</h4><p>消除了传统的A类、B类、C类地址界限</p>
<p>融合子网地址和子网掩码，方便子网划分；无类地址：a.b.c.d/x，x为前缀长度</p>
<p>提高了ipv4地址空间分配效率，提高路由效率，构造超网。</p>
<p>路由聚合：</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220907193009340.png" alt="image-20220907193009340"></p>
<h4 id="DHCP"><a href="#DHCP" class="headerlink" title="DHCP"></a>DHCP</h4><p>在应用层实现，使用广播的方式</p>
<p>从服务器动态获取：ip协议、子网掩码、默认网关地址、DNS服务器名称与ip地址</p>
<p>首先，主机广播DHCP discover，服务器利用DHCP offer进行响应。</p>
<p>主机请求ip地址：DHCP request，DHCP服务器分配ip地址 DHCP ack</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220907233338677.png" alt="image-20220907233338677"></p>
<h4 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h4><p>只需向isp申请一个ip地址，本地网络设备的ip地址变更无需通告外界网络；</p>
<p>变更isp时，无需修改内部网络设备ip地址；内部设备对外界不可见。</p>
<p>16bit端口号字段，可以同时支持60000多并行连接。</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220907234402588.png" alt="image-20220907234402588"></p>
<h2 id="icmp"><a href="#icmp" class="headerlink" title="icmp"></a>icmp</h2><p>差错报告，网络探寻。</p>
<h3 id="差错报告报文"><a href="#差错报告报文" class="headerlink" title="差错报告报文"></a>差错报告报文</h3><p>目的不可达，源抑制，超时/超期，参数问题，重定向</p>
<h3 id="网络探寻报文"><a href="#网络探寻报文" class="headerlink" title="网络探寻报文"></a>网络探寻报文</h3><p>echo，reply</p>
<p>时间戳请求与应答报文</p>
<h2 id="ipv6"><a href="#ipv6" class="headerlink" title="ipv6"></a>ipv6</h2><p>固定基本首部为40字节，不允许分片</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220908001617913.png" alt="image-20220908001617913"></p>
<p>移除了校验和，允许选项但是从基本首部一处。</p>
<p>ipv6-&gt;ipv4：隧道，将ipv6包放在ipv4的数据段</p>
<h3 id="路由算法"><a href="#路由算法" class="headerlink" title="路由算法"></a>路由算法</h3><h4 id="链路状态路由算法"><a href="#链路状态路由算法" class="headerlink" title="链路状态路由算法"></a>链路状态路由算法</h4><p>dijkstra，O(n^2)，更高效的实现O(nlg n)</p>
<p>存在震荡可能。</p>
<h4 id="距离向量路由算法"><a href="#距离向量路由算法" class="headerlink" title="距离向量路由算法"></a>距离向量路由算法</h4><p>每个节点不定时地将自身的$D_v$发送给邻居，当接收到邻居的$D_v$时，更新其自身的距离向量估计。</p>
<p>异步迭代，局部链路的费用改变，来自邻居的$D_v$更新。</p>
<p>分布式，每个节点只当$D_v$改变时才通告给邻居，因此是分布式的。</p>
<h5 id="存在无限计数问题"><a href="#存在无限计数问题" class="headerlink" title="存在无限计数问题"></a>存在无限计数问题</h5><p>可以采用毒性逆转，或者定义最大度量</p>
<h4 id="层次路由"><a href="#层次路由" class="headerlink" title="层次路由"></a>层次路由</h4><p>聚合路由器为一个区域：自治系统（AS）</p>
<p>同一AS内的路由器运行相同的路由算法（intra-AS)</p>
<p>AS之间，建立网关路由器，位于AS边缘，连接其他AS的网关路由器</p>
<h2 id="AS内协议"><a href="#AS内协议" class="headerlink" title="AS内协议"></a>AS内协议</h2><h3 id="RIP协议-ROUTING-INFORMATION-PROTOCOL"><a href="#RIP协议-ROUTING-INFORMATION-PROTOCOL" class="headerlink" title="RIP协议 ROUTING INFORMATION PROTOCOL"></a>RIP协议 ROUTING INFORMATION PROTOCOL</h3><p>距离向量路由算法。距离的度量采用跳步数，且最大度量为15.</p>
<p>每个30s，邻居之间交换一次DV，称为通告；最多25个目的子网。</p>
<p>如果180s没有收到通告，另据/链路失效</p>
<h3 id="OSPF-open-shortest-path-first"><a href="#OSPF-open-shortest-path-first" class="headerlink" title="OSPF open shortest path first"></a>OSPF open shortest path first</h3><p>链路状态路由算法，在整个AS范围洪泛。</p>
<p>优点：安全，可以被认证；允许使用多条相同费用的路径。集成单播路由与多播路由。</p>
<h2 id="AS间协议"><a href="#AS间协议" class="headerlink" title="AS间协议"></a>AS间协议</h2><h3 id="BGP协议"><a href="#BGP协议" class="headerlink" title="BGP协议"></a>BGP协议</h3><p>bgp会话：两个路由器交换bgp报文。open ，update（通告新路径）、keepalive，保活连接，notification，报告先前报文的差错，也可用于关闭连接。</p>
<p>通告去往不同目的的前缀的路径，基于半永久的tcp连接。</p>
<p>eBGP外部会话，iBGP内部会话。需要增加属性：AS-PATH，NEXT-HOP</p>
<p>路由器可能获知到达某目的AS的多条路由，策略决策；最短AS-PATH路径，最近NEXT-HOP</p>
<h2 id="数据链路层-1"><a href="#数据链路层-1" class="headerlink" title="数据链路层"></a>数据链路层</h2><p>组帧：封装数据报构成数据帧，加首部和尾部，帧同步</p>
<p>链路接入：如果是共享介质，需要解决信道接入</p>
<p>可靠交付：无线链路需要可靠交付</p>
<p>流量控制，差错检测，差错纠正</p>
<h3 id="差错编码"><a href="#差错编码" class="headerlink" title="差错编码"></a>差错编码</h3><p>检错码和纠错码，如果hamming距离$d_s=r+1$，可以检测r位的差错。  </p>
<p>如果编码集的hamming距离$d_s=2r+1$，则可以纠正r位的差错</p>
<h4 id="奇偶校验位"><a href="#奇偶校验位" class="headerlink" title="奇偶校验位"></a>奇偶校验位</h4><h4 id="checksum-1"><a href="#checksum-1" class="headerlink" title="checksum"></a>checksum</h4><h4 id="CRC"><a href="#CRC" class="headerlink" title="CRC"></a>CRC</h4><h2 id="mac地址"><a href="#mac地址" class="headerlink" title="mac地址"></a>mac地址</h2><p>两类链路：</p>
<p>点对点链路，拨号接入的ppp，以太网交换机与主机之间的点对点链路</p>
<p>广播链路：共享介质，早期的总线以太网，HFC的上行链路，wifi无线局域网</p>
<h4 id="单一共享广播信道"><a href="#单一共享广播信道" class="headerlink" title="单一共享广播信道"></a>单一共享广播信道</h4><p>两个或者两个以上节点同时传输：干扰</p>
<h4 id="多路访问控制协议"><a href="#多路访问控制协议" class="headerlink" title="多路访问控制协议"></a>多路访问控制协议</h4><p>三大类</p>
<h5 id="信道划分MAC协议"><a href="#信道划分MAC协议" class="headerlink" title="信道划分MAC协议"></a>信道划分MAC协议</h5><p>多路复用技术，TDMA,FDMA,CDMA,WDMA</p>
<h5 id="随机访问MAC协议"><a href="#随机访问MAC协议" class="headerlink" title="随机访问MAC协议"></a>随机访问MAC协议</h5><p>信道不划分，允许冲突，采用冲突恢复机制</p>
<h6 id="时隙ALOHA协议"><a href="#时隙ALOHA协议" class="headerlink" title="时隙ALOHA协议"></a>时隙ALOHA协议</h6><p>所有帧大小相同，时间被划分为等长的时隙，节点只能在时隙开始时刻发送帧。节点间始终同步。</p>
<p>如果有两个或两个以上节点同一时隙发送，则存在冲突；如果发生冲突，在下一个时隙以概率p重传，直至成功。</p>
<p>缺点，冲突时浪费时隙。且需要时间同步</p>
<p>效率低，最大效率时0.37</p>
<h6 id="ALOHA"><a href="#ALOHA" class="headerlink" title="ALOHA"></a>ALOHA</h6><p>当有新的帧生成，立即发送。冲突的可能性增大。效率更低。</p>
<h6 id="CSMA"><a href="#CSMA" class="headerlink" title="CSMA"></a>CSMA</h6><p>发送帧之前，监听信道；如果信道忙，</p>
<p>1-坚持CSMA</p>
<p>尽管这样冲突可能仍然发生：信号传播延迟；如果继续发送冲突帧，浪费信道资源</p>
<h6 id="CSMA-CD"><a href="#CSMA-CD" class="headerlink" title="CSMA/CD"></a>CSMA/CD</h6><p>带冲突检测的，短时间内可以检测到冲突；冲突后传输终止，减少信道浪费。</p>
<p>冲突检测：边发边听，不发不听。</p>
<p>有线容易实现，测量信号强度，比较发射信号和接收信号；无线很难实现</p>
<h5 id="轮转MAC协议"><a href="#轮转MAC协议" class="headerlink" title="轮转MAC协议"></a>轮转MAC协议</h5><p>节点轮流使用信道</p>
<p>轮询：主节点轮流邀请从属节点发送数据。具有轮询开销，等待延迟，单点故障。</p>
<p>令牌传递：令牌从一个节点传递到下一个节点。令牌开销，等待延迟，单点故障</p>
<h2 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h2><h3 id="MAC地址-物理地址"><a href="#MAC地址-物理地址" class="headerlink" title="MAC地址 物理地址"></a>MAC地址 物理地址</h3><p>用于区别帧从哪个接口发出，到达哪个物理相连的其他接口</p>
<p>48位MAC地址，固化在网卡的ROM中，有时也可以软件设置。</p>
<p>mac地址：身份证号；ip地址：邮政地址</p>
<p>mac地址是平面地址，可以携带，从一个LAN到另一个LAN；</p>
<p>ip地址是层次结构，依赖于节点连接到哪个子网</p>
<h3 id="arp"><a href="#arp" class="headerlink" title="arp"></a>arp</h3><p>ARP表：<img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220909003630768.png" alt="image-20220909003630768"></p>
<p>若不在arp表中，广播查询分组，FF-FF-FF-FF-FF-FF，随后利用单播帧应答。</p>
<h2 id="以太网"><a href="#以太网" class="headerlink" title="以太网"></a>以太网</h2><p>不可靠，无连接服务；MAC协议，采用二进制指数退避算法的CSMA/CDC协议</p>
<p>第m次连续冲突后，$n=Min(m,10)$，随机选取${0,1,2,…,2^n-1}$中随机选数，等待512*该数的传输延迟时间。</p>
<p>如果连续冲突次数越多，平均等待时间越长。</p>
<h4 id="以太网帧结构"><a href="#以太网帧结构" class="headerlink" title="以太网帧结构"></a>以太网帧结构</h4><p>前导码8B，七个字节的10101010，第八个字节为10101011用于时钟同步。</p>
<p>目的mac地址、源mac地址，各6B</p>
<p>type：封装的是哪种高层协议的而分组；</p>
<p>数据：指上层协议载荷。CRC:循环冗余校验码</p>
<p>不同的以太网</p>
<h3 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h3><p>链路层设备，存储转发以太网帧，检测到达帧的目的MAC地址，选择性向一个或多个输出链路转发帧。透明</p>
<p>交换机有交换表，存放(主机的MAC地址，到达主机的接口，时间戳)</p>
<p>若不在交换表中，采取洪泛。</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220909110416525.png" alt="image-20220909110416525"></p>
<h3 id="VLAN"><a href="#VLAN" class="headerlink" title="VLAN"></a>VLAN</h3><h4 id="基于端口的VLAN"><a href="#基于端口的VLAN" class="headerlink" title="基于端口的VLAN"></a>基于端口的VLAN</h4><p>流量隔离，动态成员，使用路由器，完成VLAN转发。</p>
<p>去往端口1-8的帧指到达端口1-8</p>
<h3 id="PPP"><a href="#PPP" class="headerlink" title="PPP"></a>PPP</h3><p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220909112513873.png" alt="image-20220909112513873"></p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220909112928820.png" alt="image-20220909112928820"></p>
<h2 id="WIFI"><a href="#WIFI" class="headerlink" title="WIFI"></a>WIFI</h2><p>802.11b：</p>
<p>将频谱划分为11个不同频率的信道，每个accesspoint选择一个频率，存在干扰的可能。</p>
<p>主机必须与某个AP关联。扫描信道，监听包含ap名称和mac地址的信标帧。选择一个ap关联。</p>
<p>被动扫描和主动扫描</p>
<h3 id="多路访问控制"><a href="#多路访问控制" class="headerlink" title="多路访问控制"></a>多路访问控制</h3><p>CSMA，但不能像CSMA/CD边发送边检测从冲突，无线信道很难实现。</p>
<p>CSMA/CA</p>
<p>sender：检测信道空闲了DIFS时间，发送整个帧；如果信道忙，随机退避计时。</p>
<p>receiver：SIFS</p>
<p>允许预约信道，发送端，利用CSMA向BS发送一个很短的RTS帧，仍然可能发生冲突。</p>
<p>随后BS广播一个CTS帧作为响应，消除隐藏站的影响。接收到数据后，广播ACK</p>
<p><img src="C:\Users\23960\AppData\Roaming\Typora\typora-user-images\image-20220909133949083.png" alt="image-20220909133949083"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
</search>
